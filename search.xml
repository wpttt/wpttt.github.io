<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DOS编程2-循环</title>
    <url>/2020/04/22/DOS%E7%BC%96%E7%A8%8B2-%E5%BE%AA%E7%8E%AF/</url>
    <content><![CDATA[<p>  如果你有什么命令不懂，直接在CMD下面输入:<code>name /?</code> 这样的格式来看系统给出的帮助文件，比如<code>for /?</code> 就会把<code>FOR</code>命令的帮助全部显示出来! 当然许多菜鸟都看不懂… 所以才会有那么多批处理文章! 下面把<code>FOR</code>命令作以说明!</p>
<a id="more"></a>
<h1>基本格式</h1>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> <span class="variable">%%v</span>ariable <span class="keyword">IN</span> (<span class="built_in">set</span>) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure>
<pre><code>%%variable            指定一个单一字母表示可替换的参数。
(set)                 指定一个或一组文件。可以使用通配符。
command               指定对每个文件执行的命令。
command-parameters    为特定命令指定参数或命令行开关。
</code></pre>
<p>参数:<code>FOR</code>有4个参数 <code>/d</code>、<code>/l</code>、<code>/r</code>、<code>/f</code>他们的作用在下面用例子解释<br>
现在开始讲每个参数的意思</p>
<h1>参数详解</h1>
<h2 id="d-主要搜索匹配目录"><a class="header-anchor" href="#d-主要搜索匹配目录">¶</a><code>/d</code> 主要搜索匹配目录</h2>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /D <span class="variable">%%v</span>ariable <span class="keyword">IN</span> (<span class="built_in">set</span>) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure>
<p>  如果集中包含通配符，则指定与目录名匹配，而不与文件名匹配。<br>
如果 <code>Set</code> (也就是我上面写的 “相关文件或命令”) 包含通配符（<code>*</code> 和 <code>?</code>），将对与 <code>Set</code> 相匹配的每个目录（而不是指定目录中的文件组）执行指定的 Command。<br>
这个参数主要用于目录搜索，不会搜索文件，看这样的例子</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /d <span class="variable">%%i</span> <span class="keyword">in</span> (c:\*) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行会把C盘根目录下的全部目录名字打印出来，而文件名字一个也不显示!</p>
<p>  再来一个，比如我们要把当前路径下文件夹的名字只有1-3个字母的打出来</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /d <span class="variable">%%i</span> <span class="keyword">in</span> (???) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>这样的话如果你当前目录下有目录名字只有1-3个字母的，就会显示出来，没有就不显示了<br>
这里解释下<code>*</code>号和<code>?</code>号的作用，<code>*</code>号表示任意N个字符，而<code>?</code>号只表示任意一个字符<br>
知道作用了，给大家个思考题目!</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /d <span class="variable">%%i</span> <span class="keyword">in</span> (window?) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>保存到C盘下执行，会显示什么呢?自己看吧! 显示：<code>windows /D</code>参数只能显示当前目录下的目录名字，这个大家要注意!</p>
<h2 id="R-搜索指定目录树中的匹配文件"><a class="header-anchor" href="#R-搜索指定目录树中的匹配文件">¶</a><code>/R</code> 搜索指定目录树中的匹配文件</h2>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /R [[drive:]<span class="built_in">path</span>] <span class="variable">%%v</span>ariable <span class="keyword">IN</span> (<span class="built_in">set</span>) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure>
<p>  检查以 <code>[drive:]path</code> 为根的目录树，指向每个目录中的<code>FOR</code> 语句。如果在 <code>/R</code> 后没有指定目录，则使用当前<br>
目录。如果集为一个单点<code>.</code>字符，则枚举该目录树。</p>
<p>递归</p>
<p>上面我们知道，<code>/D</code>只能显示当前路径下的目录名字，那么现在这个<code>/R</code>也是和目录有关，他能干嘛呢?放心他比<code>/D</code>强大多了!它可以把当前或者你指定路径下的文件名字全部读取，注意是文件名字，有什么用看例子!</p>
<p><strong>请注意2点：</strong></p>
<ul>
<li>1、<code>set</code>中的文件名如果含有通配符<code>？</code>或<code>*</code>，则列举/R参数指定的目录及其下面的所用子目录中与<code>set</code>相符合的所有文件，无相符文件的目录则不列举。如果目录树中没有相符的文件，或者指定的目录根本不存在，这两种情况下均不会列举目录。\</li>
<li>2、相反，如果<code>set</code>中为具体文件名（即不含通配符<code>?</code>和<code>*</code>)，则枚举该目录树（即列举该目录及其下面的所子目录），而不管<code>set</code>中的指定文件是否存在，也就是说，此时不但列举含有指定文件的目录，也要列举不含指定文件的其它所有目录。这与前面所说的单点<code>.</code>枚举目录树是一个道理，单点代表当前目录，也可视为一个文件。此时哪怕指定的目录根本不存在，同样会列举目录。 <br>
比如： <code>for /r M:\不存在 %%i in (1.exe) do echo %%i</code>    <br>
运行显示：<code>M:\不存在\1.exe</code></li>
</ul>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /r c:\ <span class="variable">%%i</span> <span class="keyword">in</span> (*.exe) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>把这个BAT保存到D盘随便哪里然后执行，就会看到，他把C盘根目录和每个目录的子目录下面全部的EXE文件都列出来了!!!没有exe文件的目录则不列举。</p>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /r <span class="variable">%%i</span> <span class="keyword">in</span> (*.exe) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>参数不一样了吧!这个命令前面没加那个<code>C:\</code>也就是搜索路径，这样他就会以当前目录为搜索路径，比如你这个BAT你把他放在<code>d:\test</code>目录下执行，那么他就会把<code>D:\test</code>目录和他下面的子目录的全部EXE文件列出来!!!</p>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /r c:\ <span class="variable">%%i</span> <span class="keyword">in</span> (boot.ini) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行本例发现枚举了c盘所有目录。<br>
为了只列举boot.ini存在的目录，可改成下面这样：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /r c:\ <span class="variable">%%i</span> <span class="keyword">in</span> (boot.ini) <span class="keyword">do</span> <span class="keyword">if</span> <span class="keyword">exist</span> <span class="variable">%%i</span> <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>用这条命令搜索文件真不错。。。。。。<br>
这个参数大家应该理解了吧!还是满好玩的命令!</p>
<h2 id="L-按数字序列-start-step-end-循环"><a class="header-anchor" href="#L-按数字序列-start-step-end-循环">¶</a><code>/L</code> 按数字序列(start,step,end)循环</h2>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /L <span class="variable">%%v</span>ariable <span class="keyword">IN</span> (<span class="built_in">start</span>,step,end) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure>
<p>  该集表示以增量形式从开始到结束的一个数字序列。因此，<code>(1,1,5)</code> 将产生序列 <code>1 2 3 4 5</code>，<code>(5,-1,1)</code> 将产生 序列 <code>5 4 3 2 1</code>。使用迭代变量设置起始值 <code>Start#</code>，然后逐步执行一组范围的值，直到该值超过所设置的终止值 <code>End#</code>。<code>/L</code> 将通过对 <code>Start#</code> 与 <code>End#</code> 进行比较来执行迭代变量。如果 <code>Start# </code>小于 <code>End#</code>，就会执行该命令。如果迭代变量超过 <code>End#</code>，则命令解释程序退出此循环。还可以使用负的 <code>Step#</code> 以递减数值的方式逐步执行此范围内的值。例如，<code>(1,1,5)</code> 生成序列 <code>1 2 3 4 5</code>，而 <code>(5,-1,1)</code> 则生成序列 <code>5 4 3 2 1</code>。</p>
<p>语法是：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="comment">rem 看着这说明有点晕吧!咱们看例子就不晕了!</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /l <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>) <span class="keyword">do</span> @<span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>保存执行看效果，他会打印<code>1 2 3 4 5</code>  这样5个数字<br>
<code>(1,1,5)</code>这个参数也就是表示从1开始每次加1直到5终止!</p>
<p>等会晕，就打印个数字有P用…好的满足大家，看这个例子</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">for</span> /l <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>) <span class="keyword">do</span> <span class="built_in">start</span> <span class="built_in">cmd</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>执行后是不是吓了一跳，怎么多了5个CMD窗口，呵呵!如果把那个 <code>(1,1,5)</code>改成 <code>(1,1,65535)</code>会有什么结果，我先告诉大家，会打开65535个CMD窗口…这么多你不死机算你强!<br>
当然我们也可以把那个<code>start cmd</code>改成<code>md %%i</code> 这样就会建立指定个目录了!!!名字为1-65535<br>
看完这个被我赋予破坏性质的参数后，我们来看最后一个参数</p>
<h2 id="F-处理命令输出、字符串及文件内容"><a class="header-anchor" href="#F-处理命令输出、字符串及文件内容">¶</a><code>/F</code> 处理命令输出、字符串及文件内容</h2>
<p><strong>迭代及文件解析</strong></p>
<p>  使用文件解析来处理命令输出、字符串及文件内容。使用迭代变量定义要检查的内容或字符串，并使用各种options选项进一步修改解析方式。使用options令牌选项指定哪些令牌应该作为迭代变量传递。<br>
请注意：在没有使用令牌选项时，<code>/F</code> 将只检查第一个令牌。<br>
文件解析过程包括读取输出、字符串或文件内容，将其分成独立的文本行以及再将每行解析成零个或更多个令牌。然后通过设置为令牌的迭代变量值，调用 <code>for</code> 循环。默认情况下，<code>/F</code> 传递每个文件每一行的第一个空白分隔符号。跳过空行。<br>
详细的帮助格式为：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F ["options"] <span class="variable">%%v</span>ariable <span class="keyword">IN</span> (file-<span class="built_in">set</span>) <span class="keyword">DO</span> command [command-parameters]</span><br><span class="line"><span class="keyword">FOR</span> /F ["options"] <span class="variable">%%v</span>ariable <span class="keyword">IN</span> ("string") <span class="keyword">DO</span> command [command-parameters]</span><br><span class="line"><span class="keyword">FOR</span> /F ["options"] <span class="variable">%%v</span>ariable <span class="keyword">IN</span> ('command') <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure>
<p>带引号的字符串<code>&quot;options&quot;</code>包括一个或多个指定不同解析选项的关键字。这些关键字为:</p>
<pre><code>eol=c           - 指一个行注释字符的结尾(就一个)
skip=n          - 指在文件开始时忽略的行数。
delims=xxx      - 指分隔符集。这个替换了空格和跳格键的
                  默认分隔符集。
tokens=x,y,m-n  - 指每行的哪一个符号被传递到每个迭代
                  的 for 本身。这会导致额外变量名称的分配。m-n
                  格式为一个范围。通过 nth 符号指定 mth。如果
                  符号字符串中的最后一个字符星号，
                  那么额外的变量将在最后一个符号解析之后
                  分配并接受行的保留文本。经测试，该参数最多
                  只能区分31个字段。
usebackq        - 使用后引号（键盘上数字1左面的那个键`）。
                    未使用参数usebackq时：file-set表示文件，但不能含有空格
                    双引号表示字符串，即&quot;string&quot;
                    单引号表示执行命令，即'command'
                    使用参数usebackq时：file-set和&quot;file-set&quot;都表示文件
                    当文件路径或名称中有空格时，就可以用双引号括起来
                    单引号表示字符串，即'string'
                    后引号表示命令执行，即`command`
</code></pre>
<p>以上是用<code>for /?</code>命令获得的帮助信息，直接复制过来的。<br>
晕惨了!我这就举个例子帮助大家来理解这些参数!</p>
<p><code>For</code>命令例1：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="comment">rem 首先建立临时文件test.txt</span></span><br><span class="line"><span class="built_in">echo</span> ;注释行，这是临时文件，用完删除 &gt;test.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="number">11</span>段 <span class="number">12</span>段 <span class="number">13</span>段 <span class="number">14</span>段 <span class="number">15</span>段 <span class="number">16</span>段 &gt;&gt;test.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="number">21</span>段,<span class="number">22</span>段,<span class="number">23</span>段,<span class="number">24</span>段,<span class="number">25</span>段,<span class="number">26</span>段 &gt;&gt;test.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="number">31</span>段-<span class="number">32</span>段-<span class="number">33</span>段-<span class="number">34</span>段-<span class="number">35</span>段-<span class="number">36</span>段 &gt;&gt;test.txt</span><br><span class="line"><span class="keyword">FOR</span> /F "eol=; tokens=<span class="number">1</span>,<span class="number">3</span>* delims=,- " <span class="variable">%%i</span> <span class="keyword">in</span> (test.txt) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%i</span> <span class="variable">%%j</span> <span class="variable">%%k</span></span><br><span class="line"><span class="built_in">Pause</span></span><br><span class="line"><span class="built_in">Del</span> test.txt</span><br></pre></td></tr></table></figure>
<p>运行显示结果：</p>
<pre><code>11段 13段 14段 15段 16段
21段 23段 24段,25段,26段
31段 33段 34段-35段-36段
请按任意键继续. . .
</code></pre>
<p>为什么会这样? 我来解释：</p>
<p><code>eol=;</code>          分号开头的行为注释行<br>
<code>tokens=1,3*</code>    将每行第1段，第3段和剩余字段分别赋予变量%%i，%%j，%%k<br>
<code>delims=,- </code>     （减号后有一空格）以逗号减号和空格为分隔符，空格必须放在最后</p>
<!-- `For`命令例2： -->
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">FOR</span> /F "eol= delims=" <span class="variable">%%i</span> <span class="keyword">in</span> (test.txt) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">Pause</span></span><br><span class="line">&lt;!-- ``` --&gt;</span><br><span class="line">运行将显示test.txt全部内容，包括注释行。</span><br><span class="line"></span><br><span class="line">另外`/F`参数还可以输出命令的结果，看这个例子</span><br><span class="line"></span><br><span class="line">`<span class="keyword">For</span>`命令例<span class="number">3</span>：</span><br><span class="line"></span><br><span class="line">```<span class="built_in">cmd</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">FOR</span> /F "delims=" <span class="variable">%%i</span> <span class="keyword">in</span> ('<span class="built_in">net</span> user') <span class="keyword">do</span> @<span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>这样你本机全部帐号名字就出来了。把扩号内的内容用两个单引号引起来就表示那个当命令执行，<code>FOR</code>会返回命令的每行结果，加那个<code>&quot;delims=&quot;</code>是为了让我空格的行能整行显示出来，不加就只显示空格左边一列!</p>
<p><code>FOR</code> 的基本用法就这些了…如果看过<code>FOR</code>的系统帮助，你会发现他下面还有一些特定义的变量，这些先不做介绍。</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>批处理</tag>
        <tag>DOS</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS编程1-批处理基础</title>
    <url>/2020/04/22/DOS%E7%BC%96%E7%A8%8B1-%E6%89%B9%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p><em>本教程来源网络，如有问题请自行鉴别</em></p>
<p>批处理定义：<br>
  批处理文件是将一系列命令按一定的顺序集合为一个可执行的文本文件，其扩展名为BAT或者CMD。这些命令统称批处理命令。</p>
<a id="more"></a>
<blockquote>
<p><img class="emoji" draggable="false" alt="💡" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f4a1.png"/> <strong>小知识：</strong><br>
可以在键盘上按下Ctrl+C组合键来强行终止一个批处理的执行过程。</p>
</blockquote>
<p>了解了大概意思后，我们正式开始学习.先看一个简单的例子!</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> "欢迎来到非常BAT!"</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>把上面的3条命令保存为文件test.bat或者test.cmd然后执行，他就会在屏幕上显示以下二行话:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">欢迎来到非常BAT!</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure>
<p>这就是一个简单批处理文件了，这个批处理文件一共就用了2条命令 <code>echo</code> 和<code>pause</code> 还有一个特殊符号<code>@</code></p>
<p>  从上面这个简单的批处理中，我们可以发现其实批处理就是运用一些含有特殊意义的符号和一些完成指定功能的命令组合而成，那么在批处理中有多少这样的特殊符号和功能命令呢？我们现在就来仔细了解一下一些最常用的!</p>
<p>(以下内容来源网络，请各位仔细阅读，好进入下节的实例说明)</p>
<hr>
<h1>第一节 常用批处理内部命令简介</h1>
<pre><code>1. REM 和 ::
2. ECHO 和 @
3. PAUSE 暂停
4. ERRORLEVEL
5. TITLE 设置cmd窗口的标题
6. COLOR 设置cmd窗口前景和背景颜色
7. mode 配置系统设备
8. GOTO 和 :
9. FIND 在文件中搜索字符串
10. START 调用外部程序并任其在新窗口自行运行
11. assoc 和 ftype
12. pushd 和 popd
13. CALL 调用批处理程序或命令并等待其执行完毕
14. shift
15. IF
16. setlocal 与 变量延迟
17. ATTRIB  显示或更改文件属性
18. findstr 在文件中搜索字符串（find增强版）
19. date /t 和 time /t
</code></pre>
<h2 id="介绍命令"><a class="header-anchor" href="#介绍命令">¶</a>介绍命令</h2>
<h3 id="REM-和"><a class="header-anchor" href="#REM-和">¶</a><code>REM</code> 和 <code>::</code></h3>
<p><strong><code>REM</code></strong> 为注释命令，一般用来给程序加上注解，该命令后的内容不被执行，但能回显。<strong><code>::</code></strong> 也可以起注释作用， 而且更简洁有效; 但有两点需要注意：</p>
<ul>
<li>
<p>1 任何以冒号 <strong><code>:</code></strong> 开头的字符行，在批处理中都被视作标号，而直接忽略其后的所有内容。而标号分为有效和无效两种。有效标号 <strong><code>:</code></strong> 冒号后紧跟一个以字母数字开头的字符串，<em><code>goto</code></em> 语句可以识别。无效标号 <strong><code>:</code></strong> 冒号后紧跟一个非字母数字的一个特殊符号，<em><code>goto</code></em> 无法别的标号。无效可以起到注释作用，所以 <strong><code>::</code></strong> 常被用作注释符号，其实 <strong><code>:+</code></strong> 也可起注释作用。</p>
</li>
<li>
<p>2 与 <strong><code>rem</code></strong> 不同的是， <strong><code>::</code></strong> 后的字符行在执行时不会回显， 无论是否用 <em><code>echo on</code></em> 打开命令行回显状态， 因为命令解释器不认为他是一个有效的命令行， 就此点来看， <strong><code>rem</code></strong> 在某些场合下将比 <strong><code>::</code></strong> 更为适用; 另外， <strong><code>rem</code></strong> 可以用于 <em><code>config.sys</code></em> 文件中。</p>
</li>
</ul>
<p>行内注释格式：%注释内容%  （不常用，容易引起语法错误，慎用少用）</p>
<h3 id="ECHO-和"><a class="header-anchor" href="#ECHO-和">¶</a><code>ECHO</code> 和 <code>@</code></h3>
<p><strong><code>@*</code></strong> 字符放在命令前将关闭该命令回显，无论此时<code>echo</code>是否为打开状态。<br>
<code>echo</code>命令的作用列举如下：</p>
<ul>
<li>（1）打开回显或关闭回显功能</li>
</ul>
<p>格式:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> [&#123; on|off &#125;]</span><br></pre></td></tr></table></figure>
<p>如果想关闭<code>ECHO OFF</code>命令行自身的显示，则需要在该命令行前加上“<strong><code>@</code></strong>”。</p>
<ul>
<li>（2）显示当前<code>ECHO</code>设置状态</li>
</ul>
<p>格式:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span></span><br></pre></td></tr></table></figure>
<ul>
<li>（3）输出提示信息</li>
</ul>
<p>格式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ECHO</span> 信息内容</span><br></pre></td></tr></table></figure>
<p><strong>上述是<code>ECHO</code>命令常见的三种用法，也是大家熟悉和会用的，但作为DOS命令淘金者你还应该知道下面的技巧：</strong></p>
<ul>
<li>（4）关闭DOS命令提示符</li>
</ul>
<p>在DOS提示符状态下键入<code>ECHO OFF</code>，能够关闭DOS提示符的显示使屏幕只留下光标，直至键入<code>ECHO ON</code>，提示符才会重新出现。</p>
<ul>
<li>（5）输出空行，即相当于输入一个回车</li>
</ul>
<p>格式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ECHO</span>.</span><br></pre></td></tr></table></figure>
<p>==值得注意的是： 命令行中的“．”要紧跟在<code>ECHO</code>后面中间不能有空格，否则“．”将被当作提示信息输出到屏幕。==<br>
另外<code>．</code>可以用<code>，</code>、<code>：</code>、<code>；</code>、<code>”</code>、<code>／</code>、<code>[</code>、<code>]</code>、<code>\</code>、<code>＋</code>等任一符号替代。</p>
<p>命令<code>ECHO．</code>输出的回车，经DOS管道转向可以作为其它命令的输入，比如<code>echo.|time</code>即相当于在<code>TIME</code>命令执行后给出一个回车。所以执行时系统会在显示当前时间后，自动返回到DOS提示符状态</p>
<ul>
<li>（6）答复命令中的提问<br>
格式：</li>
</ul>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ECHO</span> 答复语|命令文件名</span><br></pre></td></tr></table></figure>
<p>上述格式可以用于简化一些需要人机对话的命令（如：<code>CHKDSK／F</code>；<code>FORMAT Drive:</code>；<code>del *.*</code>）的操作，它是通过DOS管道命令把<code>ECHO</code>命令输出的预置答复语作为人机对话命令的输入。下面的例子就相当于在调用的命令出现人机对话时输入<code>Y</code>回车：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:&gt;<span class="title">ECHO</span> <span class="title">Y</span>|<span class="title">CHKDSK</span>/<span class="title">F</span></span></span><br><span class="line"><span class="function"><span class="title">C</span>:&gt;<span class="title">ECHO</span> <span class="title">Y</span>|<span class="title">DEL</span> <span class="title">A</span> :*.*</span></span><br></pre></td></tr></table></figure>
<ul>
<li>（7）建立新文件或增加文件内容<br>
格式：</li>
</ul>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ECHO</span> 文件内容&gt;文件名</span><br><span class="line"><span class="built_in">ECHO</span> 文件内容&gt;&gt;文件名</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:&gt;<span class="title">ECHO</span> @<span class="title">ECHO</span> <span class="title">OFF</span>&gt;<span class="title">AUTOEXEC.BAT</span> 建立自动批处理文件</span></span><br><span class="line"><span class="function"><span class="title">C</span>:&gt;<span class="title">ECHO</span> <span class="title">C</span>:\<span class="title">CPAV</span>\<span class="title">BOOTSAFE</span>&gt;&gt;<span class="title">AUTOEXEC.BAT</span> 向自动批处理文件中追加内容</span></span><br></pre></td></tr></table></figure>
<ul>
<li>（8）向打印机输出打印内容或打印控制码</li>
</ul>
<p>格式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ECHO</span> 打印机控制码&gt;<span class="built_in">PRN</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ECHO</span> 打印内容&gt;<span class="built_in">PRN</span></span><br></pre></td></tr></table></figure>
<p>用得很少，了解就可以了</p>
<p>下面的例子是向M-1724打印机输入打印控制码。</p>
<p><strong>＜Alt＞156</strong>是按住Alt键在小键盘键入156，类似情况依此类推：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:&gt;<span class="title">ECHO</span> +156+42+116&gt;<span class="title">PRN</span>（输入下划线命令<span class="title">FS</span>＊<span class="title">t</span>）</span></span><br><span class="line"><span class="function"><span class="title">C</span>:&gt;<span class="title">ECHO</span> <span class="title">PRN</span>"&gt;+155@&gt;<span class="title">PRN</span>（输入初始化命令<span class="title">ESC</span>@）</span></span><br><span class="line"><span class="function"><span class="title">C</span>:&gt;<span class="title">ECHO</span>.&gt;<span class="title">PRN</span>（换行）</span></span><br></pre></td></tr></table></figure>
<ul>
<li>（9）使喇叭鸣响</li>
</ul>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:&gt;<span class="title">ECHO</span> ^<span class="title">G</span></span></span><br></pre></td></tr></table></figure>
<p>“<strong><code>^G</code></strong>”是在dos窗口中用Ctrl＋G或Alt＋007输入，输入多个<code>^G</code>可以产生多声鸣响。使用方法是直接将其加入批处理文件中或做成批处理文件调用。<br>
这里的<code>^G</code>属于特殊符号的使用，请看本文后面的章节</p>
<h3 id="PAUSE-暂停"><a class="header-anchor" href="#PAUSE-暂停">¶</a><code>PAUSE</code> 暂停</h3>
<p><strong><code>PAUSE</code></strong>，玩游戏的人都知道，暂停的意思在这里就是停止系统命令的执行并显示下面的内容。</p>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">PAUSE</span></span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<pre><code>请按任意键继续. . .
</code></pre>
<p>要显示其他提示语，可以这样用：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Echo</span> 其他提示语 &amp; <span class="built_in">pause</span> &gt; <span class="built_in">nul</span></span><br></pre></td></tr></table></figure>
<h3 id="errorlevel-程序返回码"><a class="header-anchor" href="#errorlevel-程序返回码">¶</a><code>errorlevel</code> 程序返回码</h3>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">%errorlevel%</span></span><br></pre></td></tr></table></figure>
<p>每个命令运行结束，可以用这个命令行格式查看返回码<br>
用于判断刚才的命令是否执行成功<br>
<br>
默认值为0，一般命令执行出错会设 <code>errorlevel</code> 为1</p>
<h3 id="title-设置cmd窗口的标题"><a class="header-anchor" href="#title-设置cmd窗口的标题">¶</a>title 设置cmd窗口的标题</h3>
<p>设置cmd窗口的标题，批处理编程常用。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">title</span> 新标题</span><br></pre></td></tr></table></figure>
<p>可以看到cmd窗口的标题栏变了</p>
<h3 id="COLOR-设置cmd窗口前景和背景颜色"><a class="header-anchor" href="#COLOR-设置cmd窗口前景和背景颜色">¶</a>COLOR 设置cmd窗口前景和背景颜色</h3>
<p>设置默认的控制台前景和背景颜色。批处理编程常用。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">COLOR</span> [attr]</span><br></pre></td></tr></table></figure>
<p><strong><code>attr</code></strong>   指定控制台输出的颜色属性</p>
<p>颜色属性由两个十六进制数字指定 – 第一个为背景，第二个则为<br>
前景。每个数字可以为以下任何值之一:</p>
<pre><code>0 = 黑色       8 = 灰色
1 = 蓝色       9 = 淡蓝色
2 = 绿色       A = 淡绿色
3 = 湖蓝色     B = 淡浅绿色
4 = 红色       C = 淡红色
5 = 紫色       D = 淡紫色
6 = 黄色       E = 淡黄色
7 = 白色       F = 亮白色
</code></pre>
<p>如果没有给定任何参数，该命令会将颜色还原到 CMD.EXE 启动时<br>
的颜色。这个值来自当前控制台窗口、/T开关或<br>
DefaultColor 注册表值。<br>
如果用相同的前景和背景颜色来执行 <code>COLOR</code> 命令，<code>COLOR</code> 命令<br>
会将 <code>ERRORLEVEL</code> 设置为 1。<br>
<br>
例如:<code>COLOR fc</code> 在亮白色上产生亮红色</p>
<h3 id="mode-配置系统设备"><a class="header-anchor" href="#mode-配置系统设备">¶</a>mode 配置系统设备</h3>
<p>配置系统设备。<br>
串行口:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">MODE</span> COMm[:] [BAUD=b] [PARITY=p] [DATA=d] [STOP=s]</span><br><span class="line">[to=on|off] [xon=on|off] [odsr=on|off</span><br><span class="line">[octs=on|off] [dtr=on|off|hs]</span><br><span class="line">[rts=on|off|hs|tg] [idsr=on|off]</span><br><span class="line">```  </span><br><span class="line">设备状态: </span><br><span class="line">```<span class="built_in">cmd</span></span><br><span class="line"><span class="built_in">MODE</span> [device] [/STATUS]</span><br></pre></td></tr></table></figure>
<p>打印重定向:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">MODE</span> LPTn[:]=COMm[:]</span><br></pre></td></tr></table></figure>
<p>选定代码页:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">MODE</span> <span class="built_in">CON</span>[:] CP SELECT=yyy</span><br></pre></td></tr></table></figure>
<p>代码页状态:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">MODE</span> <span class="built_in">CON</span>[:] CP [/STATUS]</span><br></pre></td></tr></table></figure>
<p>显示模式:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">MODE</span> <span class="built_in">CON</span>[:] [COLS=c] [LINES=n]</span><br></pre></td></tr></table></figure>
<p>击键率:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">MODE</span> <span class="built_in">CON</span>[:] [RATE=r DELAY=d]</span><br></pre></td></tr></table></figure>
<p>例：设置dos窗口和颜色</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mode</span> <span class="built_in">con</span> cols=<span class="number">113</span> lines=<span class="number">15</span> &amp; <span class="built_in">color</span> <span class="number">9</span>f</span><br></pre></td></tr></table></figure>
<p>此命令设置DOS窗口大小：15行，113列</p>
<h3 id="GOTO-和"><a class="header-anchor" href="#GOTO-和">¶</a><code>GOTO</code> 和 <code>:</code></h3>
<p><strong><code>GOTO</code></strong> 会点编程的朋友就会知道这是跳转的意思。</p>
<p>在批处理中允许以“:XXX”来构建一个标号，然后用<code>GOTO XXX</code>跳转到标号 :<code>XXX</code> 处，然后执行标号后的命令。例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> &#123;%<span class="number">1</span>&#125;==&#123;&#125; <span class="keyword">goto</span> noparms</span><br><span class="line"><span class="keyword">if</span> "%<span class="number">2</span>"=="" <span class="keyword">goto</span> noparms</span><br></pre></td></tr></table></figure>
<p>标签的名字可以随便起，但是最好是有意义的字符串，前加个冒号用来表示这个字符串是标签，<code>goto</code>命令就是根据这个冒号<code>:</code>来寻找下一步跳到到那里。最好有一些说明这样你别人看起来才会理解你的意图啊。例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:<span class="built_in">start</span></span><br><span class="line"><span class="built_in">set</span> /a var+=<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%var%</span> <span class="keyword">leq</span> <span class="number">3</span> <span class="keyword">GOTO</span> <span class="built_in">start</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<pre><code>1
2
3
4
</code></pre>
<h3 id="FIND-在文件中搜索字符串"><a class="header-anchor" href="#FIND-在文件中搜索字符串">¶</a><code>FIND</code> 在文件中搜索字符串</h3>
<p>在文件中搜索字符串。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">FIND</span> [/V] [/C] [/N] [/I] [/OFF[LINE]] "string" [[drive:][<span class="built_in">path</span>]filename[ ...]]</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:left">option</th>
<th style="text-align:left">means</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">/V</td>
<td style="text-align:left">显示所有未包含指定字符串的行。</td>
</tr>
<tr>
<td style="text-align:left">/C</td>
<td style="text-align:left">仅显示包含字符串的行数。</td>
</tr>
<tr>
<td style="text-align:left">/N</td>
<td style="text-align:left">显示行号。</td>
</tr>
<tr>
<td style="text-align:left">/I</td>
<td style="text-align:left">搜索字符串时忽略大小写。</td>
</tr>
<tr>
<td style="text-align:left">/OFF[LINE]</td>
<td style="text-align:left">不要跳过具有脱机属性集的文件。</td>
</tr>
<tr>
<td style="text-align:left">“string”</td>
<td style="text-align:left">指定要搜索的文字串，</td>
</tr>
<tr>
<td style="text-align:left">[drive:][path]filename</td>
<td style="text-align:left">指定要搜索的文件。</td>
</tr>
</tbody>
</table>
<p>如果没有指定路径，<code>FIND</code> 将搜索键入的或者由另一命令产生的文字。<br>
Find常和type命令结合使用</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Type</span> [drive:][<span class="built_in">path</span>]filename | <span class="built_in">find</span> "string" [&gt;tmpfile]    #挑选包含string的行</span><br><span class="line"><span class="built_in">Type</span> [drive:][<span class="built_in">path</span>]filename | <span class="built_in">find</span> /v "string"            #剔除文件中包含string的行</span><br><span class="line"><span class="built_in">Type</span> [drive:][<span class="built_in">path</span>]filename | <span class="built_in">find</span> /c                     #显示文件行数</span><br></pre></td></tr></table></figure>
<p>以上用法将去除find命令自带的提示语（文件名提示）。</p>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> <span class="number">111</span> &gt;test.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="number">222</span> &gt;&gt;test.txt</span><br><span class="line"><span class="built_in">find</span> "<span class="number">111</span>" test.txt</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示如下：</p>
<pre><code>---------- TEST.TXT
111
请按任意键继续. . .
</code></pre>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> <span class="number">111</span> &gt;test.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="number">222</span> &gt;&gt;test.txt</span><br><span class="line"><span class="built_in">type</span> test.txt|<span class="built_in">find</span> "<span class="number">111</span>" </span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示如下：</p>
<pre><code>111
请按任意键继续. . .
</code></pre>
<h3 id="start-调用外部程序并任其在新窗口自行运行"><a class="header-anchor" href="#start-调用外部程序并任其在新窗口自行运行">¶</a><code>start</code> 调用外部程序并任其在新窗口自行运行</h3>
<p>批处理中调用外部程序的命令（该外部程序在新窗口中运行，批处理程序继续往下执行，不理会外部程序的运行状况），如果直接运行外部程序则必须等外部程序完成后才继续执行剩下的指令</p>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">start</span> explorer d:\</span><br></pre></td></tr></table></figure>
<p>调用图形界面打开D盘</p>
<h3 id="assoc-和-ftype"><a class="header-anchor" href="#assoc-和-ftype">¶</a><code>assoc</code> 和 <code>ftype</code></h3>
<p><strong>文件关联，不常用。</strong></p>
<p><strong><code>assoc</code></strong>  设置’文件扩展名’关联，关联到’文件类型’</p>
<p><strong><code>ftype</code></strong>  设置’文件类型’关联，关联到’执行程序和参数’</p>
<p>当你双击一个.txt文件时，windows并不是根据.txt直接判断用 notepad.exe 打开<br>
而是先判断.txt属于 txtfile ‘文件类型’<br>
再调用 txtfile 关联的命令行 <code>txtfile=%SystemRoot%\system32\NOTEPAD.EXE %1</code><br>
可以在&quot;文件夹选项&quot;→&quot;文件类型&quot;里修改这2种关联</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">assoc</span>           #显示所有'文件扩展名'关联</span><br><span class="line"><span class="built_in">assoc</span> .txt      #显示.txt代表的'文件类型'，结果显示 .txt=txtfile</span><br><span class="line"><span class="built_in">assoc</span> .doc      #显示.doc代表的'文件类型'，结果显示 .doc=Word.Document.<span class="number">8</span></span><br><span class="line"><span class="built_in">assoc</span> .exe      #显示.exe代表的'文件类型'，结果显示 .exe=exefile</span><br><span class="line"><span class="built_in">ftype</span>           #显示所有'文件类型'关联</span><br><span class="line"><span class="built_in">ftype</span> exefile   #显示exefile类型关联的命令行，结果显示 exefile="%<span class="number">1</span>" %*</span><br></pre></td></tr></table></figure>
<p><code>assoc .txt=Word.Document.8</code><br>
设置.txt为word类型的文档，可以看到.txt文件的图标都变了<br>
<br>
<code>assoc .txt=txtfile</code><br>
恢复.txt的正确关联<br>
<br>
<code>ftype exefile=&quot;%1&quot; %*</code><br>
恢复 exefile 的正确关联</p>
<p>如果该关联已经被破坏，可以运行 <code>command.com</code> ，再输入这条命令</p>
<h3 id="pushd-和-popd"><a class="header-anchor" href="#pushd-和-popd">¶</a><code>pushd</code> 和 <code>popd</code></h3>
<p><code>PUSHD [path | ..] </code>保存当前目录，然后切换到另一个指定的目录path。</p>
<p><code>popd</code>  将当前目录恢复为pushd命令保存的目录</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="function">c: &amp; <span class="title">cd</span>\ &amp; <span class="title">md</span> <span class="title">mp3</span>       # 在 <span class="title">C</span>:\ 建立 <span class="title">mp3</span> 文件夹</span></span><br><span class="line"><span class="function"><span class="title">md</span> <span class="title">d</span>:\<span class="title">mp4</span>               # 在 <span class="title">D</span>:\ 建立 <span class="title">mp4</span> 文件夹</span></span><br><span class="line"><span class="function"><span class="title">cd</span> /<span class="title">d</span> <span class="title">d</span>:\<span class="title">mp4</span>            # 更改当前目录为 <span class="title">d</span>:\<span class="title">mp4</span>，<span class="title">cd</span>命令的/<span class="title">d</span>参数可改变盘符。</span></span><br><span class="line"><span class="function"><span class="title">pushd</span> <span class="title">c</span>:\<span class="title">mp3</span>            # 保存当前目录，并切换当前目录为 <span class="title">c</span>:\<span class="title">mp3</span></span></span><br><span class="line"><span class="function"><span class="title">popd</span>                    # 恢复当前目录为刚才保存的 <span class="title">d</span>:\<span class="title">mp4</span></span></span><br></pre></td></tr></table></figure>
<p>一般用处不大，在当前目录名不确定时，会有点帮助。（dos编程中很有用）</p>
<h3 id="CALL-调用批处理程序或命令并等待其执行完毕"><a class="header-anchor" href="#CALL-调用批处理程序或命令并等待其执行完毕">¶</a><code>CALL</code> 调用批处理程序或命令并等待其执行完毕</h3>
<p><strong><code>CALL</code></strong> 命令可以在批处理执行过程中调用另一个批处理，当另一个批处理执行完后，再继续执行原来的批处理</p>
<p><strong><code>CALL command</code></strong> 调用一条批处理命令，和直接执行命令效果一样，==特殊情况下很有用，比如变量的多级嵌套==，见教程后面。在批处理编程中，可以根据一定条件生成命令字符串，用<code>call</code>可以执行该字符串，见例子。</p>
<p><strong><code>CALL [drive:][path]filename [batch-parameters]</code></strong><br>
调用的其它批处理程序。</p>
<p><strong><code>filename</code></strong> 参数必须具有 .bat 或 .cmd 扩展名。<br>
<code>CALL :label arguments</code><br>
调用本文件内命令段，相当于子程序。被调用的命令段以标签:<code>label</code>开头<br>
以命令<code>goto :eof</code>结尾。</p>
<p>另外，批脚本文本参数参照(<code>%0</code>、<code>%1</code>等等)已如下改变:</p>
<p>批脚本里的 <code>%*</code> 指出所有的参数(如 <code>%1 %2 %3 %4 %5 ...</code>)<br>
批参数<code>%n</code>的替代已被增强。您可以使用以下语法:（看不明白的直接运行后面的例子）</p>
<pre><code>%~1           - 删除引号(&quot;)，扩充 %1
%~f1          - 将 %1 扩充到一个完全合格的路径名
%~d1          - 仅将 %1 扩充到一个驱动器号
%~p1          - 仅将 %1 扩充到一个路径
%~n1          - 仅将 %1 扩充到一个文件名
%~x1          - 仅将 %1 扩充到一个文件扩展名
%~s1          - 扩充的路径指含有短名
%~a1          - 将 %1 扩充到文件属性
%~t1          - 将 %1 扩充到文件的日期/时间
%~z1          - 将 %1 扩充到文件的大小
%~$PATH : 1   - 查找列在 PATH 环境变量的目录，并将 %1扩充到找到的第一个完全合格的名称。
                如果环境变量名未被定义，或者没有找到文件，此组合键会扩充到空字符串
</code></pre>
<p>可以组合修定符来取得多重结果:</p>
<pre><code>%~dp1          - 只将 %1 扩展到驱动器号和路径
%~nx1          - 只将 %1 扩展到文件名和扩展名
%~dp$PATH:1    - 在列在 PATH 环境变量中的目录里查找 %1，并扩展到  找到的第一个文件的驱动器号和路径。
%~ftza1        - 将 %1 扩展到类似 DIR 的输出行。
</code></pre>
<p>在上面的例子中，<code>%1</code> 和 <code>PATH</code> 可以被其他有效数值替换。<br>
<br>
<code>%~</code> 语法被一个有效参数号码终止。<br>
<br>
<code>%~</code> 修定符不能跟 <code>%*</code> 使用</p>
<p><strong>注意: 参数扩充时不理会参数所代表的文件是否真实存在，均以当前目录进行扩展</strong></p>
<p>要理解上面的知识，下面的例子很关键。<br>
<br>
例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">Echo</span> 产生一个临时文件 &gt; tmp.txt</span><br><span class="line"><span class="comment">Rem 下行先保存当前目录，再将c:\windows设为当前目录</span></span><br><span class="line"><span class="built_in">pushd</span> c:\windows</span><br><span class="line"><span class="keyword">Call</span> :sub tmp.txt</span><br><span class="line"><span class="comment">Rem 下行恢复前次的当前目录</span></span><br><span class="line"><span class="built_in">Popd</span></span><br><span class="line"><span class="keyword">Call</span> :sub tmp.txt</span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="built_in">Del</span> tmp.txt</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">:sub</span><br><span class="line"><span class="built_in">Echo</span> 删除引号： %~<span class="number">1</span></span><br><span class="line"><span class="built_in">Echo</span> 扩充到路径： %~f1</span><br><span class="line"><span class="built_in">Echo</span> 扩充到一个驱动器号： %~d1</span><br><span class="line"><span class="built_in">Echo</span> 扩充到一个路径： %~p1 </span><br><span class="line"><span class="built_in">Echo</span> 扩充到一个文件名： %~n1</span><br><span class="line"><span class="built_in">Echo</span> 扩充到一个文件扩展名： %~x1</span><br><span class="line"><span class="built_in">Echo</span> 扩充的路径指含有短名： %~s1 </span><br><span class="line"><span class="built_in">Echo</span> 扩充到文件属性： %~a1 </span><br><span class="line"><span class="built_in">Echo</span> 扩充到文件的日期/时间： %~t1 </span><br><span class="line"><span class="built_in">Echo</span> 扩充到文件的大小： %~z1 </span><br><span class="line"><span class="built_in">Echo</span> 扩展到驱动器号和路径：%~dp1</span><br><span class="line"><span class="built_in">Echo</span> 扩展到文件名和扩展名：%~nx1</span><br><span class="line"><span class="built_in">Echo</span> 扩展到类似 <span class="built_in">DIR</span> 的输出行：%~ftza1</span><br><span class="line"><span class="built_in">Echo</span>.</span><br><span class="line"><span class="keyword">Goto</span> :eof</span><br></pre></td></tr></table></figure>
<p>例:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> aa=<span class="number">123456</span></span><br><span class="line"><span class="built_in">set</span> cmdstr=<span class="built_in">echo</span> <span class="variable">%aa%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%cmdstr%</span></span><br><span class="line"><span class="keyword">call</span> <span class="variable">%cmdstr%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>本例中如果不用<code>call</code>，而直接运行<code>%cmdstr%</code>，将显示结果<code>%aa%</code>，而不是<code>123456</code></p>
<h3 id="SHIFT"><a class="header-anchor" href="#SHIFT">¶</a><code>SHIFT</code></h3>
<p><em>更改批处理文件中可替换参数的位置。</em></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">SHIFT</span> [/n]</span><br></pre></td></tr></table></figure>
<p>如果命令扩展名被启用，<code>SHIFT</code> 命令支持<code>/n</code> 命令行开关；该命令行开关告诉<br>
命令从第 n 个参数开始移位；n 介于零和八之间。例如:<br>
<code>SHIFT /2</code><br>
会将 <code>%3</code> 移位到 <code>%2</code>，将 <code>%4</code> 移位到 <code>%3</code>，等等；并且不影响 <code>%0</code> 和 <code>%1</code>。</p>
<h3 id="IF"><a class="header-anchor" href="#IF">¶</a><code>IF</code></h3>
<p><code>IF</code> 条件判断语句，语法格式如下：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">IF</span> [<span class="keyword">NOT</span>] <span class="keyword">ERRORLEVEL</span> number command</span><br><span class="line"><span class="keyword">IF</span> [<span class="keyword">NOT</span>] string1==string2 command</span><br><span class="line"><span class="keyword">IF</span> [<span class="keyword">NOT</span>] <span class="keyword">EXIST</span> filename command</span><br></pre></td></tr></table></figure>
<p>下面逐一介绍，更详细的分析请看后面章节。</p>
<p>(1) <code>IF [NOT] ERRORLEVEL number command</code></p>
<p><code>IF ERRORLEVEL</code>这个句子必须放在某一个命令的后面，执行命令后由<code>IF ERRORLEVEL</code> 来判断命令的返回值。<br>
<br>
<code>Number</code>的数字取值范围0~255，判断时值的排列顺序应该由大到小。返回的值大于等于指定的值时，条件成立<br>
<br>
例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">dir</span> c:</span><br><span class="line"><span class="comment">rem退出代码为&gt;=1就跳至标题1处执行，&gt;=0就跳至标题0处执行</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">ERRORLEVEL</span> <span class="number">1</span> <span class="keyword">goto</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">ERRORLEVEL</span> <span class="number">0</span> <span class="keyword">goto</span> <span class="number">0</span></span><br><span class="line"><span class="comment">Rem 上面的两行不可交换位置，否则失败了也显示成功。</span></span><br><span class="line">:<span class="number">0</span></span><br><span class="line"><span class="built_in">echo</span> 命令执行成功！</span><br><span class="line"><span class="comment">Rem 程序执行完毕跳至标题exit处退出</span></span><br><span class="line"><span class="keyword">goto</span> <span class="keyword">exit</span></span><br><span class="line">:<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> 命令执行失败！</span><br><span class="line"><span class="comment">Rem 程序执行完毕跳至标题exit处退出</span></span><br><span class="line"><span class="keyword">goto</span> <span class="keyword">exit</span></span><br><span class="line">:<span class="keyword">exit</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示：<code>命令执行成功！</code></p>
<p>(2) <code>IF [NOT] string1==string2 command</code></p>
<p><code>string1</code>和<code>string2</code>都为字符的数据，英文内字符的大小写将看作不同，这个条件中的等于号必须是两个（绝对相等的意思），条件成立即执行后面的<code>command</code><br>
检测当前变量的值做出判断，为了防止字符串中含有空格，可用以下格式</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [<span class="keyword">NOT</span>] &#123;string1&#125;==&#123;string2&#125; command</span><br><span class="line"><span class="keyword">if</span> [<span class="keyword">NOT</span>] [string1]==[string2] command</span><br><span class="line"><span class="keyword">if</span> [<span class="keyword">NOT</span>] "string1"=="string2" command</span><br></pre></td></tr></table></figure>
<p>这种写法实际上将括号或引号当成字符串的一部分了，只要等号左右两边一致就行了，比如下面的写法就不行：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> &#123;string1&#125;==[string2] command</span><br></pre></td></tr></table></figure>
<p>(3) <code>IF [NOT] EXIST filename command</code><br>
<code>EXIST filename</code>为文件或目录存在的意思</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">EXIST</span> autoexec.bat <span class="built_in">echo</span> 文件存在！</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">not</span> <span class="keyword">EXIST</span> autoexec.bat <span class="built_in">echo</span> 文件不存在！</span><br></pre></td></tr></table></figure>
<p>这个批处理大家可以放在C盘和D盘分别执行，看看效果</p>
<h3 id="setlocal-与-变量延迟"><a class="header-anchor" href="#setlocal-与-变量延迟">¶</a><code>setlocal</code> 与 变量延迟</h3>
<p>要想进阶，变量延迟是必过的一关！所以这一部分希望你能认真看。<br>
<br>
为了更好的说明问题，我们先引入一个例子。<br>
<br>
<em>例1:</em></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> a=<span class="number">4</span></span><br><span class="line"><span class="built_in">set</span> a=<span class="number">5</span> &amp; <span class="built_in">echo</span> <span class="variable">%a%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><em>结果：</em><code>4</code></p>
<p><em>解说：</em></p>
<blockquote>
<p>为什么是<code>4</code>而不是<code>5</code>呢？在<code>echo</code>之前明明已经把变量<code>a</code>的值改成<code>5</code>了？<br>
<br>
让我们先了解一下批处理运行命令的机制：<br>
<br>
批处理读取命令时是按行读取的（另外例如for命令等，其后用一对圆括号闭合的所有语句也当作一行），在读&gt;取某行命令时，如果其中有变量，则变量值应该取 上一行的值。所以在读取命令<code>set a=5 &amp; echo &gt;%a%</code>时，dos将其预处理为<code>set a=5 &amp; echo &gt;4</code>，然后执行。而其中的<code>a=5</code>所做的数值变更，只能在下一命令行才能体现了。<br>
<br>
而为了能够及时感知环境变量的动态变化，批处理设计了<strong>变量延迟</strong>。简单来说，==在读取了一条完整的语句&gt;之后，不立即对该行的变量赋值，而会在某个单条语句执行之前再进行赋值==，也就是说“延迟”了对变量的赋值&gt;。</p>
</blockquote>
<p>那么如何开启变量延迟呢？变量延迟又需要注意什么呢？举个例子说明一下：<br>
<br>
<em>例2:</em></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="built_in">set</span> a=<span class="number">4</span></span><br><span class="line"><span class="built_in">set</span> a=<span class="number">5</span> &amp; <span class="built_in">echo</span> <span class="variable">!a!</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><em>结果：</em> <code>5</code><br>
<br>
<em>解说：</em></p>
<blockquote>
<p>启动了变量延迟，得到了正确答案。变量延迟的启动语句是<code>setlocal enabledelayedexpansion</code>，并且变量要用一对叹号“<code>!!</code>”括起来（注意要用英文的叹号），否则就没有变量延迟的效果。</p>
<p>分析一下例2，首先<code>setlocal enabledelayedexpansion</code>开启变量延迟，然后<code>set &gt;a=4</code>先给变量<code>a</code>赋值为<code>4</code>，<code>set a=5 &amp; echo &gt;!a!</code>这句是给变量<code>a</code>赋值为<code>5</code>并输出（由于启动了变量延迟，所以批处理能够感知到动态变化，即不是先给该行变量赋值，而是在运行过程中给变量赋值，因此此时<code>a</code>的值就是<code>5</code>了）。</p>
</blockquote>
<p>再举一个例子巩固一下。<br>
<br>
<em>例3:</em></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="keyword">for</span> /l <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">5</span>) <span class="keyword">do</span> (</span><br><span class="line"><span class="built_in">set</span> a=<span class="variable">%%i</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">!a!</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><em>结果：</em></p>
<pre><code>1
2
3
4
5
</code></pre>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/> <strong>解说：</strong></p>
<blockquote>
<p>本例开启了变量延迟并用“<code>!!</code>”将变量扩起来，因此得到我们预期的结果。如果不用变量延迟会出现什么结果呢？</p>
<p>结果是这样的：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&gt;<span class="built_in">ECHO</span> 处于关闭状态。</span><br><span class="line">&gt;<span class="built_in">ECHO</span> 处于关闭状态。</span><br><span class="line">&gt;<span class="built_in">ECHO</span> 处于关闭状态。</span><br><span class="line">&gt;<span class="built_in">ECHO</span> 处于关闭状态。</span><br><span class="line">&gt;<span class="built_in">ECHO</span> 处于关闭状态。</span><br></pre></td></tr></table></figure>
<p>即没有感知到for语句中的动态变化。</p>
</blockquote>
<p>提示：在没有开启变量延迟的情况下，某条命令行中的变量改变，必须到下一条命令才能体现。这一点也可以加以利用，看例子。<br>
<br>
<em>例4：交换两个变量的值，且不用中间变量</em></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">::交换两个变量的值，但是不使用临时变量</span><br><span class="line"><span class="built_in">set</span> var1=abc</span><br><span class="line"><span class="built_in">set</span> var2=<span class="number">123</span></span><br><span class="line"><span class="built_in">echo</span> 交换前： var1=<span class="variable">%var1%</span> var2=<span class="variable">%var2%</span></span><br><span class="line"><span class="built_in">set</span> var1=<span class="variable">%var2%</span>&amp; <span class="built_in">set</span> var2=<span class="variable">%var1%</span></span><br><span class="line"><span class="built_in">echo</span> 交换后： var1=<span class="variable">%var1%</span> var2=<span class="variable">%var2%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><em>运行显示：</em></p>
<pre><code>交换前： var1=abc var2=123
交换后： var1=123 var2=abc
请按任意键继续. . .
</code></pre>
<p>在代码中，使用 <code>setlocal enabledelayedexpansion</code> 语句来启用变量延迟之后，有得有失：</p>
<p>优点：</p>
<ul>
<li>(a)、可以在同一语句内部直接使用上一次改变后的变量；</li>
<li>(b)、在<code>echo</code>特殊字符的时候，无须用引号括起来，比如变量的值含有<code>&lt;</code>、<code>&gt;</code>、<code>|</code>等字符的时候，直接使用 <code>echo !str!</code> 就可以了；</li>
</ul>
<p>缺点：</p>
<ul>
<li>(a)、会把文本中所有的感叹号抛弃；</li>
<li>(b)、增加代码的复杂度，有时容易出错。</li>
</ul>
<h3 id="ATTRIB-显示或更改文件属性"><a class="header-anchor" href="#ATTRIB-显示或更改文件属性">¶</a><code>ATTRIB</code> 显示或更改文件属性</h3>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ATTRIB</span> [+R|-R] [+A|-A] [+S|-S] [+H|-H] [[drive:] [<span class="built_in">path</span>] filename] [/S [/D]]</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:center">symbol</th>
<th style="text-align:center">function</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:center">设置属性</td>
</tr>
<tr>
<td style="text-align:center">-</td>
<td style="text-align:center">清除属性</td>
</tr>
<tr>
<td style="text-align:center">R</td>
<td style="text-align:center">只读文件属性</td>
</tr>
<tr>
<td style="text-align:center">A</td>
<td style="text-align:center">存档文件属性</td>
</tr>
<tr>
<td style="text-align:center">S</td>
<td style="text-align:center">系统文件属性</td>
</tr>
<tr>
<td style="text-align:center">H</td>
<td style="text-align:center">隐藏文件属性</td>
</tr>
</tbody>
</table>
<p><code>[drive:][path][filename]</code> 指定要处理的文件属性。</p>
<table>
<thead>
<tr>
<th style="text-align:center">symbol</th>
<th style="text-align:center">function</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">/S</td>
<td style="text-align:center">处理当前文件夹及其子文件夹中的匹配文件。</td>
</tr>
<tr>
<td style="text-align:center">/D</td>
<td style="text-align:center">也处理文件夹。</td>
</tr>
</tbody>
</table>
<p><em>例：</em></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">md</span> autorun</span><br><span class="line"><span class="built_in">attrib</span> +a +s +h autorun</span><br></pre></td></tr></table></figure>
<p>上面的命令将建立文件夹 <code>autorun</code>，然后将其设为存档、系统、隐藏属性</p>
<h3 id="findstr-在文件中搜索字符串（find增强版）"><a class="header-anchor" href="#findstr-在文件中搜索字符串（find增强版）">¶</a><code>findstr</code> 在文件中搜索字符串（find增强版）</h3>
<p><code>find</code> 命令不能处理文件中超过1024个字符的数据行，此时可用<code>findstr</code> 命令。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">FINDSTR</span> [/B] [/E] [/L] [/R] [/S] [/I] [/X] [/V] [/N] [/M] [/O] [/F:file]</span><br><span class="line">        [/C:string] [/G:file] [/D:<span class="built_in">dir</span> list] [/A:<span class="built_in">color</span> attributes] [/OFF[LINE]]</span><br><span class="line">        strings [[drive:][<span class="built_in">path</span>]filename[ ...]]</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:center">symbol</th>
<th style="text-align:left">function</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">/B</td>
<td style="text-align:left">在一行的开始配对模式</td>
</tr>
<tr>
<td style="text-align:center">/E</td>
<td style="text-align:left">在一行的结尾配对模式</td>
</tr>
<tr>
<td style="text-align:center">/L</td>
<td style="text-align:left">按字使用搜索字符串</td>
</tr>
<tr>
<td style="text-align:center">/R</td>
<td style="text-align:left">将搜索字符串作为一般表达式使用</td>
</tr>
<tr>
<td style="text-align:center">/S</td>
<td style="text-align:left">在当前目录和所有子目录中搜索匹配文件</td>
</tr>
<tr>
<td style="text-align:center">/I</td>
<td style="text-align:left">指定搜索不分大小写</td>
</tr>
<tr>
<td style="text-align:center">/X</td>
<td style="text-align:left">打印完全匹配的行</td>
</tr>
<tr>
<td style="text-align:center">/V</td>
<td style="text-align:left">只打印不包含匹配的行</td>
</tr>
<tr>
<td style="text-align:center">/N</td>
<td style="text-align:left">在匹配的每行前打印行数</td>
</tr>
<tr>
<td style="text-align:center">/M</td>
<td style="text-align:left">如果文件含有匹配项，只打印其文件名</td>
</tr>
<tr>
<td style="text-align:center">/O</td>
<td style="text-align:left">在每个匹配行前打印字符偏移量</td>
</tr>
<tr>
<td style="text-align:center">/P</td>
<td style="text-align:left">忽略有不可打印字符的文件</td>
</tr>
<tr>
<td style="text-align:center">/OFF[LINE]</td>
<td style="text-align:left">不跳过带有脱机属性集的文件</td>
</tr>
<tr>
<td style="text-align:center">/A:attr</td>
<td style="text-align:left">指定有十六进位数字的颜色属性。请见 &quot;color /?</td>
</tr>
<tr>
<td style="text-align:center">/F:file</td>
<td style="text-align:left">从指定文件读文件列表 (/ 代表控制台)</td>
</tr>
<tr>
<td style="text-align:center">/C:string</td>
<td style="text-align:left">使用指定字符串作为文字搜索字符串</td>
</tr>
<tr>
<td style="text-align:center">/G:file</td>
<td style="text-align:left">从指定的文件获得搜索字符串。 (/ 代表控制台)</td>
</tr>
<tr>
<td style="text-align:center">/D:dir</td>
<td style="text-align:left">查找以分号为分隔符的目录列</td>
</tr>
<tr>
<td style="text-align:center">strings</td>
<td style="text-align:left">要查找的文字</td>
</tr>
<tr>
<td style="text-align:center">[drive:][path]filename</td>
<td style="text-align:left">指定要查找的文件</td>
</tr>
</tbody>
</table>
<p>除非参数有 <code>/C</code> 前缀，请使用空格隔开搜索字符串。<br>
<br>
例如:</p>
<p><code>FINDSTR &quot;hello there&quot; x.y</code> 在文件 x.y 中寻找 <code>&quot;hello&quot;</code> 或<br>
<code>&quot;there&quot;</code> 。 <br>
<code>FINDSTR /C:&quot;hello there&quot; x.y</code> 文件 x.y 寻找<br>
<code>&quot;hello there&quot;</code>。</p>
<p>一般表达式的快速参考:</p>
<table>
<thead>
<tr>
<th style="text-align:center">expression</th>
<th style="text-align:left">function</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">.</td>
<td style="text-align:left">通配符: 任何字符</td>
</tr>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:left">重复: 以前字符或类别出现零或零以上次数</td>
</tr>
<tr>
<td style="text-align:center">^</td>
<td style="text-align:left">行位置: 行的开始</td>
</tr>
<tr>
<td style="text-align:center">$</td>
<td style="text-align:left">行位置: 行的终点</td>
</tr>
<tr>
<td style="text-align:center">[class]</td>
<td style="text-align:left">字符类别: 任何在字符集中的字符</td>
</tr>
<tr>
<td style="text-align:center">[^class]</td>
<td style="text-align:left">补字符类别: 任何不在字符集中的字符</td>
</tr>
<tr>
<td style="text-align:center">[x-y]</td>
<td style="text-align:left">范围: 在指定范围内的任何字符</td>
</tr>
<tr>
<td style="text-align:center">\x</td>
<td style="text-align:left">Escape: 元字符 x 的文字用法</td>
</tr>
<tr>
<td style="text-align:center">&lt;xyz</td>
<td style="text-align:left">字位置: 字的开始</td>
</tr>
<tr>
<td style="text-align:center">xyz&gt;</td>
<td style="text-align:left">字位置: 字的结束</td>
</tr>
</tbody>
</table>
<p>有关 <code>FINDSTR</code> 常见表达法的详细情况，请见联机命令参考。</p>
<h3 id="date-t-和-time-t"><a class="header-anchor" href="#date-t-和-time-t">¶</a><code>date /t</code> 和 <code>time /t</code></h3>
<p><code>date /t</code> 直接显示当前日期，可用来提取或显示日期.<br>
<code>time /t</code> 直接显示当前时间，可用来提取或显示时间.</p>
<h1>第二节 常用特殊符号</h1>
<pre><code>1. @  命令行回显屏蔽符
2. %  批处理变量引导符
3. &gt;   输出重定向符
4. &gt;&gt;  输出重定向符
5. &lt;、&gt;&amp;、&lt;&amp; 重定向符
6. |  命令管道符
7. ^  转义字符
8. &amp;  组合命令（顺序执行）
9. &amp;&amp; 组合命令（前面指令成功，才执行后面指令）
10. ||  组合命令（前面指令失败，才执行后面指令）
11. &quot;&quot;  字符串界定符
12. , 逗号
13. ; 分号
14. () 括号
15. ! 感叹号
16. 批处理中可能会见到的其它特殊标记符: （略）
    CR(0D) 命令行结束符 
    Escape(1B) ANSI转义字符引导符 
    Space(20) 常用的参数界定符 
    Tab(09) ; = 不常用的参数界定符 
    + COPY命令文件连接符 
    * ? 文件通配符 
    / 参数开关引导符 
    : 批处理标签引导符
</code></pre>
<h2 id="符号介绍"><a class="header-anchor" href="#符号介绍">¶</a>符号介绍</h2>
<h3 id="命令行回显屏蔽符"><a class="header-anchor" href="#命令行回显屏蔽符">¶</a><code>@</code> 命令行回显屏蔽符</h3>
<p>  这个字符在批处理中的意思是关闭当前行的回显。我们从前几课知道<br>
<code>ECHO OFF</code> 可以关闭掉整个批处理命令的回显，但不能关掉<code>ECHO OFF</code> 这个命令，现在我们在<code>ECHO OFF</code>这个命令前加个<code>@</code>，就可以达到所有命令均不回显的要求</p>
<h3 id="批处理变量引导符"><a class="header-anchor" href="#批处理变量引导符">¶</a><code>%</code> 批处理变量引导符</h3>
<p>  这个百分号严格来说是算不上命令的，它只是批处理中的参数而已（多个%一起使用的情况除外，以后还将详细介绍）。<br>
引用变量用<code>%var%</code>，调用程序外部参数用<code>%1</code>至<code>%9</code>等等。<code>%0  %1  %2  %3  %4  %5  %6  %7  %8  %9  %*</code> 为命令行传递给批处理的参数</p>
<ul>
<li><code>%0</code> 批处理文件本身，包括完整的路径和扩展名\</li>
<li><code>%1</code> 第一个参数\</li>
<li><code>%9</code> 第九个参数\</li>
<li><code>%*</code> 从第一个参数开始的所有参数</li>
</ul>
<p>参数<code>%0</code>具有特殊的功能，可以调用批处理自身，以达到批处理本身循环的目的，也可以复制和删除文件自身等等。</p>
<p><em>例：</em> 最简单的复制文件自身的方法</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">copy</span> %<span class="number">0</span> d:\wind.bat</span><br></pre></td></tr></table></figure>
<p><strong>小技巧：添加行内注释</strong></p>
<p><code>%注释内容%</code>（可以用作行内注释，不能出现重定向符号和管道符号）<br>
为什么这样呢？此时“注释内容”其实被当作变量，其值是空的，故只起注释作用，不过这种用法容易出现语法错误，一般不用。</p>
<h3 id="输出重定向符"><a class="header-anchor" href="#输出重定向符">¶</a><code>&gt;</code> 输出重定向符</h3>
<p><strong>输出重定向命令</strong></p>
<p>  这个字符的意思是传递并且覆盖，他所起的作用是将运行的结果传递到后面的范围（后边可以是文件，也可以是默认的系统控制台）<br>
在NT系列命令行中，重定向的作用范围由整个命令行转变为单个命令语句，受到了命令分隔符&amp;,&amp;&amp;,||和语句块的制约限制。<br>
比如：</p>
<p>使用命令：<code>echo hello &gt;1.txt</code>将建立文件1.txt，内容为”hello “（注意行尾有一空格）<br>
使用命令：<code>echo hello&gt;1.txt</code>将建立文件1.txt，内容为”hello“（注意行尾没有空格）</p>
<h3 id="输出重定向符-v2"><a class="header-anchor" href="#输出重定向符-v2">¶</a><code>&gt;&gt;</code> 输出重定向符</h3>
<p><strong>输出重定向命令</strong></p>
<p>这个符号的作用和<code>&gt;</code>有点类似，但他们的区别是<code>&gt;&gt;</code>是传递并在文件的末尾追加，而<code>&gt;</code>是覆盖<br>
用法同上<br>
同样拿1.txt做例子<br>
使用命令：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> hello &gt; <span class="number">1</span>.txt</span><br><span class="line"><span class="built_in">echo</span> world &gt;&gt;<span class="number">1</span>.txt</span><br></pre></td></tr></table></figure>
<p>这时候1.txt 内容如下:</p>
<pre><code>hello
world
</code></pre>
<h3 id="、-、-重定向符"><a class="header-anchor" href="#、-、-重定向符">¶</a><code>&lt;、&gt;&amp;、&lt;&amp;</code> 重定向符</h3>
<p>  这三个命令也是管道命令，但<code>&gt;&amp;</code>、<code>&lt;&amp;</code>一般不常用，你只需要知道一下就ok了，当然如果想仔细研究的话，可以自己查一下资料。(本人已查过，网上也查不到相关资料)</p>
<p><code>&lt;</code>，输入重定向命令，从文件中读入命令输入，而不是从键盘中读入。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> <span class="number">2005</span>-<span class="number">05</span>-<span class="number">01</span>&gt;temp.txt</span><br><span class="line"><span class="built_in">set</span> /p today=&lt;temp.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%today%</span></span><br><span class="line"><span class="built_in">del</span> temp.txt</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<pre><code>2005-05-01
请按任意键继续. . .
</code></pre>
<p><code>&gt;&amp;</code>，将一个句柄的输出写入到另一个句柄的输入中。<br>
<code>&lt;&amp;</code>，刚好和<code>&gt;&amp;</code>相反，从一个句柄读取输入并将其写入到另一个句柄输出中。<br>
常用句柄：0、1、2，未定义句柄：3—9<br>
<code>1&gt;nul</code> 表示禁止输出正确的信息<br>
<code>2&gt;nul</code> 表示禁止输出错误信息。<br>
其中的1与2都是代表某个数据流输入输出的地址（NT CMD 称之为句柄，MSDOS称之为设备）。<br>
句柄0：标准输入stdin，键盘输入<br>
句柄1：标准输出stdout，输出到命令提示符窗口（console，代码为CON）<br>
句柄2：标准错误stderr，输出到命令提示符窗口（console，代码为CON）<br>
其中的stdin可被&lt;重定向，stdout可被&gt;、&gt;&gt;重定向。<br>
我们已经知道读取文本中的内容可以用for命令，但如果只需要读取第一行用for命令就有点麻烦。简单的办法如下:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"> <span class="built_in">set</span> /p str=&lt;%<span class="number">0</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="variable">%str%</span></span><br><span class="line"> <span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示批处理文件自身的第一行：<code>@echo off</code></p>
<h3 id="命令管道符"><a class="header-anchor" href="#命令管道符">¶</a><code>|</code> 命令管道符</h3>
<p>格式：</p>
<pre><code>第一条命令 | 第二条命令 [| 第三条命令...]
</code></pre>
<p>将第一条命令的结果作为第二条命令的参数来使用，记得在unix中这种方式很常见。</p>
<p>例如：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> c:\|<span class="built_in">find</span> "txt"</span><br></pre></td></tr></table></figure>
<p>以上命令是：查找<code>C：\</code>所有，并发现<code>TXT</code>字符串。<br>
<code>FIND</code>的功能请用 <code>FIND /?</code> 自行查看<br>
在不使<code>format</code>的自动格式化参数时，我是这样来自动格式化A盘的</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> y|<span class="built_in">format</span> a: /s /q /v:system</span><br></pre></td></tr></table></figure>
<p>  用过<code>format</code>的都知道，在格盘时要输入<code>y</code>来确认是否格盘，这个命令前加上<code>echo y</code>并用<code>|</code>字符来将<code>echo y</code>的结果传给<code>format</code>命令<br>
从而达到自动输入<code>y</code>的目的<br>
（这条命令有危害性，测试时请慎重）</p>
<h3 id="转义字符"><a class="header-anchor" href="#转义字符">¶</a><code>^</code> 转义字符</h3>
<p>  <code>^</code> 是对特殊符号<code>&lt;</code>,<code>&gt;</code>,<code>&amp;</code>的前导字符，在命令中他将以上3个符号的特殊功能去掉，仅仅只把他们当成符号而不使用他们的特殊意义。<br>
比如:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> test ^&gt;<span class="number">1</span>.txt</span><br></pre></td></tr></table></figure>
<p>结果则是：</p>
<pre><code>test &gt; 1.txt
</code></pre>
<p>它没有追加在1.txt里，呵呵。只是显示了出来<br>
另外，此转义字符还可以用作续行符号。<br>
举个简单的例子：\</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> 英雄^</span><br><span class="line">是^</span><br><span class="line">好^</span><br><span class="line">男人</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>不用多说，自己试一下就明白了。<br>
  为什么转义字符放在行尾可以起到续行符的作用呢？原因很简单，因为每行末尾还有一个看不见的符号，即回车符，转义字符位于行尾时就让回车符失效了，从而起到了续行的作用。</p>
<h3 id="组合命令（顺序执行）"><a class="header-anchor" href="#组合命令（顺序执行）">¶</a><code>&amp;</code> 组合命令（顺序执行）</h3>
<p>语法：</p>
<pre><code>第一条命令 &amp; 第二条命令 [&amp; 第三条命令...]
</code></pre>
<p>  <code>&amp;</code>、<code>&amp;&amp;</code>、<code>||</code>为组合命令，顾名思义，就是可以把多个命令组合起来当一个命令来执行。这在批处理脚本里是允许的，而且用的非常广泛。因为批处理认行不认命令数目。<br>
  这个符号允许在一行中使用2个以上不同的命令，<strong>当第一个命令执行失败了，也不影响后边的命令执行。</strong><br>
这里<code>&amp;</code>两边的命令是顺序执行的，从前往后执行。<br>
比如：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> z:\ &amp; <span class="built_in">dir</span> y:\ &amp; <span class="built_in">dir</span> c:\</span><br></pre></td></tr></table></figure>
<p>以上命令会连续显示z,y,c盘的内容，不理会该盘是否存在</p>
<h3 id="组合命令（前面指令成功，才执行后面指令）"><a class="header-anchor" href="#组合命令（前面指令成功，才执行后面指令）">¶</a><code>&amp;&amp;</code> 组合命令（前面指令成功，才执行后面指令）</h3>
<p>语法：</p>
<pre><code>第一条命令 &amp;&amp; 第二条命令 [&amp;&amp; 第三条命令...]
</code></pre>
<p>  用这种方法可以同时执行多条命令，==当碰到执行出错的命令后将不执行后面的命令，== 如果一直没有出错则一直执行完所有命令.<br>
这个命令和上边的类似，但区别是，第一个命令失败时，后边的命令也不会执行</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> z:\ &amp;&amp; <span class="built_in">dir</span> y:\ &amp;&amp; <span class="built_in">dir</span> c:\</span><br></pre></td></tr></table></figure>
<h3 id="组合命令（前面指令失败，才执行后面指令）"><a class="header-anchor" href="#组合命令（前面指令失败，才执行后面指令）">¶</a><code>||</code> 组合命令（前面指令失败，才执行后面指令）</h3>
<p>语法：</p>
<pre><code>第一条命令 || 第二条命令 [|| 第三条命令...]
</code></pre>
<p>  用这种方法可以同时执行多条命令，==当一条命令失败后才执行第二条命令，当碰到执行正确的命令后将不执行后面的命令，== 如果没有出现正确的命令则一直执行完所有命令.</p>
<p><em>提示</em>：<br>
组合命令和重定向命令一起使用必须注意优先级:<br>
<em><strong>管道命令的优先级高于重定向命令，重定向命令的优先级高于组合命令</strong></em></p>
<p><em>问题</em>：<br>
把C盘和D盘的文件和文件夹列出到a.txt文件中。看例：\</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> c:\ &amp;&amp; <span class="built_in">dir</span> d:\ &gt; a.txt</span><br></pre></td></tr></table></figure>
<p>这样执行后a.txt里只有D盘的信息！为什么？因为组合命令的优先级没有重定向命令的优先级高！所以这句在执行时将本行分成这两部分：<code>dir c:\</code>和<code>dir d:\ &gt; a.txt</code>，而并不是如你想的这两部分：<code>dir c:\ &amp;&amp; dir d:\</code>和<code>&gt; a.txt</code>。</p>
<p>要使用组合命令<code>&amp;&amp;</code>达到题目的要求，必须得这么写：\</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> c:\ &gt; a.txt &amp;&amp; <span class="built_in">dir</span> d:\ &gt;&gt; a.txt</span><br></pre></td></tr></table></figure>
<p>这样，依据优先级高低，DOS将把这句话分成以下两部分：<code>dir c:\ &gt; a.txt</code>和<code>dir d:\ &gt;&gt; a.txt</code>。例十八中的几句的差别比较特殊，值得好好研究体会一下。<br>
<br>
当然这里还可以利用<code>&amp;</code>命令（自己想一下道理哦）：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> c:\ &gt; a.txt &amp; <span class="built_in">dir</span> d:\ &gt;&gt; a.txt</span><br></pre></td></tr></table></figure>
<h3 id="字符串界定符"><a class="header-anchor" href="#字符串界定符">¶</a><code>&quot;&quot;</code> 字符串界定符</h3>
<p>双引号允许在字符串中包含空格，进入一个特殊目录可以用如下方法</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> "program files"</span><br><span class="line"><span class="built_in">cd</span> progra~<span class="number">1</span></span><br><span class="line"><span class="built_in">cd</span> pro*</span><br></pre></td></tr></table></figure>
<p>以上三种方法都可以进入program files这个目录</p>
<h3 id="逗号"><a class="header-anchor" href="#逗号">¶</a><code>,</code> 逗号</h3>
<p>逗号相当于空格，在某些情况下“,”可以用来当做空格使<br>
比如</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span>,c:\</span><br><span class="line">``` </span><br><span class="line">### `;` 分号</span><br><span class="line"></span><br><span class="line">分号，当命令相同时，可以将不同目标用`;`来隔离，但执行效果不变，如执行过程中发生错误，则只返回错误报告，但程序仍会执行。（有人说不会继续执行，其实测试一下就知道了）\</span><br><span class="line">比如：</span><br><span class="line">```<span class="built_in">cmd</span></span><br><span class="line"><span class="built_in">dir</span> c:\;d:\;e:\;z:\</span><br></pre></td></tr></table></figure>
<p>以上命令相当于</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> c:\</span><br><span class="line"><span class="built_in">dir</span> d:\</span><br><span class="line"><span class="built_in">dir</span> e:\</span><br><span class="line"><span class="built_in">dir</span> f:\</span><br></pre></td></tr></table></figure>
<p>如果其中z盘不存在，运行显示：<code>系统找不到指定的路径。</code>然后终止命令的执行。<br>
例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> c:\;d:\;e:\<span class="number">1</span>.txt</span><br></pre></td></tr></table></figure>
<p>以上命令相当于</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dir c:\</span><br><span class="line">dir d:\</span><br><span class="line">dir e:\1.txt</span><br></pre></td></tr></table></figure>
<p>其中文件 <code>e:\1.txt</code> 不存在，但e盘存在，有错误提示，但命令仍会执行。<br>
<strong>如果目标路径不存在，则终止执行；如果路径存在，仅文件不存在，则继续执行。<br>
就说这些了!</strong></p>
<h3 id="括号"><a class="header-anchor" href="#括号">¶</a><code>()</code> 括号</h3>
<p>  小括号在批处理编程中有特殊的作用，左右括号必须成对使用，括号中可以包括多行命令，这些命令将被看成一个整体，视为一条命令行。<br>
括号在<code>for</code>语句和<code>if</code>语句中常见，用来嵌套使用循环或条件语句，其实括号<code>()</code>也可以单独使用，请看例子。<br>
例：<br>
命令：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="number">1</span> &amp; <span class="built_in">echo</span> <span class="number">2</span> &amp; <span class="built_in">echo</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>可以写成：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">(</span><br><span class="line"><span class="built_in">echo</span> <span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="number">3</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>上面两种写法效果一样，这两种写法都被视为是一条命令行。<br>
<strong>注意：这种多条命令被视为一条命令行时，如果其中有变量，就涉及到变量延迟的问题。</strong></p>
<h3 id="感叹号"><a class="header-anchor" href="#感叹号">¶</a><code>!</code> 感叹号</h3>
<p>没啥说的，在变量延迟问题中，用来表示变量，即<code>%var%</code>应该表示为<code>!var!</code>，请看前面的<code>setlocal</code>命令介绍。</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>批处理</tag>
        <tag>DOS</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS编程3-FOR命令中的变量</title>
    <url>/2020/04/22/DOS%E7%BC%96%E7%A8%8B3-FOR%E5%91%BD%E4%BB%A4%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p>本章介绍<code>FOR</code>命令中有一些变量的用法</p>
<a id="more"></a>
<p>先把<code>FOR</code>的变量全部列出来:</p>
<pre><code>~I          - 删除任何引号(&quot;)，扩展 %I
%~fI        - 将 %I 扩展到一个完全合格的路径名
%~dI        - 仅将 %I 扩展到一个驱动器号
%~pI        - 仅将 %I 扩展到一个路径
%~nI        - 仅将 %I 扩展到一个文件名
%~xI        - 仅将 %I 扩展到一个文件扩展名
%~sI        - 扩展的路径只含有短名
%~aI        - 将 %I 扩展到文件的文件属性
%~tI        - 将 %I 扩展到文件的日期/时间
%~zI        - 将 %I 扩展到文件的大小
%~$PATH:I   - 查找列在路径环境变量的目录，并将 %I 扩展
              到找到的第一个完全合格的名称。如果环境变量名
              未被定义，或者没有找到文件，此组合键会扩展到
              空字符串
</code></pre>
<p>可以看到每行都有一个大写字母<code>&quot;I&quot;</code>，这个<code>I</code>其实就是我们在<code>FOR</code>带入的变量，我们<code>FOR</code>语句代入的变量名是什么，这里就写什么。<br>
比如:<code>FOR /F  %%z IN ('set') DO @echo %%z</code><br>
这里我们代入的变量名是<code>z</code>那么我们就要把那个<code>I</code>改成<code>z</code>，例如<code>%~fI</code>改为<code>%~fz</code><br>
至于前面的<code>%~p</code>这样的内容就是语法了!<br>
好开始讲解:</p>
<h1><code>~I</code></h1>
<p>删除任何引号(&quot;)，扩展 <code>%I</code>。这个变量的作用就如他的说明——删除引号!</p>
<p>例子:</p>
<p>首先建立临时文件temp.txt，内容如下：</p>
<pre><code>&quot;1111
&quot;2222&quot;
3333&quot;
&quot;4444&quot;44
&quot;55&quot;55&quot;55
</code></pre>
<p>可建立个BAT文件代码如下:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> ^"<span class="number">1111</span>&gt;temp.txt</span><br><span class="line"><span class="built_in">echo</span> "<span class="number">2222</span>"&gt;&gt;temp.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="number">3333</span>^"&gt;&gt;temp.txt</span><br><span class="line"><span class="built_in">echo</span> "<span class="number">4444</span>"<span class="number">44</span>&gt;&gt;temp.txt</span><br><span class="line"><span class="built_in">echo</span> ^"<span class="number">55</span>"<span class="number">55</span>"<span class="number">55</span>&gt;&gt;temp.txt</span><br><span class="line"><span class="comment">rem 上面建立临时文件，注意不成对的引号要加转义字符^，重定向符号前不要留空格</span></span><br><span class="line"><span class="keyword">FOR</span> /F "delims=" <span class="variable">%%i</span> <span class="keyword">IN</span> (temp.txt) <span class="keyword">DO</span> <span class="built_in">echo</span>  <span class="variable">%%~</span>i</span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="built_in">del</span> temp.txt</span><br></pre></td></tr></table></figure>
<p>执行后，我们看CMD的回显如下:</p>
<pre><code>1111           #字符串前的引号被删除了
2222           #字符串首尾的引号都被删除了
3333&quot;          #字符串前无引号，后面的引号保留
4444&quot;44        #字符串前面的引号删除了，而中间的引号保留
55&quot;55&quot;55       #字符串前面的引号删除了，而中间的引号保留
请按任意键继续. . .
</code></pre>
<p>和之前temp.txt中的内容对比一下，我们会发现第1、2、5行的引号都消失了，这就是删除引号<code>~i</code>的作用了!<br>
删除引号规则如下：</p>
<ol>
<li>若字符串首尾同时存在引号，则删除首尾的引号；</li>
<li>若字符串尾不存在引号，则删除字符串首的引号；</li>
<li>如果字符串中间存在引号，或者只在尾部存在引号，则不删除。</li>
</ol>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/> <strong>Tips</strong>：无头不删，有头连尾删。</p>
<h1><code>%~fI</code></h1>
<p>将 <code>%I</code> 扩展到一个完全合格的路径名。</p>
<p>例子:</p>
<p>把代码保存放在随便哪个地方，我这里就放桌面吧.</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%~</span>fi</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>执行后显示内容如下</p>
<pre><code>C:\Documents and Settings\Administrator\桌面\test.bat
C:\Documents and Settings\Administrator\桌面\test.vbs
</code></pre>
<p>当我把代码中的 <code>%%~fi</code>直接改成<code>%%i</code></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>执行后就会显示以下内容：</p>
<pre><code>test.bat
test.vbs
</code></pre>
<p>通过对比，我们很容易就看出没有路径了，这就是&quot;将 <code>%I</code> 扩展到一个完全合格的路径名&quot;的作用<br>
也就是如果<code>%i</code>变量的内容是一个文件名的话，他就会把这个文件所在的绝对路径打印出来，而不只单单打印一个文件名，自己动手动实验下就知道了!</p>
<h1><code>%~dI</code></h1>
<p>仅将 <code>%I</code> 扩展到一个驱动器号。</p>
<p>例子:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%~</span>di</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>执行后显示如下</p>
<pre><code>C:
C:
</code></pre>
<p>我桌面就两个文件test.bat，test.vbs，<code>%%~di</code>作用是，如果变量<code>%%i</code>的内容是一个文件或者目录名，他就会把他这文件或者目录所在的盘符号打印出来!</p>
<h1><code>%~pI</code></h1>
<p>仅将 <code>%I</code> 扩展到一个路径。这个用法和上面一样，只打印路径不打印文件名</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%~</span>pi</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>自己复制代码看看结果吧，下面几个都是这么个用法，代码给出来，大家自己看结果吧!</p>
<h1><code>%~nI</code></h1>
<p>仅将 %I 扩展到一个文件名。</p>
<p>只打印文件名字。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%~</span>ni</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<h1><code>%~xI</code></h1>
<p>仅将 <code>%I</code> 扩展到一个文件扩展名。</p>
<p>只打印文件的扩展名</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%~</span>xi</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<h1><code>%~sI</code></h1>
<p>扩展的路径只含有短名。</p>
<p>打印绝对短文件名</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%~</span>si</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<h1><code>%~aI</code></h1>
<p>将 <code>%I</code> 扩展到文件的文件属性。</p>
<p>打印文件的属性</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%~</span>ai</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<h1><code>%~tI</code></h1>
<p>将 <code>%I</code> 扩展到文件的日期/时间。</p>
<p>打印文件建立的日期</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%~</span>ti</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<h1><code>%~zI </code></h1>
<p>将 <code>%I</code> 扩展到文件的大小。</p>
<p>打印文件的大小</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /F "delims==" <span class="variable">%%i</span> <span class="keyword">IN</span> ('<span class="built_in">dir</span> /b') <span class="keyword">DO</span> @<span class="built_in">echo</span>  <span class="variable">%%~</span>zi</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>上面例子中的<code>&quot;delims==&quot;</code>可以改为<code>&quot;delims=&quot;</code>，即不要分隔符</p>
<h1><code>%~$PATH:I</code></h1>
<p>查找列在路径环境变量的目录，并将<code>%I</code>扩展到找到的第一个完全合格的名称。<br>
<em>如果环境变量名未被定义，或者没有找到文件，此组合键会扩展到空字符串</em>。<br>
这个上面几个都不一样，因此单独介绍</p>
<p>将下面代码保存为batch文件，然后运行，查看运行结果</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">FOR</span> /F "delims=" <span class="variable">%%i</span> <span class="keyword">IN</span> (“notepad.exe”) <span class="keyword">DO</span> <span class="built_in">echo</span>  <span class="variable">%%~</span>$<span class="built_in">PATH</span>:i</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>上面代码显示结果为 <code>C:\WINDOWS\system32\notepad.exe</code>，其意思就在PATH变量里指定的路径里搜索notepad.exe文件，如果有notepad.exe则会把他所在绝对路径打印出来，没有就打印一个错误！</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>批处理</tag>
        <tag>DOS</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS编程4-批处理中的变量</title>
    <url>/2020/04/22/DOS%E7%BC%96%E7%A8%8B4-%E6%89%B9%E5%A4%84%E7%90%86%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p>  批处理中的变量可分为两类：“系统变量&quot;和&quot;自定义变量”，本文将详细介绍这两个变量!</p>
<a id="more"></a>
<h1>系统变量</h1>
<p>  它们的值由系统将其根据事先定义的条件自动赋值，也就是这些变量系统已经给他们定义了值，不需要我们来给他赋值，我们只需要调用便可!</p>
<p>以下为全部DOS系统变量：</p>
<table>
<thead>
<tr>
<th style="text-align:left">Vars</th>
<th style="text-align:center">Type</th>
<th style="text-align:left">Function</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>%ALLUSERSPROFILE%</code></td>
<td style="text-align:center">本地</td>
<td style="text-align:left">返回“所有用户”配置文件的位置。</td>
</tr>
<tr>
<td style="text-align:left"><code>%APPDATA%</code></td>
<td style="text-align:center">本地</td>
<td style="text-align:left">返回默认情况下应用程序存储数据的位置。</td>
</tr>
<tr>
<td style="text-align:left"><code>%CD%</code></td>
<td style="text-align:center">本地</td>
<td style="text-align:left">返回当前目录字符串。</td>
</tr>
<tr>
<td style="text-align:left"><code>%CMDCMDLINE%</code></td>
<td style="text-align:center">本地</td>
<td style="text-align:left">返回用来启动当前的 Cmd.exe 的准确命令行。</td>
</tr>
<tr>
<td style="text-align:left"><code>%CMDEXTVERSION%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回当前的“命令处理程序扩展”的版本号。</td>
</tr>
<tr>
<td style="text-align:left"><code>%COMPUTERNAME%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回计算机的名称。</td>
</tr>
<tr>
<td style="text-align:left"><code>%COMSPEC%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回命令行解释器可执行程序的准确路径。</td>
</tr>
<tr>
<td style="text-align:left"><code>%DATE%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回当前日期。使用与 date /t 命令相同的格式。由 Cmd.exe 生成。有关date命令的详细信息，请参阅 Date。</td>
</tr>
<tr>
<td style="text-align:left"><code>%ERRORLEVEL%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回上一条命令的错误代码。通常用非零值表示错误。</td>
</tr>
<tr>
<td style="text-align:left"><code>%HOMEDRIVE%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回连接到用户主目录的本地工作站驱动器号。基于主目录值而设置。用户主目录是在“本地用户和组”中指定的。</td>
</tr>
<tr>
<td style="text-align:left"><code>%HOMEPATH%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回用户主目录的完整路径。基于主目录值而设置。用户主目录是在“本地用户和组`”中指定的。</td>
</tr>
<tr>
<td style="text-align:left"><code>%HOMESHARE%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回用户的共享主目录的网络路径。基于主目录值而设置。用户主目录是在“本地用户和组”中指定的。</td>
</tr>
<tr>
<td style="text-align:left"><code>%LOGONSERVER%</code></td>
<td style="text-align:center">本地</td>
<td style="text-align:left">返回验证当前登录会话的域控制器的名称。</td>
</tr>
<tr>
<td style="text-align:left"><code>%NUMBER_OF_PROCESSORS%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">指定安装在计算机上的处理器的数目。</td>
</tr>
<tr>
<td style="text-align:left"><code>%OS%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回操作系统名称。Windows 2000 显示其操作系统为 Windows_NT。</td>
</tr>
<tr>
<td style="text-align:left"><code>%PATH%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">指定可执行文件的搜索路径。</td>
</tr>
<tr>
<td style="text-align:left"><code>%PATHEXT%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回操作系统认为可执行的文件扩展名的列表。</td>
</tr>
<tr>
<td style="text-align:left"><code>%PROCESSOR_ARCHITECTURE%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回处理器的芯片体系结构。值：x86 或 IA64 基于Itanium</td>
</tr>
<tr>
<td style="text-align:left"><code>%PROCESSOR_IDENTFIER%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回处理器说明。</td>
</tr>
<tr>
<td style="text-align:left"><code>%PROCESSOR_LEVEL%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回计算机上安装的处理器的型号。</td>
</tr>
<tr>
<td style="text-align:left"><code>%PROCESSOR_REVISION%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回处理器的版本号。</td>
</tr>
<tr>
<td style="text-align:left"><code>%PROMPT%</code></td>
<td style="text-align:center">本地</td>
<td style="text-align:left">返回当前解释程序的命令提示符设置。由 Cmd.exe 生成。</td>
</tr>
<tr>
<td style="text-align:left"><code>%RANDOM%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回 0 到 32767 之间的任意十进制数字。由 Cmd.exe 生成。</td>
</tr>
<tr>
<td style="text-align:left"><code>%SYSTEMDRIVE%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回包含 Windows server operating system 根目录（即系统根目录）的驱动器。</td>
</tr>
<tr>
<td style="text-align:left"><code>%SYSTEMROOT%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回 Windows server operating system 根目录的位置。</td>
</tr>
<tr>
<td style="text-align:left"><code>%TEMP% 和 %TMP%</code></td>
<td style="text-align:center">系统和用户</td>
<td style="text-align:left">返回对当前登录用户可用的应用程序所使用的默认临时目录。有些应用程序需要TEMP，而其他应用程序则需要 TMP。</td>
</tr>
<tr>
<td style="text-align:left"><code>%TIME%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回当前时间。使用与 time /t 命令相同的格式。由 Cmd.exe 生成。有关time命令的详细信息，请参阅 Time。</td>
</tr>
<tr>
<td style="text-align:left"><code>%USERDOMAIN%</code></td>
<td style="text-align:center">本地</td>
<td style="text-align:left">返回包含用户帐户的域的名称。</td>
</tr>
<tr>
<td style="text-align:left"><code>%USERNAME%</code></td>
<td style="text-align:center">本地</td>
<td style="text-align:left">返回当前登录的用户的名称。</td>
</tr>
<tr>
<td style="text-align:left"><code>%USERPROFILE%</code></td>
<td style="text-align:center">本地</td>
<td style="text-align:left">返回当前用户的配置文件的位置。</td>
</tr>
<tr>
<td style="text-align:left"><code>%WINDIR%</code></td>
<td style="text-align:center">系统</td>
<td style="text-align:left">返回操作系统目录的位置。</td>
</tr>
</tbody>
</table>
<p>这么多系统变量，我们如何知道他的值是什么呢?在CMD里输入<code>echo %WINDIR%</code>，这样就能显示一个变量的值。举个例子，比如我们要复制文件到当前帐号的启动目录里，就可以这样：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">copy</span> d:\<span class="number">1</span>.bat "<span class="variable">%USERPROFILE%</span>\「开始」菜单\程序\启动\"</span><br></pre></td></tr></table></figure>
<blockquote>
<p><img class="emoji" draggable="false" alt="⚠️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/26a0.png"/> <strong>注意：</strong><br>
有空格的目录要用引号引起来</p>
</blockquote>
<p>另外还有一些系统变量，他们是代表一个意思，或者一个操作，他们分别是<code>%0 %1 %2 %3 %4 %5 ......</code>一直到<code>%9</code> 还有一个<code>%*</code>，其中<code>%0</code>比较特殊，有好几层意思。</p>
<ol>
<li>
<p>先讲<code>%1</code>-<code>%9</code>的意思。</p>
<ul>
<li><code>%1</code> 返回批处理的第一个参数</li>
<li><code>%2</code> 返回批处理的第二个参数</li>
<li><code>%3</code>-<code>%9</code>依此推类</li>
</ul>
<p>这些变量主要用于反回批处理参数，但是到底如何返回？<br>
我们看这个例子，把下面的代码保存为test.BAT然后放到C盘下</p>
 <figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> %<span class="number">1</span> %<span class="number">2</span> %<span class="number">3</span> %<span class="number">4</span></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">2</span></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">3</span></span><br><span class="line"><span class="built_in">echo</span> %<span class="number">4</span></span><br></pre></td></tr></table></figure>
<p>进入CMD，输入<code>cd c:\</code>，<br>
然后输入</p>
 <figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">test.bat 我是第一个参数 我是第二个参数  我是第三个参数  我是第四个参数</span><br></pre></td></tr></table></figure>
<p>注意中间的空格，我们会看到这样的结果:</p>
<pre><code> 我是第一个参数 我是第二个参数 我是第三个参数 我是第四个参数
 我是第一个参数
 我是第二个参数
 我是第三个参数
 我是第四个参数
</code></pre>
<p>对比下代码，<code>%1</code>就是“我是第一个参数”  <code>%2</code>就是“我是第二个参数”…<br>
看完这个例子<code>%1~%9</code>是不是好理解多了，这些<code>%1</code>和<code>%9</code>可以让批处理也能带参数运行，大大提高批处理功能!</p>
</li>
<li>
<p>还有一个<code>%*</code>  他是什么呢？他的作用不是很大，只是返回参数而已，不过他是一次返回全部参数的值，不用在输入<code>%1</code> <code>%2</code>来一个一个确定。看下面例子：</p>
 <figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> %*</span><br></pre></td></tr></table></figure>
<p>同样保存为test.bat 放到C盘，然后</p>
 <figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> c:\</span><br><span class="line">test.bat 我是第一个参数 我是第二个参数  我是第三个参数  我是第四个参数</span><br></pre></td></tr></table></figure>
<p>可以看到他一次把全部参数都显示出来了。</p>
</li>
<li>
<p>开始讲那个比较特殊的<code>%0</code>，和上面讲的不同，它不返回参数的值，而是包含下面两个作用：</p>
<ul>
<li>
<p><strong>返回批处理所在绝对路径</strong></p>
<p>例子:</p>
  <figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> %<span class="number">0</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>保存为test.BAT放在桌面运行，会显示如下结果</p>
<pre><code>  &quot;C:\Documents and Settings\Administrator\桌面\test.bat&quot;
</code></pre>
<p>把当前批处理执行的所在路经打印出来了，也就是返回批处理所在绝对路径的意思</p>
</li>
<li>
<p><strong>无限循环执行BAT</strong></p>
<p>例子:</p>
  <figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">net</span> user</span><br><span class="line">%<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>保存为BAT执行，他就会无限循环执行<code>net user</code>这条命令，直到你手动停止。</p>
</li>
</ul>
</li>
</ol>
<blockquote>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/> <strong>补充说明：</strong><br>
其实 <code>%0</code> 就是第一参数 <code>%1</code> 前面那个参数，当然就是批处理文件名（包括路径）。</p>
</blockquote>
<p>以上就是批处理中的一些系统变量，另外还有一些变量，也可表示一些功能，比如<code>FOR</code>命令中的变量，<a href="http://gseasrx.club/2020/04/22/DOS%E7%BC%96%E7%A8%8B3-FOR%E5%91%BD%E4%BB%A4%E4%B8%AD%E7%9A%84%E5%8F%98%E9%87%8F/" target="_blank" rel="noopener">DOS编程3</a>章节中已经介绍过，不再赘述。</p>
<h1>自定义变量</h1>
<p>故名思意，自定义变量就是由用户自己来定义并赋予值的变量。要使用自定义变量就得使用set命令，看例子:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> var=我是值</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>保存为BAT执行，我们会看到CMD里返回一个字符串<code>我是值</code>，<br>
<code>var</code>为变量名，<code>=</code>右变的是要赋给变量的值，<br>
这就是一种最简单的设置变量的方法了。<br>
如果我们想让用户手工输入变量的值，而不是在代码里指定，可以用<code>set</code>命令的<code>/p</code>参数。</p>
<p>例子:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p var=请输入变量的值</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><code>var</code> 为变量名，<strong><code>=</code> 右边的是提示语，不是变量的值</strong>，变量的值由用户运行后自己用键盘输入！</p>
<p><code>set</code>命令的用法还有很多，下一章介绍。</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>批处理</tag>
        <tag>DOS</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS编程5-set命令详解</title>
    <url>/2020/04/22/DOS%E7%BC%96%E7%A8%8B5-set%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<p>前面简单介绍了用<code>SET</code>命令设置自定义变量，本章具体介绍<code>set</code>的其他功能。</p>
<a id="more"></a>
<h1>用<code>set</code>命令设置自定义变量</h1>
<h2 id="set基本用法"><a class="header-anchor" href="#set基本用法">¶</a><code>set</code>基本用法</h2>
<p>显示、设置或删除 cmd.exe 环境变量。</p>
<pre><code>SET [variable=[string]]
  variable  指定环境变量名。
  string    指定要指派给变量的一系列字符串。
</code></pre>
<blockquote>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/><br>
要显示当前环境变量，键入不带参数的<code>SET</code>。<br>
<code>SET</code> 命令不允许变量名含有等号。</p>
</blockquote>
<p>注意：以下用法将清除变量<code>variable</code>的值，使其变成未定义状态。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">SET</span> variable=</span><br></pre></td></tr></table></figure>
<p>上面等号后面无任何符号，如果写成<code>SET variable=&quot;&quot;</code>，此时变量值并不为空，而是等于两个引号，即<code>&quot;&quot;</code></p>
<p>例子:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> var=我是值</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>请看 <code>set var=我是值</code> ，这就是BAT直接在批处理中设置变量的方法。</p>
<p><code>set</code> 是命令，<code>var</code>是变量名，<code>=</code>号右边的<code>我是值</code>是变量的值。</p>
<blockquote>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/><br>
在批处理中我们要引用这个变量就把var变量名用两个%(百分号)扩起来，如<code>%var%</code>。</p>
</blockquote>
<h2 id="set-p"><a class="header-anchor" href="#set-p">¶</a><code>set /p</code></h2>
<p><code>SET</code>还可以提供一个交互界面，让用户自己输入变量的值，然后我们再根据这个值来做相应操作，现在就来说说<code>SET</code>的这种用法，只需要加一个<code>/P</code>参数就可以了，即：</p>
<pre><code>SET /P variable=[promptString]
</code></pre>
<p>例子:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p var=请输入变量的值:</span><br><span class="line"><span class="built_in">echo</span> 您输入了 <span class="variable">%var%</span>  ~_~</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><code>set /p</code> 是命令语法  <code>var</code>是变量名    <code>=</code>号右边的<code>请输入变量的值:</code>，这个是提示语，不是变量的值。运行后，我们在提示语后面直接输入<code>1</code>，就会显示 <code>您输入了 1 ~_~</code></p>
<hr>
<p>好了，先回顾到这，现在讲<code>SET</code>其他功能:使用<code>set /?</code>查看<code>SET</code>的帮助我们发现<code>SET</code>除了我上面讲的</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SET [variable&#x3D;[string]]</span><br><span class="line">SET &#x2F;P variable&#x3D;[promptString]</span><br></pre></td></tr></table></figure>
<p>这两种语法外，还有如下几种语法:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SET &#x2F;A expression</span><br></pre></td></tr></table></figure>
<p>环境变量替换已如下增强:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">%PATH:str1&#x3D;str2%</span><br><span class="line">%PATH:~10,5%</span><br><span class="line">%PATH:~-10%</span><br><span class="line">%PATH:~0,-2%</span><br></pre></td></tr></table></figure>
<p>这机种语法有什么用处呢？下面我们来一个个讲解它们。</p>
<h1>用<code>set</code>命令进行简单计算</h1>
<p>语法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SET &#x2F;A expression</span><br></pre></td></tr></table></figure>
<p><code>/A</code> 命令行开关指定 <code>=</code> 右边的字符串为被评估的数字表达式。该表达式评估器很简单并以递减的优先权顺序支持下列操作:</p>
<table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">()</td>
<td style="text-align:center">分组</td>
</tr>
<tr>
<td style="text-align:center">! ~ -</td>
<td style="text-align:center">一元运算符</td>
</tr>
<tr>
<td style="text-align:center">* / %</td>
<td style="text-align:center">算数运算符</td>
</tr>
<tr>
<td style="text-align:center">+ -</td>
<td style="text-align:center">算数运算符</td>
</tr>
<tr>
<td style="text-align:center">&lt;&lt;   &gt;&gt;</td>
<td style="text-align:center">二进制逻辑移位</td>
</tr>
<tr>
<td style="text-align:center">&amp;</td>
<td style="text-align:center">二进制按位“与”</td>
</tr>
<tr>
<td style="text-align:center">^</td>
<td style="text-align:center">二进制按位“异”</td>
</tr>
<tr>
<td style="text-align:center">|</td>
<td style="text-align:center">二进制按位“或”</td>
</tr>
<tr>
<td style="text-align:center">= *= /= %= += -=</td>
<td style="text-align:center">算数赋值</td>
</tr>
<tr>
<td style="text-align:center">&amp;= ^= |= &lt;&lt;= &gt;&gt;=</td>
<td style="text-align:center">二进制运算赋值</td>
</tr>
<tr>
<td style="text-align:center">,</td>
<td style="text-align:center">表达式分隔符</td>
</tr>
</tbody>
</table>
<p>如果 <code>SET /A</code> 在命令脚本外的命令行执行，那么它显示该表达式的最后值。</p>
<blockquote>
<p><strong>注意：</strong><br>
除十六进制有 <code>0x</code> 前缀， 八进制有 <code>0</code> 前缀的，数字值为十进位数字。因此， <code>0x12</code> 与 <code>18</code> 和 <code>022</code>相同。请注意八进制公式可能很容易搞混: <code>08</code> 和 <code>09</code> 是无效的数字，因为 <code>8</code> 和 <code>9</code> 不是有效的八进制位数。</p>
</blockquote>
<p>  上面这些是系统帮助里的内容，看着是不是有点晕，没关系我来简单解释一下:<code>set</code>的<code>/A</code>参数就是让<code>SET</code>可以支持数学符号进行加减等一些简单数学运算！</p>
<blockquote>
<p><strong>注意：</strong><br>
一般的运算常为十进制运算，如果数字字符串最左边为<code>0</code>，将被认为是八进制，从而出错。比如，<code>0812</code>之类的数字不能参与十进制运算，转换方法为：<code>10812-10000</code></p>
</blockquote>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> aa=<span class="number">0812</span></span><br><span class="line"><span class="built_in">set</span> /a aa=<span class="number">1</span><span class="variable">%aa%</span>-<span class="number">10000</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%aa%</span></span><br></pre></td></tr></table></figure>
<p>结果为：<code>812</code></p>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p input=请输入计算表达式：</span><br><span class="line"><span class="built_in">set</span> /a var=<span class="variable">%input%</span></span><br><span class="line"><span class="built_in">echo</span> 计算结果：<span class="variable">%input%</span>=<span class="variable">%var%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><strong>注意：</strong>：<br>
DOS计算只能进行整数运算，精确到整数</p>
</blockquote>
<p>请输入计算表达式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>+<span class="number">9</span>+<span class="number">20</span>+<span class="number">30</span>-<span class="number">10</span></span><br></pre></td></tr></table></figure>
<p>计算结果：</p>
<pre><code>1+9+20+30-10=50
请按任意键继续. . .
</code></pre>
<p>请输入计算表达式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="number">10</span>/<span class="number">3</span>    #除法只能精确到整数</span><br></pre></td></tr></table></figure>
<p>计算结果：</p>
<pre><code>10/3=3
请按任意键继续. . .
</code></pre>
<p>请输入计算表达式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">-<span class="number">100</span>+<span class="number">62</span>  #负数</span><br></pre></td></tr></table></figure>
<p>计算结果：</p>
<pre><code>-100+62=-38
请按任意键继续. . .
</code></pre>
<p>请输入计算表达式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="number">100</span>%<span class="number">3</span>    ＃求余数</span><br></pre></td></tr></table></figure>
<p>计算结果：</p>
<pre><code>100%3=1
请按任意键继续. . .
</code></pre>
<blockquote>
<p><strong>注意：</strong><br>
以上的求余数运算符<code>%</code>在批处理程序中必须写成<code>%%</code></p>
</blockquote>
<p>请输入计算表达式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">(<span class="number">25</span>+<span class="number">75</span>)*<span class="number">2</span>/(<span class="number">15</span>+<span class="number">5</span>)    #括号</span><br></pre></td></tr></table></figure>
<p>计算结果：</p>
<pre><code>(25+75)*2/(15+5)=10
请按任意键继续. . .
</code></pre>
<p>请输入计算表达式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="number">1234567890</span>*<span class="number">9876543210</span>   #范围</span><br></pre></td></tr></table></figure>
<p>无效数字。数字精确度限为 32 位。<br>
计算结果：</p>
<pre><code>1234567890*9876543210=
请按任意键继续. . .
</code></pre>
<blockquote>
<p><strong>注意：</strong><br>
上面的计算过程显示，DOS计算只能精确到32位，这个32位是指二进制32位，其中最高位为符号位（0为正，1为负），低位31位为数值。31个1换成十进制为2147483647，所以DOS计算的有效值范围是-2147483648至2147483647，超出该数值范围时计算出错，请看下面的计算过程：</p>
<p>请输入计算表达式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&gt;<span class="number">2147483647</span>-<span class="number">1</span>    #最大值减<span class="number">1</span>，值有效</span><br></pre></td></tr></table></figure>
<p>计算结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;2147483647-1&#x3D;2147483646</span><br><span class="line">&gt;请按任意键继续. . .</span><br></pre></td></tr></table></figure>
<p>请输入计算表达式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&gt;<span class="number">2147483647</span>+<span class="number">1</span>    #最大值加<span class="number">1</span>，出错，结果为最小值</span><br></pre></td></tr></table></figure>
<p>计算结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;2147483647+1&#x3D;-2147483648</span><br><span class="line">&gt;请按任意键继续. . .</span><br></pre></td></tr></table></figure>
<p>请输入计算表达式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&gt;-<span class="number">2147483648</span>-<span class="number">1</span>   #最小值减<span class="number">1</span>，出错，结果为最大值</span><br></pre></td></tr></table></figure>
<p>计算结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;-2147483648-1&#x3D;2147483647</span><br><span class="line">&gt;请按任意键继续. . .</span><br></pre></td></tr></table></figure>
</blockquote>
<p>运行<code>set /a a=1+1,b=2+1,c=3+1</code>后会显示一个<code>4</code>，但我们用<code>echo %a% %b% %c%</code>后看结果，会发现其他数学运算也有效果!，这就是表达式分隔符&quot;逗&quot;号的作用!</p>
<p>有时候我们需要直接在原变量进行加减操作就可以用这种语法，<br>
<code>set /a var+=1</code>  这样的语法对应原始语法就是<code>set /a var = %var% + 1</code>，<br>
都是一样的结果，在原变量的值上再进行数学运算，不过这样写简单一点。</p>
<p>再来一个:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> /a var*=<span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>其他都这么用，只要帮助里有这个语法。</p>
<p>另外还有一些用逻辑或取余操作符，这些符号，按照上面的使用方法会报错的，<br>
比如我们在CMD里输入<code>set /a var=1 &amp; 1</code> ，“与运算”，他并不会显示为1，而是报错。<br>
为什么？对于这样的&quot;逻辑或取余操作符&quot;，我们需要把他们用双引号引起来，也可以用转义字符<code>^</code>，<code>set /a var= 1 &quot;&amp;&quot; 1</code> 这样结果就显示出来了。其他逻辑或取余操作符用法：</p>
<ul>
<li><code>set /a var= 1 &quot;+&quot; 1</code> 异运算</li>
<li><code>set /a var= 1 &quot;%&quot; 1</code>  取模运算</li>
<li><code>set /a var= 3 &quot;&lt;&lt;&quot; 2</code> 左移位运算， 3的二进制为11，左移2位为1100，换成十进制就是12，自行验证</li>
<li><code>set /a var= 4 &quot;&gt;&gt;&quot; 2</code>右移位运算，4的二进制为100，右移动2位为1，结果为1</li>
</ul>
<blockquote>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/> <strong>注意：</strong> 凡是按位计算均需换算成二进制。</p>
</blockquote>
<p><img class="emoji" draggable="false" alt="❓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/2753.png"/> <strong>思考题</strong>：求2的n次方</p>
<details>
<summary>参考答案：</summary>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p n=请输入<span class="number">2</span>的几次方: </span><br><span class="line"><span class="built_in">set</span> /a num=<span class="number">1</span>^&lt;^&lt;n</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%num%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">请输入2的几次方: 3</span><br><span class="line">8</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">请输入2的几次方: 10</span><br><span class="line">1024</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">请输入2的几次方: 15 </span><br><span class="line">32768</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure>
</details> 
<h1>用set命令进行字符串处理</h1>
<h2 id="字符串替换"><a class="header-anchor" href="#字符串替换">¶</a>字符串替换</h2>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="variable">%PATH:str1=str2%</span></span><br></pre></td></tr></table></figure>
<p>上面语法的意思就是：将字符串变量<code>%PATH%</code>中的<code>str1</code>替换为<code>str2</code>。<br>
这个是替换变量值的内容，看例子：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> a= bbs. verybat. cn</span><br><span class="line"><span class="built_in">echo</span> 替换前的值: "<span class="variable">%a%</span>"</span><br><span class="line"><span class="built_in">set</span> var=%a: =%</span><br><span class="line"><span class="built_in">echo</span> 替换后的值: "<span class="variable">%var%</span>"</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">替换前的值: &quot; bbs. verybat. cn&quot;</span><br><span class="line">替换后的值: &quot;bbs.verybat.cn&quot;</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure>
<p>对比一下，我们发现把变量<code>%a%</code>的空格给替换掉了。从这个例子，我们就可以发现<br>
<code>%PATH:str1=str2%</code>这个操作就是把变量<code>%PATH%</code>的里的<code>str1</code>全部用<code>str2</code>替换。<br>
比如我们把上面的例子改成这样</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> a=bbs.verybat.cn</span><br><span class="line"><span class="built_in">echo</span> 替换前的值: "<span class="variable">%a%</span>"</span><br><span class="line"><span class="built_in">set</span> var=<span class="variable">%a:.=伤脑筋%</span></span><br><span class="line"><span class="built_in">echo</span> 替换后的值: "<span class="variable">%var%</span>"</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">替换前的值: &quot;bbs.verybat.cn&quot;</span><br><span class="line">替换后的值: &quot;bbs伤脑筋verybat伤脑筋cn&quot;</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure>
<p><strong>解释:</strong> <code>set var=%a:.=伤脑筋%</code>，<br>
<code>set</code>是命令， <code>var</code>是变量名， <code>a</code>是要进行字符替换的变量的值，<code>.</code>为要替换的值，<code>伤脑筋</code>为替换后的值。<br>
执行后就会把变量<code>%a%</code>里面的<code>.</code>全部替换为<code>伤脑筋</code>，这就是set的替换字符的很好的功能。</p>
<p>替换功能先讲到这，下面介绍字符串截取功能。</p>
<p>请注意：字符串的替换和截取功能在引用变量的地方均可以，并不一定必须要有set命令<br>
例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set a&#x3D;bbs.verybat.cn</span><br><span class="line">echo 替换前的值: &quot;%a%&quot;</span><br><span class="line">echo 替换后的值: &quot;%a:.&#x3D;伤脑筋%&quot;</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p>此例在<code>echo</code>语句中就替换了字符串，效果一样。</p>
<h2 id="字符串截取"><a class="header-anchor" href="#字符串截取">¶</a>字符串截取</h2>
<p>截取功能统一语法格式为：</p>
<pre><code>%a:~[m[,n]]%
</code></pre>
<p>方括号表示可选，<code>%</code>为变量标识符，<code>a</code>为变量名，不可少，冒号用于分隔变量名和说明部分，符号<code>~</code>可以简单理解为“偏移”，<code>m</code>为偏移量（缺省为0），<code>n</code>为截取长度（缺省为全部）。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="variable">%PATH:~10,5%</span></span><br></pre></td></tr></table></figure>
<p>这个什么意思，看例子:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="comment">rem 截取功能例子1：</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> a=bbs.verybat.cn</span><br><span class="line"><span class="built_in">set</span> var=<span class="variable">%a:~1,2%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>执行后，我们会发现只显示了&quot;bs&quot;两个字母，我们的变量<code>%a%</code>的值不是为<code>bbs.verybat.cn</code>吗？怎么只显示了第2个字母和第3个字母&quot;bs&quot;。分析以上两个例子结果可以很容易看出<br>
<code>%a:~10,5%</code>就是显示变量a里从11位（偏移量10）开始的5个字符!</p>
<p>分析<code>set var=%a:~1,2%</code>：<br>
<code>set</code>是命令，<code>var</code>是变量值，<code>a</code>要进行字符操作的变量，<code>1</code>从变量<code>a</code>第几位开始显示，<code>2</code>表示显示几位。<br>
合起来就是把变量<code>a</code>的值从第2位（偏移量1）开始，把2个字符赋予给变量<code>var</code>，这样应该明白了。</p>
<p>其他两种语法</p>
<pre><code>%PATH:~-10%
%PATH:~0,-2%
</code></pre>
<p>它们也是显示指定变量指定几位的值的意思。</p>
<p>分析**<code>%PATH:~-10%</code>**，首先看下面两个例子，</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="comment">rem 截取功能例子2：</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> a=bbs.verybat.cn</span><br><span class="line"><span class="built_in">set</span> var=<span class="variable">%a:~-3%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行结果：<code>.cn</code></p>
<p>这个就是把变量<code>a</code>倒数3位的值给变量<code>var</code>，当然我们也可以改成这样，</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="comment">rem 截取功能例子3：</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> a=bbs.verybat.cn</span><br><span class="line"><span class="built_in">set</span> var=<span class="variable">%a:~3%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示：<code>.verybat.cn</code></p>
<p>这个就是把变量<code>a</code>的从第3位开始后面全部的值给变量<code>VAR</code>。因此<code>%PATH:~-10%</code>就是把截取出变量PATH从倒数第10位字符以后的所有字符。</p>
<p>对于<code>%PATH:~0,-2%</code>，先看下面的例子，</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="comment">rem 截取功能例子4：</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> a=bbs.verybat.cn</span><br><span class="line"><span class="built_in">set</span> var=<span class="variable">%a:~0,-3%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>执行后，我们发现显示的是<code>bbs.verybat</code>，少了<code>.cn</code>，从结果分析，很容易分析出，这是把变量<code>a</code>的值从0位开始，到倒数第三位之间的值全部赋予给<code>var</code>。</p>
<p>如果改成下面这样呢？</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="comment">rem 截取功能例子5：</span></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> a=bbs.verybat.cn</span><br><span class="line"><span class="built_in">set</span> var=<span class="variable">%a:~2,-3%</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%var%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示：<code>s.verybat</code><br>
那么他就是显示从第3位（偏移量2）开始至倒数三位字符以前的值，并赋予给变量<code>var</code></p>
<p><strong>小结：</strong></p>
<pre><code>a=bbs.verybat.cn
%a:~1,2%    ＝“bs”           偏移量1，从第二位开始向右取2位
%a:~-3%     ＝“.cn”          偏移量负3，即倒数3位（也可理解为留下右边3位），右取全部
%a:~3%      ＝“.verybat.cn”  偏移量3（也可理解为去掉左边3位），右取全部
%a:~0,-3%   ＝“bbs.verybat”  偏移量0，右取长度至负3，即倒数3位
%a:~2,-3%   ＝“s.verybat”    偏移量2，右取长度至负3，即倒数3位
</code></pre>
<p>所以，截取功能统一语法格式为：</p>
<pre><code>%a:~[m[,n]]%
</code></pre>
<p>方括号表示可选，%a%为变量名，不可少，冒号用于分隔变量名和说明部分，符号～可以简单理解为“偏移”即可，m为偏移量（缺省为0），n为截取长度（缺省为全部）。</p>
<p>上面所述用法其实相当于vbs函数mid、left、right</p>
<pre><code>%a:~0,n%  相当于函数left(a,n)  取左边n位
%a:~-m%   相当于函数right（a,m） 取右边m位
%a:~m,n%  相当于函数mid(a,m+1,n) 从m+1位开始取n位
%a:~m,-n% 相当于函数mid(a,m+1,len(a)-m-n)，从m+1位开始，至倒数n+1位
%a:~m %   相当于函数mid(a,m+1,len(a)-m) 或者right(a,len(a)-m)，从m+1位开始取右边全部。
</code></pre>
<p><img class="emoji" draggable="false" alt="❓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/2753.png"/><strong>思考题：</strong><br>
输入任意字符串，求字符串的长度</p>
<details>
<summary>参考答案</summary>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p str=请输入任意长度的字符串:</span><br><span class="line"><span class="built_in">echo</span> 你输入了字符串:"<span class="variable">%str%</span>"</span><br><span class="line"><span class="keyword">call</span> :stringlenth "<span class="variable">%str%</span>" num</span><br><span class="line"><span class="built_in">echo</span> 字符串长度为：<span class="variable">%num%</span></span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">:StringLenth</span><br><span class="line">::---------字符串长度计算子程序</span><br><span class="line">::---------参数%<span class="number">1</span>为字符串(如有空格，请用引号括起来)</span><br><span class="line">::---------参数%<span class="number">2</span>为返回变量名称，不能含空格或特殊字符</span><br><span class="line">::@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> theString=%~<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">defined</span> theString <span class="keyword">goto</span> :eof</span><br><span class="line"><span class="built_in">set</span> Return=<span class="number">0</span></span><br><span class="line">:StringLenth_continue</span><br><span class="line"><span class="built_in">set</span> /a Return+=<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span> thestring=<span class="variable">%thestring:~0,-1%</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">defined</span> thestring <span class="keyword">goto</span> StringLenth_continue</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> "%<span class="number">2</span>"=="" <span class="built_in">set</span> <span class="variable">%2=%</span>Return%</span><br><span class="line"><span class="keyword">goto</span> :eof</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>批处理</tag>
        <tag>DOS</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS编程6-IF命令</title>
    <url>/2020/04/23/DOS%E7%BC%96%E7%A8%8B6-IF%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>本章介绍<code>IF</code>命令的用法。</p>
<a id="more"></a>
<h1>基本语法</h1>
<p>在CMD使用<code>IF /?</code>打开<code>IF</code>的系统帮助，会发现<code>IF</code>有3种基本的用法，来执行批处理程序中的条件处理。</p>
<pre><code>IF [NOT] ERRORLEVEL number command
IF [NOT] string1==string2 command
IF [NOT] EXIST filename command
</code></pre>
<h1>用法详解</h1>
<p><code>NOT</code>：指定只有条件为 false 的情况下， Windows才应该执行该命令。<br>
<code>ERRORLEVEL number</code>：如果最后运行的程序返回一个等于或大于指定数字的退出编码，指定条件为 true。<br>
<code>string1==string2</code>：如果指定的文字字符串匹配，指定条件为 true。<br>
<code>EXIST filename</code>： 如果指定的文件名存在，指定条件为 true。<br>
<code>command</code>：如果前面的条件为True时，指定要执行的命令。如果指定的条件为 FALSE，命令后可跟一个执行 <code>ELSE</code> 关键字后的命令的 <code>ELSE</code> 命令。</p>
<p><code>ELSE</code> 子句必须在 <code>IF</code> 之后出现在同一行上。例如:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">IF</span> <span class="keyword">EXIST</span> filename (</span><br><span class="line"><span class="built_in">del</span> filename</span><br><span class="line">) <span class="keyword">ELSE</span> (</span><br><span class="line"><span class="built_in">echo</span> filename missing</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h2 id="用法1：IF-NOT-ERRORLEVEL-number-command"><a class="header-anchor" href="#用法1：IF-NOT-ERRORLEVEL-number-command">¶</a>用法1：<code>IF [NOT] ERRORLEVEL number command</code></h2>
<p>这个用法的基本做用是判断上一条命令执行结果，以决定下一个步骤。一般上一条命令的执行结果只有两个，&quot;成功&quot;用0表示  &quot;失败&quot;用1表示。<br>
举个例子:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">net</span> user</span><br><span class="line"><span class="keyword">IF</span> <span class="variable">%ERRORLEVEL%</span> == <span class="number">0</span> <span class="built_in">echo</span> <span class="built_in">net</span> user 执行成功了!</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>这是个简单判断上条命令是否执行成功。细心的朋友可能会发现，这个用法和帮助里的用法不太一样，按照帮助里的写法<code>IF %ERRORLEVEL% == 0 echo net user 执行成功了!</code>这一句代码应该写成:<code>IF ERRORLEVEL 0 echo net user 执行成功了!</code>，那为什么我要写成这样呢？各位自己把代码改掉执行后，就会发现错误了！用这种语法，不管你的上面的命令是否执行成功，他都会认为命令成功了，不知道是BUG还是本人理解错误…</p>
<blockquote>
<p><strong>补充：</strong><br>
  这不是bug，而是 <code>if errorlevel</code> 语句的特点：当使用 <code>if errorlevel 0 ……</code> 的句式时，它的含义是：如果错误码的值大于或等于<code>0</code>的时候，将执行某个操作；当使用 <code>if %errorlevel%==0 ……</code> 的句式时，它的含义是：如果错误码的值等于<code>0</code>的时候，将执行某操作。因为这两种句式含义的差别，如果使用前一种句式的时候，错误码语句的排列顺序是从大到小排列。</p>
<p>  一般上一条命令的执行结果代码只有两结果，&quot;成功&quot;用<code>0</code>表示  &quot;失败&quot;用<code>1</code>表  示。这只是一般的情况，实际上，<code>errorlevel</code>返回值可以在<code>0~255</code>之间，比如，<code>xcopy</code>  默认的<code>errorlevel</code>值就有5个，分别表示5种执行状态：</p>
<p>退出码说明：</p>
<ol start="0">
<li>文件复制没有错误。</li>
<li>if errorlevel 2 echo。</li>
<li>用户按 CTRL+C 终止了 xcopy。</li>
<li>出现了初始化错误。没有足够的内存或磁盘空间，或命令行上输入了无效的驱动器名称或语 法。</li>
<li>出现了磁盘写入错误。</li>
</ol>
<p>要判断上面xcopy命令的5种退出情况，应写成：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">&gt;<span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">5</span> <span class="built_in">echo</span>出现了磁盘写入错误</span><br><span class="line">&gt;<span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">4</span> <span class="built_in">echo</span>出现了初始化错误</span><br><span class="line">&gt;<span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">2</span> <span class="built_in">echo</span>用户按 CTRL+C 终止了 <span class="built_in">xcopy</span></span><br><span class="line">&gt;<span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">1</span> <span class="built_in">echo</span> <span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">2</span> <span class="built_in">echo</span></span><br><span class="line">&gt;<span class="keyword">if</span> <span class="keyword">errorlevel</span> <span class="number">0</span> <span class="built_in">echo</span>文件复制没有错误。</span><br></pre></td></tr></table></figure>
<p>才能正确执行。</p>
</blockquote>
<p>再举几个例子:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">net</span> usertest</span><br><span class="line"><span class="keyword">IF</span> <span class="variable">%ERRORLEVEL%</span> == <span class="number">1</span> <span class="built_in">echo</span> <span class="built_in">net</span> user 执行失败了!</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><img class="emoji" draggable="false" alt="☝️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/261d.png"/> 这个是判断上一条命令是否执行失败的</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p var=随便输入个命令:</span><br><span class="line"><span class="variable">%var%</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%ERRORLEVEL%</span> == <span class="number">0</span> <span class="keyword">goto</span> yes</span><br><span class="line"><span class="keyword">goto</span> no</span><br><span class="line">:yes</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">!var!</span> 执行成功了</span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">:no</span><br><span class="line"><span class="built_in">echo</span> 基本上执行失败了..</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><img class="emoji" draggable="false" alt="☝️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/261d.png"/> 这个是根据你输入的命令，自动判断是成功还是失败了!</p>
<p><img class="emoji" draggable="false" alt="👇" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f447.png"/> 再举一个简化版的例子：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p var=随便输入个命令:</span><br><span class="line"><span class="variable">%var%</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%ERRORLEVEL%</span> == <span class="number">0</span> (<span class="built_in">echo</span> <span class="variable">%var%</span>执行成功了) <span class="keyword">ELSE</span> <span class="built_in">echo</span> <span class="variable">%var%</span>执行失败了!</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><code>else</code>后面写上执行失败后的操作。<br>
当然我门还可以把<code>if else</code>这样的语句分成几行写出来，使他看上去好看点…，看这个例子<img class="emoji" draggable="false" alt="👇" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f447.png"/></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p var=随便输入个命令:</span><br><span class="line"><span class="variable">%var%</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%ERRORLEVEL%</span> == <span class="number">0</span>  (</span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">!var!</span> 执行成功了</span><br><span class="line">   ) <span class="keyword">ELSE</span> (</span><br><span class="line">   <span class="built_in">echo</span> 基本上执行失败了..</span><br><span class="line">   )</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>这里介绍的两种简写对<code>IF</code>的三种语法都可以套用，不单单是在<code>IF [NOT] ERRORLEVEL number command</code><br>
这种法上才能用</p>
<h2 id="用法2：IF-NOT-string1-string2-command"><a class="header-anchor" href="#用法2：IF-NOT-string1-string2-command">¶</a>用法2：<code>IF [NOT] string1==string2 command</code></h2>
<p>这个是用来比较变量或者字符的值是不是相等的。</p>
<p>例如：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p var=请输入第一个比较字符:</span><br><span class="line"><span class="built_in">set</span> /p var2=请输入第二个比较字符:</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%var%</span> == <span class="variable">%var2%</span> (<span class="built_in">echo</span> 我们相等) <span class="keyword">ELSE</span> <span class="built_in">echo</span> 我们不相等</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>上面这个例子可以判断你输入的值是不是相等，如果输入相同的字符，而其中一个后面多了一个空格，这个例子还是会认为相等，如何让有空格的输入不相等呢？我们在比较字符上加个双引号（如下）就可以了。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p var=请输入第一个比较字符:</span><br><span class="line"><span class="built_in">set</span> /p var2=请输入第二个比较字符(多输入个空格试试):</span><br><span class="line"><span class="keyword">if</span> "<span class="variable">%var%</span>" == "<span class="variable">%var2%</span>" (<span class="built_in">echo</span> 我们相等) <span class="keyword">ELSE</span> <span class="built_in">echo</span> 我们不相等</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<h2 id="用法3：IF-NOT-EXIST-filename-command"><a class="header-anchor" href="#用法3：IF-NOT-EXIST-filename-command">¶</a>用法3：<code>IF [NOT] EXIST filename command</code></h2>
<p>这个用来判断某个文件或者文件夹是否存在。</p>
<p>例子：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">exist</span> "c:\test" (<span class="built_in">echo</span> 存在文件) <span class="keyword">ELSE</span> <span class="built_in">echo</span> 不存在文件</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>判断的文件路径加引号是为了防止路径有空格，如果路径有空格加个双引号就不会出现判断出错了。</p>
<p>另外，我们看到每条IF用法后都有个<code>[NOT]</code>语句，加上<code>NOT</code>的话，就表示判断条件是否不成立，没加<code>NOT</code>默认是判断条件是否成立。比如上面的例子，加个<code>NOT</code>就表示要判断C:\test文件是否不存在，如果你的C盘下没c:\test，条件成立，则会执行<code>echo 文件不存在</code>的命令，结果正好与实际相反，因此要加入<code>not</code>，应将命令写成下面这样：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exist</span> "c:\test" (<span class="built_in">echo</span> 不存在文件) <span class="keyword">ELSE</span> <span class="built_in">echo</span> 存在文件</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<h2 id="用法4：IF增强的用法"><a class="header-anchor" href="#用法4：IF增强的用法">¶</a>用法4：<code>IF</code>增强的用法</h2>
<pre><code>IF [/I] string1 compare-op string2 command  #参数/I表示不区分大小写
IF CMDEXTVERSION number command
IF DEFINED variable command  #判断变量是否存在，很有用
</code></pre>
<p><code>CMDEXTVERSION</code> 条件的作用跟 <code>ERRORLEVEL</code> 的类似，它是在跟与命令扩展名有关联的内部版本号比较。第一个版本是 1。每次对命令扩展名有相当大的增强时，版本号会增加一个。命令扩展名被停用时，<code>CMDEXTVERSION</code> 条件不是真的。</p>
<p>如果已定义环境变量，<code>DEFINED</code> 条件的作用跟 <code>EXISTS</code> 的一样</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">IF</span> <span class="keyword">DEFINED</span> variable command</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">NOT</span> "variable"=="" command</span><br></pre></td></tr></table></figure>
<p>上面两条命令效果一样。</p>
<p>用<code>set variable=</code>命令使变量<code>variable</code>变成未定义，即空值（变量值为空，则为未定义；变量值不为空，则为已定义）。</p>
<blockquote>
<p><img class="emoji" draggable="false" alt="⚠️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/26a0.png"/><strong>注意：</strong><br>
用语句<code>IF DEFINED variable command</code>判断变量是否存在时，请注意<code>variable</code>为不使用引导符号<code>%</code>的变量名，因此不能用写为<code>%variable%</code>，否则出错。</p>
</blockquote>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">defined</span> aa (<span class="built_in">echo</span> 变量aa存在) <span class="keyword">else</span> (<span class="built_in">echo</span> 变量aa不存在)</span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<pre><code>变量aa不存在
</code></pre>
<p>例</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> aa=<span class="number">123</span></span><br><span class="line"><span class="built_in">set</span> aa=</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">defined</span> aa (<span class="built_in">echo</span> 变量aa存在) <span class="keyword">else</span> (<span class="built_in">echo</span> 变量aa不存在)</span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<pre><code>变量aa不存在
</code></pre>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> a == A (<span class="built_in">echo</span> 我们相等) <span class="keyword">ELSE</span> <span class="built_in">echo</span> 我们不相等</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>执行后会显示：</p>
<pre><code>我们不相等
</code></pre>
<p>例</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> /i a == A (<span class="built_in">echo</span> 我们相等) <span class="keyword">ELSE</span> <span class="built_in">echo</span> 我们不相等</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>加上<code>/I</code>不区分大小写，因此直接结果为：<code>我们相等</code>。</p>
<p>最后面还有一些用来判断数字的符号</p>
<pre><code>EQU - 等于
NEQ - 不等于
LSS - 小于
LEQ - 小于或等于
GTR - 大于
</code></pre>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>批处理</tag>
        <tag>DOS</tag>
      </tags>
  </entry>
  <entry>
    <title>DOS编程7-高级技巧</title>
    <url>/2020/04/23/DOS%E7%BC%96%E7%A8%8B7-%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>随便延伸一下，学习一下高手们都是怎么用的。</p>
<a id="more"></a>
<h1>交互界面设计</h1>
<p>没啥说的，看看高手设计的菜单界面吧：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line"><span class="built_in">title</span> 终极多功能修复</span><br><span class="line">:menu</span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line"><span class="built_in">color</span> <span class="number">0</span>A</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span>                 ==============================</span><br><span class="line"><span class="built_in">echo</span>                 请选择要进行的操作，然后按回车</span><br><span class="line"><span class="built_in">echo</span>                 ==============================</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span>              <span class="number">1</span>.网络修复及上网相关设置,修复IE,自定义屏蔽网站</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span>              <span class="number">2</span>.病毒专杀工具，端口关闭工具,关闭自动播放</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span>              <span class="number">3</span>.清除所有多余的自启动项目，修复系统错误</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span>              <span class="number">4</span>.清理系统垃圾,提高启动速度</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span>              Q.退出</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line">:cho</span><br><span class="line"><span class="built_in">set</span> choice=</span><br><span class="line"><span class="built_in">set</span> /p choice=          请选择:</span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">NOT</span> "<span class="variable">%choice%</span>"=="" <span class="built_in">SET</span> choice=<span class="variable">%choice:~0,1%</span></span><br><span class="line"><span class="keyword">if</span> /i "<span class="variable">%choice%</span>"=="<span class="number">1</span>" <span class="keyword">goto</span> ip</span><br><span class="line"><span class="keyword">if</span> /i "<span class="variable">%choice%</span>"=="<span class="number">2</span>" <span class="keyword">goto</span> setsave</span><br><span class="line"><span class="keyword">if</span> /i "<span class="variable">%choice%</span>"=="<span class="number">3</span>" <span class="keyword">goto</span> kaiji</span><br><span class="line"><span class="keyword">if</span> /i "<span class="variable">%choice%</span>"=="<span class="number">4</span>" <span class="keyword">goto</span> clean</span><br><span class="line"><span class="keyword">if</span> /i "<span class="variable">%choice%</span>"=="Q" <span class="keyword">goto</span> endd</span><br><span class="line"><span class="built_in">echo</span> 选择无效，请重新输入</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="keyword">goto</span> cho</span><br></pre></td></tr></table></figure>
<p>只要学完本教程前面的章节，上面的程序应该能看懂了。</p>
<h1><code>if…else…</code>条件语句</h1>
<p>前面已经谈到，DOS条件语句主要有以下形式</p>
<pre><code>IF [NOT] ERRORLEVEL number command
IF [NOT] string1==string2 command
IF [NOT] EXIST filename command
</code></pre>
<p>增强用法：<code>IF [/I] string1 compare-op string2 command</code><br>
增强用法中加上<code>/I</code>不区分大小写了，增强用法中还有一些用来判断数字的符号：</p>
<table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:center">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">EQU</td>
<td style="text-align:center">等于</td>
</tr>
<tr>
<td style="text-align:center">NEQ</td>
<td style="text-align:center">不等于</td>
</tr>
<tr>
<td style="text-align:center">LSS</td>
<td style="text-align:center">小于</td>
</tr>
<tr>
<td style="text-align:center">LEQ</td>
<td style="text-align:center">小于或等于</td>
</tr>
<tr>
<td style="text-align:center">GTR</td>
<td style="text-align:center">大于</td>
</tr>
<tr>
<td style="text-align:center">GEQ</td>
<td style="text-align:center">大于或等于</td>
</tr>
</tbody>
</table>
<p>上面的<code>command</code>命令都可以用小括号来使用多条命令的组合，包括<code>else</code>子句，组合命令中可以嵌套使用条件或循环命令。例如:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">IF</span> <span class="keyword">EXIST</span> filename (</span><br><span class="line"> <span class="built_in">del</span> filename</span><br><span class="line">) <span class="keyword">ELSE</span> (</span><br><span class="line"> <span class="built_in">echo</span> filename missing</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>也可写成：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="keyword">exist</span> filename (<span class="built_in">del</span> filename) <span class="keyword">else</span> (<span class="built_in">echo</span> filename missing)</span><br></pre></td></tr></table></figure>
<p>但这种写法不适合命令太多或嵌套命令的使用。</p>
<h1>循环语句</h1>
<h2 id="指定次数循环"><a class="header-anchor" href="#指定次数循环">¶</a>指定次数循环</h2>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /L %variable <span class="keyword">IN</span> (<span class="built_in">start</span>,step,end) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure>
<p>组合命令：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /L %variable <span class="keyword">IN</span> (<span class="built_in">start</span>,step,end) <span class="keyword">DO</span> (</span><br><span class="line">Command1</span><br><span class="line">Command2</span><br><span class="line">……</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h2 id="对某集合执行循环语句。"><a class="header-anchor" href="#对某集合执行循环语句。">¶</a>对某集合执行循环语句。</h2>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> <span class="variable">%%v</span>ariable <span class="keyword">IN</span> (<span class="built_in">set</span>) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure>
<p><code>%%variable</code>  指定一个单一字母可替换的参数。<br>
<code>(set)</code>       指定一个或一组文件。可以使用通配符。<br>
<code>command</code>     对每个文件执行的命令，可用小括号使用多条命令组合。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /R [[drive:]<span class="built_in">path</span>] %variable <span class="keyword">IN</span> (<span class="built_in">set</span>) <span class="keyword">DO</span> command [command-parameters]</span><br></pre></td></tr></table></figure>
<p>检查以 <code>[drive:]path</code> 为根的目录树，指向每个目录中的<code>FOR</code> 语句。<br>
如果在 <code>/R</code> 后没有指定目录，则使用当前目录。<br>
如果集仅为一个单点<code>.</code>字符，则枚举该目录树。<br>
同前面一样，<code>command</code>可以用括号来组合：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span> /R [[drive:]<span class="built_in">path</span>] %variable <span class="keyword">IN</span> (<span class="built_in">set</span>) <span class="keyword">DO</span> (</span><br><span class="line">Command1</span><br><span class="line">Command2</span><br><span class="line">……</span><br><span class="line">commandn</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<h1>条件循环</h1>
<p>上面的循环结构是用<code>for</code>命令来实现的，<code>for</code>命令循环有一个缺点，就是整个循环被当作一条命令语句，涉及到变量延迟的问题。</p>
<p>利用<code>goto</code>语句和条件判断，dos可以实现条件循环，很简单啦，看例子:</p>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> var=<span class="number">0</span></span><br><span class="line"><span class="comment">rem ************循环开始了</span></span><br><span class="line">:continue</span><br><span class="line"><span class="built_in">set</span> /a var+=<span class="number">1</span></span><br><span class="line"><span class="built_in">echo</span> 第<span class="variable">%var%</span>次循环</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%var%</span> <span class="keyword">lss</span> <span class="number">100</span> <span class="keyword">goto</span> continue</span><br><span class="line"><span class="comment">rem ************循环结束了</span></span><br><span class="line"><span class="built_in">echo</span> 循环执行完毕</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> var=<span class="number">100</span></span><br><span class="line"><span class="comment">rem ************循环开始了</span></span><br><span class="line">:continue</span><br><span class="line"><span class="built_in">echo</span> 第<span class="variable">%var%</span>次循环</span><br><span class="line"><span class="built_in">set</span> /a var-=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%var%</span> <span class="keyword">gtr</span> <span class="number">0</span> <span class="keyword">goto</span> continue</span><br><span class="line"><span class="comment">rem ************循环结束了</span></span><br><span class="line"><span class="built_in">echo</span> 循环执行完毕</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<h1>子程序</h1>
<p>在批处理程序中可以调用外部可运行程序，比如exe程序，也可调用其他批处理程序，这些也可以看作子程序，但是不够方便，如果被调用的程序很多，就显得不够简明了，很繁琐。</p>
<p>在windows中，批处理可以调用本程序中的一个程序段，相当于子程序，这些子程序一般放在主程序后面。</p>
<p>子程序调用格式：</p>
<pre><code>CALL :label arguments
</code></pre>
<p>子程序语法：</p>
<pre><code>:label
command1
command2
......
commandn
goto :eof
</code></pre>
<p>在子程序段中，参数<code>%0</code>指标签:<code>label</code>，子过程一般放在最后，并且注意在主程序最后要加上<code>exit</code>或跳转语句，避免错误的进入子过程。<br>
子程序和主程序中的变量都是全局变量，其作用范围都是整个批处理程序。<br>
传至子程序的参数在<code>call</code>语句中指定，在子程序中用<code>%1</code>、<code>%2</code>至<code>%9</code>的形式调用，而子程序返回主程序的数据只需在调用结束后直接引用就可以了，当然也可以指定返回变量，请看下面的例子。</p>
<p>子程序例1：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">call</span> :sub return 你好</span><br><span class="line"><span class="built_in">echo</span> 子程序返回值：<span class="variable">%return%</span></span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line">:sub</span><br><span class="line"><span class="built_in">set</span> <span class="variable">%1=%</span><span class="number">2</span></span><br><span class="line"><span class="keyword">goto</span> :eof</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<pre><code>你好
</code></pre>
<p>子程序例2：设计一个求多个整数相加的子程序</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">call</span> :sub sum <span class="number">10</span> <span class="number">20</span> <span class="number">35</span></span><br><span class="line"><span class="built_in">echo</span> 数据求和结果：<span class="variable">%sum%</span></span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line">:sub</span><br><span class="line"><span class="comment">rem 参数1为返回变量名称</span></span><br><span class="line"><span class="built_in">set</span> /a <span class="variable">%1=%</span><span class="number">1</span>+%<span class="number">2</span></span><br><span class="line"><span class="built_in">shift</span> /<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> "%<span class="number">2</span>"=="" <span class="keyword">goto</span> sub</span><br><span class="line"><span class="keyword">goto</span> :eof</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<pre><code>65
</code></pre>
<h1>用ftp命令实现自动下载</h1>
<p>ftp是常用的下载工具，ftp界面中有40多个常用命令。这里介绍如何用dos命令行调用ftp命令，实现ftp自动登录，并上传下载，并自动退出ftp程序。<br>
其实可以将ftp命令组合保存为一个文本文件，然后用以下命令调用即可。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">ftp  -n -s:[[drive:]<span class="built_in">path</span>]filename</span><br></pre></td></tr></table></figure>
<p>上面的<code>filename</code>为ftp命令文件，包括登录IP地址，用户名、密码、操作命令等</p>
<p>例：</p>
<pre><code>open 90.52.8.3    ＃打开ip
user iware        ＃用户为iware
password8848      ＃密码
bin               ＃二进制传输模式
prompt
cd tmp1           ＃切换至iware用户下的tmp1目录
pwd
lcd d:\download   ＃本地目录
mget *            ＃下载tmp1目录下的所有文件
bye               ＃退出ftp
</code></pre>
<h1>用7-ZIP实现命令行压缩和解压功能</h1>
<p>语法格式：（详细情况见7-zip帮助文件）</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="number">7</span>z &lt;command&gt; [&lt;switch&gt;...] &lt;base_archive_name&gt; [&lt;arguments&gt;...]</span><br></pre></td></tr></table></figure>
<p>7z.exe的每个命令都有不同的参数<code>&lt;switch&gt;</code>,请看帮助文件</p>
<p><code>&lt;base_archive_name&gt;</code>为压缩包名称<br>
<code>&lt;arguments&gt;</code>为文件名称，支持通配符或文件列表</p>
<p>其中，7z是至命令行压缩解压程序7z.exe，<code>&lt;command&gt;</code>是7z.exe包含的命令，列举如下：</p>
<p>a: Adds files to archive. 添加至压缩包</p>
<pre><code>a命令可用参数：
  -i (Include)
  -m (Method)
  -p (Set Password)
  -r (Recurse)
  -sfx (create SFX)
  -si (use StdIn)
  -so (use StdOut)
  -ssw (Compress shared files)
  -t (Type of archive)
  -u (Update)
  -v (Volumes)
  -w (Working Dir)
  -x (Exclude)
b： Benchmark
d： Deletes files from archive. 从压缩包中删除文件
d命令可用参数：
  -i (Include)
  -m (Method)
  -p (Set Password)
  -r (Recurse)
  -u (Update)
  -w (Working Dir)
  -x (Exclude)
e： Extract解压文件至当前目录或指定目录
e命令可用参数：
  -ai (Include archives)
  -an (Disable parsing of archive_name)
  -ao (Overwrite mode)
  -ax (Exclude archives)
  -i (Include)
  -o (Set Output Directory)
  -p (Set Password)
  -r (Recurse)
  -so (use StdOut)
  -x (Exclude)
  -y (Assume Yes on all queries)
l： Lists contents of archive.
t： Test 
u： Update
x： eXtract with full paths用文件的完整路径解压至当前目录或指定目录
x命令可用参数：
  -ai (Include archives)
  -an (Disable parsing of archive_name)
  -ao (Overwrite mode)
  -ax (Exclude archives)
  -i (Include)
  -o (Set Output Directory)
  -p (Set Password)
  -r (Recurse)
  -so (use StdOut)
  -x (Exclude)
  -y (Assume Yes on all queries)
</code></pre>
<h1>调用VBScript程序</h1>
<p>使用 Windows脚本宿主，可以在命令提示符下运行脚本。CScript.exe提供了用于设置脚本属性的命令行开关。</p>
<p>用法：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">CScript 脚本名称 [脚本选项...] [脚本参数...]</span><br></pre></td></tr></table></figure>
<p>选项：</p>
<pre><code>//B         批模式：不显示脚本错误及提示信息
//D         启用 Active Debugging
//E:engine  使用执行脚本的引擎
//H:CScript 将默认的脚本宿主改为 CScript.exe
//H:WScript 将默认的脚本宿主改为 WScript.exe （默认）
//I         交互模式（默认，与 //B 相对)
//Job:xxxx  执行一个 WSF 工作
//Logo      显示徽标（默认）
//Nologo    不显示徽标：执行时不显示标志
//S         为该用户保存当前命令行选项
//T:nn      超时设定秒：允许脚本运行的最长时间
//X         在调试器中执行脚本
//U         用 Unicode 表示来自控制台的重定向 I/O
</code></pre>
<p>“脚本名称”是带有扩展名和必需的路径信息的脚本文件名称，如<code>d:\admin\vbscripts\chart.vbs</code>。<br>
“脚本选项和参数”将传递给脚本。脚本参数前面有一个斜杠<code>/</code>。每个参数都是可选的；但不能在未指定脚本名称的情况下指定脚本选项。如果未指定参数，则 CScript 将显示 CScript 语法和有效的宿主参数。</p>
<h1>将批处理转化为可执行文件：</h1>
<p>由于批处理文件是一种文本文件，任何人都可以对其进行随便编辑，不小心就会把里面的命令破坏掉，所以如果将其转换成.com格式的可执行文件，不仅执行效率会大大提高，而且不会破坏原来的功能，更能将优先级提到最高。<code>Bat2Com</code>就可以完成这个转换工作。</p>
<blockquote>
<p><strong>小知识</strong>：<br>
在DOS环境下，可执行文件的优先级由高到低依次为<code>.com</code>&gt;<code>.exe</code>&gt;<code>.bat</code>&gt;<code>.cmd</code>，即如果在同一目录下存在文件名相同的这四类文件，当只键入文件名时，DOS执行的是 <a href="http://name.com" target="_blank" rel="noopener">name.com</a>，如果需要执行其他三个文件，则必须指定文件的全名，如name.bat。</p>
</blockquote>
<p>这是一个只有5.43K大小的免费绿色工具，可以运行在纯DOS或DOS窗口的命令行中，用法：</p>
<pre><code>Bat2Com FileName
</code></pre>
<p>这样就会在同一目录下生成一个名为FileNme.com的可执行文件，执行的效果和原来的.bat文件一样。</p>
<h1>时间延迟</h1>
<p>本条参考引用[英雄]教程</p>
<p>什么是时间延迟？顾名思义，就是执行一条命令后延迟一段时间再进行下一条命令。<br>
延迟的应用见下节：“模拟进度条”。</p>
<h2 id="利用ping命令延时"><a class="header-anchor" href="#利用ping命令延时">¶</a>利用ping命令延时</h2>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">  <span class="built_in">echo</span> 延时前：<span class="variable">%time%</span></span><br><span class="line">  <span class="built_in">ping</span> /n <span class="number">3</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span> &gt;<span class="built_in">nul</span></span><br><span class="line">  <span class="built_in">echo</span> 延时后：<span class="variable">%time%</span></span><br><span class="line">  <span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>解说：用到了<code>ping</code>命令的<code>/n”</code>参数，表示要发送多少次请求到指定的ip。本例中要发送3次请求到本机的<code>ip（127.0.0.1）</code>。<code>127.0.0.1</code>可简写为<code>127.1</code>。<code>&gt;nul</code>就是屏蔽掉<code>ping</code>命令所显示的内容。</p>
<h2 id="利用for命令延时"><a class="header-anchor" href="#利用for命令延时">¶</a>利用for命令延时</h2>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">  <span class="built_in">echo</span> 延时前：<span class="variable">%time%</span></span><br><span class="line">  <span class="keyword">for</span> /l <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">5000</span>) <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">%%i</span>&gt;<span class="built_in">nul</span></span><br><span class="line">  <span class="built_in">echo</span> 延时后：<span class="variable">%time%</span></span><br><span class="line">  <span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>解说：原理很简单，就是利用一个计次循环并屏蔽它所显示的内容来达到延时的目的。</p>
<h2 id="利用vbs延迟函数，精确度毫秒，误差1000毫秒内"><a class="header-anchor" href="#利用vbs延迟函数，精确度毫秒，误差1000毫秒内">¶</a>利用vbs延迟函数，精确度毫秒，误差1000毫秒内</h2>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">%time%</span></span><br><span class="line">    <span class="keyword">call</span> :delay <span class="number">5000</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">%time%</span></span><br><span class="line">    <span class="built_in">pause</span></span><br><span class="line">    <span class="keyword">exit</span></span><br><span class="line">    :delay</span><br><span class="line">    <span class="built_in">echo</span> WScript.Sleep %<span class="number">1</span>&gt;delay.vbs</span><br><span class="line">    CScript //B delay.vbs</span><br><span class="line">    <span class="built_in">del</span> delay.vbs</span><br><span class="line">    <span class="keyword">goto</span> :eof</span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<pre><code>10:44:06.45
10:44:11.95
请按任意键继续. . .
</code></pre>
<p>上面的运行结果显示实际延时了5500毫秒，多出来的500毫秒时建立和删除临时文件所耗费的时间。误差在一秒之内。</p>
<h2 id="仅用批处理命令实现任意时间延迟"><a class="header-anchor" href="#仅用批处理命令实现任意时间延迟">¶</a>仅用批处理命令实现任意时间延迟</h2>
<p>仅用批处理命令就可以实现延迟操作，精确度10毫秒，误差50毫秒内。<br>
例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> /p delay=请输入需延迟的毫秒数：</span><br><span class="line"><span class="built_in">set</span> TotalTime=<span class="number">0</span></span><br><span class="line"><span class="built_in">set</span> NowTime=<span class="variable">%time%</span></span><br><span class="line">::读取起始时间，时间格式为：<span class="number">13</span>:<span class="number">01</span>:<span class="number">05</span>.<span class="number">95</span></span><br><span class="line"><span class="built_in">echo</span> 程序开始时间：<span class="variable">%NowTime%</span></span><br><span class="line">:delay_continue</span><br><span class="line"><span class="built_in">set</span> /a minute1=<span class="number">1</span><span class="variable">%NowTime:~3,2%</span>-<span class="number">100</span></span><br><span class="line">::读取起始时间的分钟数</span><br><span class="line"><span class="built_in">set</span> /a second1=<span class="number">1</span><span class="variable">%NowTime:~-5,2%</span><span class="variable">%NowTime:~-2%</span><span class="number">0</span>-<span class="number">100000</span></span><br><span class="line">::将起始时间的秒数转为毫秒</span><br><span class="line"><span class="built_in">set</span> NowTime=<span class="variable">%time%</span></span><br><span class="line"><span class="built_in">set</span> /a minute2=<span class="number">1</span><span class="variable">%NowTime:~3,2%</span>-<span class="number">100</span></span><br><span class="line">:: 读取现在时间的分钟数</span><br><span class="line"><span class="built_in">set</span> /a second2=<span class="number">1</span><span class="variable">%NowTime:~-5,2%</span><span class="variable">%NowTime:~-2%</span><span class="number">0</span>-<span class="number">100000</span></span><br><span class="line">::将现在时间的秒数转为毫秒</span><br><span class="line"><span class="built_in">set</span> /a TotalTime+=(<span class="variable">%minute2%</span>-<span class="variable">%minute1%</span>+<span class="number">60</span>)<span class="variable">%%6</span>0*<span class="number">60000</span>+<span class="variable">%second2%</span>-<span class="variable">%second1%</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%TotalTime%</span> <span class="keyword">lss</span> <span class="variable">%delay%</span> <span class="keyword">goto</span> delay_continue</span><br><span class="line"><span class="built_in">echo</span> 程序结束时间：<span class="variable">%time%</span></span><br><span class="line"><span class="built_in">echo</span> 设定延迟时间：<span class="variable">%delay%</span>毫秒</span><br><span class="line"><span class="built_in">echo</span> 实际延迟时间：<span class="variable">%TotalTime%</span>毫秒</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<pre><code>请输入需延迟的毫秒数：6000
程序开始时间：15:32:16.37
程序结束时间：15:32:22.37
设定延迟时间：6000毫秒
实际延迟时间：6000毫秒
请按任意键继续. . .
</code></pre>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/> 实现原理：首先设定要延迟的毫秒数，然后用循环累加时间，直到累加时间大于等于延迟时间。</p>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/> 误差：windows系统时间只能精确到10毫秒，所以理论上有可能存在10毫秒误差。经测试，当延迟时间大于500毫秒时，上面的延迟程序一般不存在误差。当延迟时间小于500毫秒时，可能有几十毫秒误差，为什么？因为延迟程序本身也是有运行时间的，同时系统时间只能精确到10毫秒。</p>
<p>为了方便引用，可将上面的例子改为子程序调用形式：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> 程序开始时间：<span class="variable">%Time%</span></span><br><span class="line"><span class="keyword">call</span> :delay <span class="number">10</span></span><br><span class="line"><span class="built_in">echo</span> 实际延迟时间：<span class="variable">%totaltime%</span>毫秒</span><br><span class="line"><span class="built_in">echo</span> 程序结束时间：<span class="variable">%time%</span></span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">::-----------以下为延时子程序--------------------</span><br><span class="line">:delay</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> "%<span class="number">1</span>"=="" <span class="keyword">goto</span> :eof</span><br><span class="line"><span class="built_in">set</span> DelayTime=%<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span> TotalTime=<span class="number">0</span></span><br><span class="line"><span class="built_in">set</span> NowTime=<span class="variable">%time%</span></span><br><span class="line">::读取起始时间，时间格式为：<span class="number">13</span>:<span class="number">01</span>:<span class="number">05</span>.<span class="number">95</span></span><br><span class="line">:delay_continue</span><br><span class="line"><span class="built_in">set</span> /a minute1=<span class="number">1</span><span class="variable">%NowTime:~3,2%</span>-<span class="number">100</span></span><br><span class="line"><span class="built_in">set</span> /a second1=<span class="number">1</span><span class="variable">%NowTime:~-5,2%</span><span class="variable">%NowTime:~-2%</span><span class="number">0</span>-<span class="number">100000</span></span><br><span class="line"><span class="built_in">set</span> NowTime=<span class="variable">%time%</span></span><br><span class="line"><span class="built_in">set</span> /a minute2=<span class="number">1</span><span class="variable">%NowTime:~3,2%</span>-<span class="number">100</span></span><br><span class="line"><span class="built_in">set</span> /a second2=<span class="number">1</span><span class="variable">%NowTime:~-5,2%</span><span class="variable">%NowTime:~-2%</span><span class="number">0</span>-<span class="number">100000</span></span><br><span class="line"><span class="built_in">set</span> /a TotalTime+=(<span class="variable">%minute2%</span>-<span class="variable">%minute1%</span>+<span class="number">60</span>)<span class="variable">%%6</span>0*<span class="number">60000</span>+<span class="variable">%second2%</span>-<span class="variable">%second1%</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%TotalTime%</span> <span class="keyword">lss</span> <span class="variable">%DelayTime%</span> <span class="keyword">goto</span> delay_continue</span><br><span class="line"><span class="keyword">goto</span> :eof</span><br></pre></td></tr></table></figure>
<h1>模拟进度条</h1>
<p>下面给出一个模拟进度条的程序。如果将它运用在你自己的程序中，可以使你的程序更漂亮。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">mode</span> <span class="built_in">con</span> cols=<span class="number">113</span> lines=<span class="number">15</span> &amp;<span class="built_in">color</span> <span class="number">9</span>f</span><br><span class="line"><span class="built_in">cls</span></span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span>  程序正在初始化. . . </span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span>  ┌──────────────────────────────────────┐</span><br><span class="line"><span class="built_in">set</span>/p=  ■ &lt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">for</span> /L <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">1</span> <span class="number">1</span> <span class="number">38</span>) <span class="keyword">do</span> <span class="built_in">set</span> /p a=■&lt;<span class="built_in">nul</span>&amp;<span class="built_in">ping</span> /n <span class="number">1</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>&gt;<span class="built_in">nul</span></span><br><span class="line"><span class="built_in">echo</span>   <span class="number">100</span>%%</span><br><span class="line"><span class="built_in">echo</span>  └──────────────────────────────────────┘</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/> 解说：<br>
<code>set /p a=■&lt;nul</code>的意思是：只显示提示信息<code>■</code>不换行，也不需手工输入任何信息，这样可以使每个<code>■</code>在同一行逐个输出。<code>ping /n 0 127.1&gt;nul</code>是输出每个<code>■</code>的时间间隔，即每隔多少时间输出一个<code>■</code>。</p>
<h1>特殊字符的输入及应用</h1>
<p><code>开始</code> -&gt; <code>运行</code> -&gt; <code>输入cmd</code> -&gt; <code>edit</code> -&gt; <code>ctrl+p</code>（意思是允许输入特殊字符）-&gt; 按<code>ctrl+a</code>将会显示笑脸图案。（如果要继续输入特殊字符请再次按ctrl+p，然后ctrl+某个字母）。<strong>以上是特殊字符的输入方法，还挺管用。</strong> 也就是用编辑程序<code>edit</code>输入特殊字符，然后保存为一文本文件，再在windows下打开此文件，复制其中的特殊符号即可。</p>
<p>一些简单的特殊符号可以在dos命令窗口直接输入，并用重定向保存为文本文件。</p>
<p>例：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">C:&gt;<span class="title">ECHO</span> ^<span class="title">G</span>&gt;<span class="title">temp.txt</span></span></span><br></pre></td></tr></table></figure>
<p><code>^G</code>是用Ctrl＋G或Alt＋007输入，输入多个<code>^G</code>可以产生多声鸣响。</p>
<blockquote>
<p><img class="emoji" draggable="false" alt="✊" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/270a.png"/><br>
特殊字符的应用也很有意思，这里仅举一例：退格键，表示删除左边的字符，此键不能在文档中正常输入，但可以通过edit编辑程序录入并复制出来。即“”。利用退格键，可以设计闪烁文字效果</p>
</blockquote>
<p>例：<strong>文字闪烁</strong></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:<span class="built_in">start</span></span><br><span class="line"><span class="built_in">set</span>/p=床前明月光&lt;<span class="built_in">nul</span></span><br><span class="line">::显示文字，光标停于行尾</span><br><span class="line"><span class="built_in">ping</span> -n <span class="number">0</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>&gt;<span class="built_in">nul</span></span><br><span class="line">::设置延迟时间</span><br><span class="line"><span class="built_in">set</span> /p a=&lt;<span class="built_in">nul</span></span><br><span class="line">:: 输出一些退格符将光标置于该行的最左端（退格符的数量可以自己调整）。</span><br><span class="line"><span class="built_in">set</span> /p a=                               &lt;<span class="built_in">nul</span></span><br><span class="line">::输出空格将之前输出的文字覆盖掉。</span><br><span class="line"><span class="built_in">set</span> /p a=&lt;<span class="built_in">nul</span></span><br><span class="line">::再次输出退格符将光标置于该行的最左端，这里的退格符数量一定不能比前面的空格数少。</span><br><span class="line">::否则光标不能退到最左端。</span><br><span class="line"><span class="keyword">goto</span> <span class="built_in">start</span></span><br><span class="line">例：输出唐诗一首，每行闪动多次</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"><span class="built_in">set</span> str=床前明月光 疑是地上霜 举头望明月 低头思故乡</span><br><span class="line">::定义字符串str</span><br><span class="line"><span class="keyword">for</span> <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="variable">%str%</span>) <span class="keyword">do</span> (</span><br><span class="line"><span class="comment">  rem 由于str中含有空格，则以空格为分隔符将str中的每一个部分依次赋给变量%%i。</span></span><br><span class="line">        <span class="built_in">set</span> char=<span class="variable">%%i</span></span><br><span class="line">        <span class="built_in">echo</span>.</span><br><span class="line">        <span class="built_in">echo</span>.</span><br><span class="line">        <span class="keyword">for</span> /l <span class="variable">%%j</span> <span class="keyword">in</span> (<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>) <span class="keyword">do</span> (</span><br><span class="line">                <span class="built_in">set</span>/p=<span class="variable">!char:~%%j,1!</span>&lt;<span class="built_in">nul</span></span><br><span class="line"><span class="comment">  rem 依次取出变量char中的每一个字符，并显示。</span></span><br><span class="line">                <span class="built_in">ping</span> -n <span class="number">0</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>&gt;<span class="built_in">nul</span></span><br><span class="line"><span class="comment">  rem 设置输出每个字符的时间延迟。</span></span><br><span class="line">        )</span><br><span class="line"> <span class="keyword">call</span> :hero <span class="variable">%%i</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">pause</span>&gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">:hero</span><br><span class="line"><span class="keyword">for</span> /l <span class="variable">%%k</span> <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">1</span>,<span class="number">10</span>) <span class="keyword">do</span> (</span><br><span class="line"> <span class="built_in">ping</span> /n <span class="number">0</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>&gt;<span class="built_in">nul</span></span><br><span class="line"> <span class="built_in">set</span> /p a=&lt;<span class="built_in">nul</span></span><br><span class="line"> <span class="built_in">set</span> /p a=                               &lt;<span class="built_in">nul</span></span><br><span class="line"> <span class="built_in">set</span> /p a=&lt;<span class="built_in">nul</span></span><br><span class="line"> <span class="built_in">ping</span> /n <span class="number">0</span> <span class="number">127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>&gt;<span class="built_in">nul</span></span><br><span class="line"> <span class="built_in">set</span> /p a=%<span class="number">1</span>&lt;<span class="built_in">nul</span></span><br><span class="line">)</span><br><span class="line">::文字闪动</span><br><span class="line"><span class="keyword">goto</span> :eof</span><br></pre></td></tr></table></figure>
<h1>随机数（%random%）的应用技巧</h1>
<p><code>%RANDOM%</code> 系统变量 返回 <code>0</code> 到 <code>32767</code> 之间的任意十进制数字。由 Cmd.exe 生成。2的15次方等于32768，上面的0～32767实际就是15位二进制数的范围。<br>
那么，如何获取100以内的随机数呢？很简单，将<code>%RANDOM%</code>按100进行求余运算即可，见例子。</p>
<p>例：生成5个100以内的随机数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">setlocal enabledelayedexpansion</span><br><span class="line">for &#x2F;L %%i in (1 1 5) do (</span><br><span class="line">   set &#x2F;a randomNum&#x3D;!random!%%100</span><br><span class="line">   echo 随机数：!randomNum!</span><br><span class="line">)</span><br><span class="line">pause</span><br></pre></td></tr></table></figure>
<p>运行结果：（每次运行不一样）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">随机数：91</span><br><span class="line">随机数：67</span><br><span class="line">随机数：58</span><br><span class="line">随机数：26</span><br><span class="line">随机数：20</span><br><span class="line">请按任意键继续. . .</span><br></pre></td></tr></table></figure>
<p>求余数运算<code>set /a randomNum=!random!%%100中</code>的<code>100</code>可以是1～32768之间的任意整数。</p>
<blockquote>
<p><strong>总结：</strong><br>
利用系统变量<code>%random%</code>，求余数运算<code>%%</code>，字符串处理等，可以实现很多随机处理。</p>
</blockquote>
<p><strong>思考题目：</strong> 生成给定位数的随机密码</p>
<p><strong>解答思路：</strong> 将26个英文字母或10数字以及其它特殊字符组成一个字符串，随机抽取其中的若干字符。</p>
<details>
<summary><b>参考答案1：</b></summary>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">call</span> :randomPassword <span class="number">5</span> pass1 pass2</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%pass1%</span> <span class="variable">%pass2%</span> </span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">:randomPassword</span><br><span class="line">::---------生成随机密码</span><br><span class="line">::---------<span class="variable">%1为密码长度，%</span><span class="number">2</span>及以后为返回变量名称</span><br><span class="line">::---------<span class="keyword">for</span>命令最多只能区分<span class="number">31</span>个字段</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> password_len=%<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">defined</span> password_len <span class="keyword">goto</span> :eof</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%password_len%</span> <span class="keyword">lss</span> <span class="number">1</span> <span class="keyword">goto</span> :eof</span><br><span class="line"><span class="built_in">set</span> wordset=a b c d e f g h i j k l m n o p q r s t u v w x y z</span><br><span class="line"><span class="built_in">set</span> return=</span><br><span class="line"><span class="built_in">set</span> num=<span class="number">0</span></span><br><span class="line">:randomPassword1</span><br><span class="line"><span class="built_in">set</span> /a num+=<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span> /a numof=<span class="variable">%random%</span><span class="variable">%%2</span>6+<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> /f "tokens=<span class="variable">%numof%</span> delims= " <span class="variable">%%i</span> <span class="keyword">in</span> ("<span class="variable">%wordset%</span>") <span class="keyword">do</span> <span class="built_in">set</span> return=<span class="variable">%return%</span><span class="variable">%%i</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%num%</span> <span class="keyword">lss</span> <span class="variable">%password_len%</span> <span class="keyword">goto</span> randomPassword1</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> "%<span class="number">2</span>"=="" <span class="built_in">set</span> <span class="variable">%2=%</span>return%</span><br><span class="line"><span class="built_in">shift</span> /<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> "%<span class="number">2</span>"=="" <span class="keyword">goto</span> randomPassword</span><br><span class="line"><span class="keyword">goto</span> :eof</span><br></pre></td></tr></table></figure>
</details> 
<details>
<summary><strong>参考答案2：</strong></summary>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">call</span> :randomPassword <span class="number">6</span> pass1 pass2 pass3</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%pass1%</span> <span class="variable">%pass2%</span> <span class="variable">%pass3%</span></span><br><span class="line"><span class="built_in">pause</span></span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line">:randomPassword</span><br><span class="line">::---------生成随机密码</span><br><span class="line">::---------<span class="variable">%1为密码长度，%</span><span class="number">2</span>及以后为返回变量名称</span><br><span class="line">::---------<span class="keyword">goto</span>循环、变量嵌套、命令嵌套</span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">if</span> "%<span class="number">1</span>"=="" <span class="keyword">goto</span> :eof</span><br><span class="line"><span class="keyword">if</span> %<span class="number">1</span> <span class="keyword">lss</span> <span class="number">1</span> <span class="keyword">goto</span> :eof</span><br><span class="line"><span class="built_in">set</span> password_len=%<span class="number">1</span></span><br><span class="line"><span class="built_in">set</span> return=</span><br><span class="line"><span class="built_in">set</span> wordset=abcdefghijklmnopqrstuvwxyz023456789_</span><br><span class="line">::---------------------------循环</span><br><span class="line">:randomPassword1</span><br><span class="line"><span class="built_in">set</span> /a numof=<span class="variable">%random%</span><span class="variable">%%3</span>6</span><br><span class="line"><span class="keyword">call</span> <span class="built_in">set</span> return=<span class="variable">%return%</span><span class="variable">%%w</span>ordset:~<span class="variable">%numof%</span>,<span class="number">1</span>%%</span><br><span class="line"><span class="built_in">set</span> /a password_len-=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%password_len%</span> <span class="keyword">gtr</span> <span class="number">0</span> <span class="keyword">goto</span> randomPassword1</span><br><span class="line">::---------------------------循环</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> "%<span class="number">2</span>"=="" <span class="built_in">set</span> <span class="variable">%2=%</span>return%</span><br><span class="line"><span class="built_in">shift</span> /<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> "%<span class="number">2</span>"=="" <span class="keyword">goto</span> randomPassword</span><br><span class="line"><span class="keyword">goto</span> :eof</span><br></pre></td></tr></table></figure>
<p>说明：本例涉及到变量嵌套和命令嵌套的应用，见后。</p>
</details>  
<h1>变量嵌套与命令嵌套</h1>
<p>和其它编程语言相比，dos功能显得相对简单，要实现比较复杂的功能，需要充分运用各种技巧，变量嵌套与命令嵌套就是此类技巧之一。<br>
先复习一下前面的“字符串截取”的关键内容：</p>
<p>截取功能统一语法格式为：<code>%a:~[m[,n]]%</code></p>
<p>方括号表示可选，<code>%</code>为变量标识符，<code>a</code>为变量名，不可少，冒号用于分隔变量名和说明部分，符号<code>～</code>可以简单理解为“偏移”即可，<code>m</code>为偏移量（缺省为0），<code>n</code>为截取长度（缺省为全部）。百分号如果需要当成单一字符，必须写成<code>%%</code>。</p>
<p>以上是dos变量处理的通用格式，如果其中的<code>m</code>、<code>n</code>为变量，那么这种情况就是变量嵌套了。比如设变量<code>word</code>为<code>“abcdefghij”</code>，变量<code>num</code>为<code>“eee4eeeee”</code>，<code>%word:~4,1%</code>为<code>e</code>，其中<code>4</code>可以从变量<code>num</code>中取值，即<code>%num:~3,1%</code>，写成组合形式：<code>%word:~%num:~3,1%,1%</code>，经测试这种写法不能正确执行。</p>
<p>那么，怎么实现这种变量嵌套呢？首先，我们将其中的<code>%num:~3,1%</code>作为正常的字符处理命令，其它部分当成一般字符串，这样首尾的%就必须写成<code>%%</code>了，即<code>%%word:~%num:~3,1%,1%%</code>。但是上面的写法同样不能直接当成命令执行，必须运用命令嵌套才能执行。</p>
<p>那么什么是命令嵌套呢？简单的说，首先用一条dos命令生成一个字符串，而这个字符串是另一条dos命令，用<code>call</code>语句调用字符串将其执行，从而得到最终结果。</p>
<p>例：用<code>call</code>语句实现命令嵌套</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> str1=aaa <span class="built_in">echo</span> ok bbb</span><br><span class="line"><span class="built_in">echo</span> 初始字符串：<span class="variable">%str1%</span></span><br><span class="line"><span class="built_in">echo</span> 生成命令字符串如下：</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%str1:~4,7%</span></span><br><span class="line"><span class="built_in">echo</span> 运行命令字符串生成最终结果为：</span><br><span class="line"><span class="keyword">call</span> <span class="variable">%str1:~4,7%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<p>运行显示：</p>
<pre><code>初始字符串：aaa echo ok bbb
生成命令字符串如下：
echo ok
运行命令字符串生成最终结果为：
ok
请按任意键继续. . .
</code></pre>
<p>变量嵌套与命令嵌套结合运用，见下例。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">set</span> num=Redtek <span class="number">2006</span> bbs.cn-dos.<span class="built_in">net</span></span><br><span class="line"><span class="built_in">set</span> a=<span class="number">123245</span></span><br><span class="line"><span class="built_in">set</span> b=<span class="number">87754321</span></span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span> a=<span class="variable">%a%</span>  b=<span class="variable">%b%</span>  num=<span class="variable">%num%</span></span><br><span class="line"><span class="built_in">set</span> result=<span class="variable">%%%</span><span class="variable">%%%</span><span class="variable">%%n</span>um:~<span class="variable">%%%</span><span class="variable">%b:~%</span>a:~<span class="number">3</span>,<span class="number">1</span><span class="variable">%,1%</span><span class="variable">%%%</span>,<span class="number">4</span><span class="variable">%%%</span><span class="variable">%%%</span>%%</span><br><span class="line"><span class="built_in">echo</span> 直接运行命令，只解析第一层变量，其余的当作字符串：<span class="variable">%result%</span></span><br><span class="line"><span class="keyword">call</span> <span class="built_in">set</span> result=<span class="variable">%%%</span><span class="variable">%%%</span><span class="variable">%%n</span>um:~<span class="variable">%%%</span><span class="variable">%b:~%</span>a:~<span class="number">3</span>,<span class="number">1</span><span class="variable">%,1%</span><span class="variable">%%%</span>,<span class="number">4</span><span class="variable">%%%</span><span class="variable">%%%</span>%%</span><br><span class="line"><span class="built_in">echo</span> 一层命令嵌套，可解析两层变量，其余的当作字符串：<span class="variable">%result%</span></span><br><span class="line"><span class="keyword">call</span> <span class="keyword">call</span> <span class="built_in">set</span> result=<span class="variable">%%%</span><span class="variable">%%%</span><span class="variable">%%n</span>um:~<span class="variable">%%%</span><span class="variable">%b:~%</span>a:~<span class="number">3</span>,<span class="number">1</span><span class="variable">%,1%</span><span class="variable">%%%</span>,<span class="number">4</span><span class="variable">%%%</span><span class="variable">%%%</span>%%</span><br><span class="line"><span class="built_in">echo</span> 两层命令嵌套，可解析三层变量，其余的当作字符串：<span class="variable">%result%</span></span><br><span class="line"><span class="keyword">call</span> <span class="keyword">call</span> <span class="keyword">call</span> <span class="built_in">set</span> result=<span class="variable">%%%</span><span class="variable">%%%</span><span class="variable">%%n</span>um:~<span class="variable">%%%</span><span class="variable">%b:~%</span>a:~<span class="number">3</span>,<span class="number">1</span><span class="variable">%,1%</span><span class="variable">%%%</span>,<span class="number">4</span><span class="variable">%%%</span><span class="variable">%%%</span>%%</span><br><span class="line"><span class="built_in">echo</span> 三层命令嵌套，运行变量解析完后的字符串：<span class="variable">%result%</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure>
<h1>文件内容筛选（type和findstr命令结合使用）</h1>
<p>Find常和type命令结合使用</p>
<pre><code>Type [drive:][path]filename | find &quot;string&quot; [&gt;tmpfile] #挑选包含string的行
Type [drive:][path]filename | find /v &quot;string&quot;   #剔除文件中包含string的行
Type [drive:][path]filename | find /c   #显示文件行数 
</code></pre>
<p>以上用法将去除find命令自带的提示语（文件名提示）：</p>
<pre><code>FIND [/V] [/C] [/N] [/I] [/OFF[LINE]] &quot;string&quot; [[drive:][path]filename[ ...]]

  /V                      显示所有未包含指定字符串的行。
  /C                      仅显示包含字符串的行数。
  /N                      显示行号。
  /I                      搜索字符串时忽略大小写。
  /OFF[LINE]              不要跳过具有脱机属性集的文件。
  &quot;string&quot;                指定要搜索的文字串，
  [drive:][path]filename  指定要搜索的文件。
</code></pre>
<p>如果没有指定路径，FIND 将搜索键入的或者由另一命令产生的文字。</p>
<p>find命令不能处理文件中超过1024个字符的数据行，此时可用findstr命令。（见前面介绍）</p>
<pre><code>FINDSTR [/B] [/E] [/L] [/R] [/S] [/I] [/X] [/V] [/N] [/M] [/O] [/F:file]
        [/C:string] [/G:file] [/D:dir list] [/A:color attributes] [/OFF[LINE]]
        strings [[drive:][path]filename[ ...]]

  /B                      在一行的开始配对模式。
  /E                      在一行的结尾配对模式。
  /L                      按字使用搜索字符串。
  /R                      将搜索字符串作为一般表达式使用。
  /S                      在当前目录和所有子目录中搜索匹配文件。
  /I                      指定搜索不分大小写。
  /X                      打印完全匹配的行。
  /V                      只打印不包含匹配的行。
  /N                      在匹配的每行前打印行数。
  /M                      如果文件含有匹配项，只打印其文件名。
  /O                      在每个匹配行前打印字符偏移量。
  /P                      忽略有不可打印字符的文件。
  /OFF[LINE]              不跳过带有脱机属性集的文件。
  /A:attr                 指定有十六进位数字的颜色属性。请见 &quot;color /?&quot;
  /F:file                 从指定文件读文件列表 (/ 代表控制台)。
  /C:string               使用指定字符串作为文字搜索字符串。
  /G:file                 从指定的文件获得搜索字符串。 (/ 代表控制台)。
  /D:dir                  查找以分号为分隔符的目录列表
  strings                 要查找的文字。
  [drive:][path]filename  指定要查找的文件。
</code></pre>
<p>除非参数有 <code>/C</code> 前缀，请使用空格隔开搜索字符串。</p>
<p>例如:</p>
<p><code>FINDSTR &quot;hello there&quot; x.y</code> 在文件 x.y 中寻找 “hello” 或<br>
“there” 。<br>
<code>FINDSTR /C:&quot;hello there&quot; x.y</code> 文件 x.y  寻找 “hello there”。</p>
<p>一般表达式的快速参考:</p>
<pre><code>.        通配符: 任何字符
*        重复: 以前字符或类别出现零或零以上次数
^        行位置: 行的开始
$        行位置: 行的终点
[class]  字符类别: 任何在字符集中的字符
[^class] 补字符类别: 任何不在字符集中的字符
[x-y]    范围: 在指定范围内的任何字符
\x       Escape: 元字符 x 的文字用法
\&lt;xyz    字位置: 字的开始
xyz\&gt;    字位置: 字的结束</code></pre>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>批处理</tag>
        <tag>DOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo中添加emoji表情</title>
    <url>/2020/04/16/Hexo%E4%B8%AD%E6%B7%BB%E5%8A%A0emoji%E8%A1%A8%E6%83%85/</url>
    <content><![CDATA[<center>
<p><img class="emoji" draggable="false" alt="💯" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f4af.png"/><img class="emoji" draggable="false" alt="🔢" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f522.png"/><img class="emoji" draggable="false" alt="😋" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f60b.png"/><img class="emoji" draggable="false" alt="🚵" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f6b5.png"/><img class="emoji" draggable="false" alt="🔜" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f51c.png"/><img class="emoji" draggable="false" alt="🛥" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f6e5.png"/><img class="emoji" draggable="false" alt="🏞" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f3de.png"/><img class="emoji" draggable="false" alt="🌃" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f303.png"/><img class="emoji" draggable="false" alt="🎆" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f386.png"/><img class="emoji" draggable="false" alt="📘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f4d8.png"/><img class="emoji" draggable="false" alt="❎" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/274e.png"/><img class="emoji" draggable="false" alt="🇨🇳" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f1e8-1f1f3.png"/><img class="emoji" draggable="false" alt="🐱" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f431.png"/><img class="emoji" draggable="false" alt="🌕" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f315.png"/><img class="emoji" draggable="false" alt="🌖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f316.png"/><img class="emoji" draggable="false" alt="🌗" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f317.png"/><img class="emoji" draggable="false" alt="🌘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f318.png"/><img class="emoji" draggable="false" alt="🌑" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f311.png"/><img class="emoji" draggable="false" alt="🌒" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f312.png"/><img class="emoji" draggable="false" alt="🌓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f313.png"/><img class="emoji" draggable="false" alt="🌔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f314.png"/><img class="emoji" draggable="false" alt="0️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/30-20e3.png"/><img class="emoji" draggable="false" alt="1️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/31-20e3.png"/><img class="emoji" draggable="false" alt="2️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/32-20e3.png"/><img class="emoji" draggable="false" alt="3️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/33-20e3.png"/><img class="emoji" draggable="false" alt="4️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/34-20e3.png"/><img class="emoji" draggable="false" alt="5️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/35-20e3.png"/><img class="emoji" draggable="false" alt="6️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/36-20e3.png"/><img class="emoji" draggable="false" alt="7️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/37-20e3.png"/><img class="emoji" draggable="false" alt="8️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/38-20e3.png"/><img class="emoji" draggable="false" alt="9️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/39-20e3.png"/><img class="emoji" draggable="false" alt="🔟" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f51f.png"/></p>
<p>本文介绍如何让Hexo支持emoji表情。</p>
</center>
<a id="more"></a>
<p>首先，要知道markdown 变成html的转换器叫做markdown渲染器。在Hexo中默认的markdown渲染器使用的是<a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a>，此渲染器不支持插件扩展；要让hexo支持emoji，则需要将渲染器更换为支持插件扩展的渲染器。网络博主们推荐<a href="https://github.com/celsomiranda/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a>，该渲染器可通过使用<a href="https://github.com/markdown-it/markdown-it-emoji" target="_blank" rel="noopener">markdown-it-emoji</a>插件来支持emoji渲染。</p>
<h1>安装</h1>
<p>三步：卸载旧渲染器，安装新渲染器，安装插件</p>
<h2 id="卸载hexo-renderer-marked"><a class="header-anchor" href="#卸载hexo-renderer-marked">¶</a>卸载<a href="https://github.com/hexojs/hexo-renderer-marked" target="_blank" rel="noopener">hexo-renderer-marked</a></h2>
<p>切换到本地blog目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br></pre></td></tr></table></figure>
<h2 id="安装和配置hexo-renderer-markdown-it渲染器"><a class="header-anchor" href="#安装和配置hexo-renderer-markdown-it渲染器">¶</a>安装和配置<a href="https://github.com/celsomiranda/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a>渲染器</h2>
<p><strong>安装渲染器</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure>
<p><strong>渲染器配置：</strong></p>
<ol>
<li>
<p>在站点配置文件<code>_config.yml</code>中添加如下代码：</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">'“”‘’'</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">'v'</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="attr">permalinkSide:</span> <span class="string">'left'</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">¶</span></span><br></pre></td></tr></table></figure>
<p>以上配置详细说明如下，或见<a href="https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki/Advanced-Configuration" target="_blank" rel="noopener">Advanced Configuration</a></p>
<ul>
<li><strong>markdown：</strong></li>
<li><strong>render</strong></li>
<li><strong>plugin</strong></li>
<li><strong>anchors</strong></li>
</ul>
</li>
<li>
<p>安装markdown-it-checkbox插件</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install markdown-it-checkbox --save</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在站点配置文件_config.yml文件中的markdown.plugins添加- markdown-it-checkbox,即:</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-checkbox</span> <span class="comment"># 本行启用了checkbox插件</span></span><br></pre></td></tr></table></figure>
<p>示例:</p>
<p><input type="checkbox" id="checkbox1"><label for="checkbox1"> 这是未勾选的checkbox</label><br>
<input type="checkbox" id="checkbox0" checked="true"><label for="checkbox0"> 这是已勾选的checkbox</label></p>
<p>语法:</p>
 <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[ ] 这是未勾选的checkbox</span><br><span class="line">[x] 这是已勾选的checkbox</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="安装和配置markdown-it-emoji插件"><a class="header-anchor" href="#安装和配置markdown-it-emoji插件">¶</a>安装和配置markdown-it-emoji插件</h2>
<p><strong>安装插件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装markdown-it-emoji插件</span></span><br><span class="line">npm install markdown-it-emoji --save</span><br></pre></td></tr></table></figure>
<p>在站点配置文件<code>_config.yml</code>文件中的<code>markdown.plugins</code>添加<code>- markdown-it-emoji</code>，即:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">plugins:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-ins</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-checkbox</span> <span class="comment"># 本行启用了checkbox插件</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">markdown-it-emoji</span> <span class="comment"># 本行启用了emoji插件</span></span><br></pre></td></tr></table></figure>
<p><strong>配置插件 &amp; 优化Emoji样式</strong></p>
<ol>
<li>
<p>安装twemoji</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install twemoji</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>配置</p>
<p>在<code>node_modules\markdown-it-emoji\index.js</code>目录下添加代码:</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> twemoji           = <span class="built_in">require</span>(<span class="string">'twemoji'</span>)  <span class="comment">//添加twemoji</span></span><br><span class="line"><span class="comment">//使用twemoji渲染</span></span><br><span class="line">  md.renderer.rules.emoji = <span class="function"><span class="keyword">function</span>(<span class="params">token, idx</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> twemoji.parse(token[idx].content);</span><br><span class="line">  &#125;;</span><br></pre></td></tr></table></figure>
<p>完整代码为:</p>
 <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> emojies_defs      = <span class="built_in">require</span>(<span class="string">'./lib/data/full.json'</span>);</span><br><span class="line"><span class="keyword">var</span> emojies_shortcuts = <span class="built_in">require</span>(<span class="string">'./lib/data/shortcuts'</span>);</span><br><span class="line"><span class="keyword">var</span> emoji_html        = <span class="built_in">require</span>(<span class="string">'./lib/render'</span>);</span><br><span class="line"><span class="keyword">var</span> emoji_replace     = <span class="built_in">require</span>(<span class="string">'./lib/replace'</span>);</span><br><span class="line"><span class="keyword">var</span> normalize_opts    = <span class="built_in">require</span>(<span class="string">'./lib/normalize_opts'</span>);</span><br><span class="line"><span class="keyword">var</span> twemoji           = <span class="built_in">require</span>(<span class="string">'twemoji'</span>)  <span class="comment">//添加twemoji</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> <span class="title">emoji_plugin</span>(<span class="params">md, options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> defaults = &#123;</span><br><span class="line">    defs: emojies_defs,</span><br><span class="line">    shortcuts: emojies_shortcuts,</span><br><span class="line">    enabled: []</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> opts = normalize_opts(md.utils.assign(&#123;&#125;, defaults, options || &#123;&#125;));</span><br><span class="line"></span><br><span class="line">  md.renderer.rules.emoji = emoji_html;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//使用twemoji渲染</span></span><br><span class="line">  md.renderer.rules.emoji = <span class="function"><span class="keyword">function</span>(<span class="params">token, idx</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> twemoji.parse(token[idx].content);</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  md.core.ruler.push(<span class="string">'emoji'</span>, emoji_replace(md, opts.defs, opts.shortcuts, opts.scanRE, opts.replaceRE));</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在themes/next/source/css/main.styl文件中添加Emoji样式：</p>
 <figure class="highlight styl"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*emoji样式*/</span></span><br><span class="line"><span class="selector-class">.emoji</span> &#123;  <span class="attribute">height</span>: <span class="number">1.2em</span>;&#125;</span><br><span class="line"><span class="selector-tag">img</span>.emoji&#123;</span><br><span class="line">    margin: 0 .05em 0 .1em !important;</span><br><span class="line">    <span class="attribute">vertical-align</span>: -<span class="number">0.1em</span>;</span><br><span class="line">    <span class="comment">//override theme default style</span></span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span> !important;</span><br><span class="line">    <span class="attribute">border</span>:none !important;</span><br><span class="line">    <span class="attribute">display</span>:inline !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<p><img class="emoji" draggable="false" alt="💯" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f4af.png"/><img class="emoji" draggable="false" alt="🔢" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f522.png"/><img class="emoji" draggable="false" alt="😋" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f60b.png"/><img class="emoji" draggable="false" alt="🚵" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f6b5.png"/><img class="emoji" draggable="false" alt="🔜" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f51c.png"/><img class="emoji" draggable="false" alt="🛥" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f6e5.png"/><img class="emoji" draggable="false" alt="🏞" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f3de.png"/><img class="emoji" draggable="false" alt="🌃" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f303.png"/><img class="emoji" draggable="false" alt="🎆" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f386.png"/><img class="emoji" draggable="false" alt="📘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f4d8.png"/><img class="emoji" draggable="false" alt="❎" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/274e.png"/><img class="emoji" draggable="false" alt="🇨🇳" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f1e8-1f1f3.png"/><img class="emoji" draggable="false" alt="🐱" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f431.png"/><img class="emoji" draggable="false" alt="🌕" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f315.png"/><img class="emoji" draggable="false" alt="🌖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f316.png"/><img class="emoji" draggable="false" alt="🌗" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f317.png"/><img class="emoji" draggable="false" alt="🌘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f318.png"/><img class="emoji" draggable="false" alt="🌑" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f311.png"/><img class="emoji" draggable="false" alt="🌒" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f312.png"/><img class="emoji" draggable="false" alt="🌓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f313.png"/><img class="emoji" draggable="false" alt="🌔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f314.png"/><img class="emoji" draggable="false" alt="0️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/30-20e3.png"/><img class="emoji" draggable="false" alt="1️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/31-20e3.png"/><img class="emoji" draggable="false" alt="2️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/32-20e3.png"/><img class="emoji" draggable="false" alt="3️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/33-20e3.png"/><img class="emoji" draggable="false" alt="4️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/34-20e3.png"/><img class="emoji" draggable="false" alt="5️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/35-20e3.png"/><img class="emoji" draggable="false" alt="6️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/36-20e3.png"/><img class="emoji" draggable="false" alt="7️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/37-20e3.png"/><img class="emoji" draggable="false" alt="8️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/38-20e3.png"/><img class="emoji" draggable="false" alt="9️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/39-20e3.png"/><img class="emoji" draggable="false" alt="🔟" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f51f.png"/><img class="emoji" draggable="false" alt="🕐" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f550.png"/><img class="emoji" draggable="false" alt="🕑" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f551.png"/><img class="emoji" draggable="false" alt="🕒" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f552.png"/><img class="emoji" draggable="false" alt="🕓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f553.png"/><img class="emoji" draggable="false" alt="🕔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f554.png"/><img class="emoji" draggable="false" alt="🕕" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f555.png"/><img class="emoji" draggable="false" alt="🕖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f556.png"/><img class="emoji" draggable="false" alt="🕗" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f557.png"/><img class="emoji" draggable="false" alt="🕘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f558.png"/><img class="emoji" draggable="false" alt="🕙" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f559.png"/><img class="emoji" draggable="false" alt="🕚" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f55a.png"/><img class="emoji" draggable="false" alt="🕛" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f55b.png"/><img class="emoji" draggable="false" alt="🕜" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f55c.png"/><img class="emoji" draggable="false" alt="🕝" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f55d.png"/><img class="emoji" draggable="false" alt="🕞" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f55e.png"/><img class="emoji" draggable="false" alt="🕟" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f55f.png"/><img class="emoji" draggable="false" alt="🕠" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f560.png"/><img class="emoji" draggable="false" alt="🕡" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f561.png"/><img class="emoji" draggable="false" alt="🕢" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f562.png"/><img class="emoji" draggable="false" alt="🕣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f563.png"/><img class="emoji" draggable="false" alt="🕤" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f564.png"/><img class="emoji" draggable="false" alt="🕥" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f565.png"/><img class="emoji" draggable="false" alt="🕦" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f566.png"/><img class="emoji" draggable="false" alt="🕧" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f567.png"/><img class="emoji" draggable="false" alt="🇸🇨" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f1f8-1f1e8.png"/><img class="emoji" draggable="false" alt="✝️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/271d.png"/><img class="emoji" draggable="false" alt="☪️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/262a.png"/><img class="emoji" draggable="false" alt="☮️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/262e.png"/><img class="emoji" draggable="false" alt="🕉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f549.png"/><img class="emoji" draggable="false" alt="☸️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/2638.png"/><img class="emoji" draggable="false" alt="✡️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/2721.png"/><img class="emoji" draggable="false" alt="🔯" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f52f.png"/><img class="emoji" draggable="false" alt="🕎" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f54e.png"/><img class="emoji" draggable="false" alt="☯️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/262f.png"/><img class="emoji" draggable="false" alt="✡️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/2721.png"/><img class="emoji" draggable="false" alt="☦️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/2626.png"/><img class="emoji" draggable="false" alt="⚾️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/26be.png"/></p>
<p>源代码:</p>
 <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">:100::1234::yum::mountain<span class="emphasis">_biking_</span>man::soon::motor<span class="emphasis">_boat::national_</span>park::night<span class="emphasis">_with_</span>stars::fireworks::blue_book:</span><br><span class="line">:negative<span class="emphasis">_squared_</span>cross<span class="emphasis">_mark::cn::cat::full_</span>moon::waning<span class="emphasis">_gibbous_</span>moon::last<span class="emphasis">_quarter_</span>moon::waning<span class="emphasis">_crescent_</span>moon:</span><br><span class="line">:new<span class="emphasis">_moon::waxing_</span>crescent<span class="emphasis">_moon::first_</span>quarter<span class="emphasis">_moon::waxing_</span>gibbous_moon::zero::one::two::three::four::five::six:</span><br><span class="line">:seven::eight::nine::keycap_ten::clock1::clock2::clock3::clock4::clock5::clock6::clock7::clock8::clock9::clock10:</span><br><span class="line">:clock11::clock12::clock130::clock230::clock330::clock430::clock530::clock630::clock730::clock830::clock930:</span><br><span class="line">:clock1030::clock1130::clock1230::seychelles::latin<span class="emphasis">_cross::star_</span>and<span class="emphasis">_crescent::peace_</span>symbol::om::wheel<span class="emphasis">_of_</span>dharma:</span><br><span class="line">:star<span class="emphasis">_of_</span>david::six<span class="emphasis">_pointed_</span>star::menorah::yin<span class="emphasis">_yang::star_</span>of<span class="emphasis">_david::orthodox_</span>cross::baseball:</span><br></pre></td></tr></table></figure>
<p>插件地址：</p>
<ul>
<li><a href="https://github.com/hexojs/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a></li>
<li><a href="https://www.npmjs.com/package/markdown-it-checkbox" target="_blank" rel="noopener">markdown-it-checkbox</a></li>
<li><a href="https://github.com/markdown-it/markdown-it-emoji" target="_blank" rel="noopener">markdown-it-emoji</a></li>
<li><a href="https://github.com/twitter/twemoji" target="_blank" rel="noopener">twemoji</a></li>
</ul>
<p>Emoji表情检索：</p>
<ul>
<li><a href="https://emoji.muan.co/#" target="_blank" rel="noopener">Emoji</a></li>
<li><a href="https://emoji.svend.cc/" target="_blank" rel="noopener">Emoji(快)</a></li>
</ul>
</li>
</ol>
<h1>Emoji and code</h1>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">😊 :blush:	😃 :smiley:	☺️ :relaxed:</span><br><span class="line">😏 :smirk:	😍 :heart_eyes:	😘 :kissing_heart:</span><br><span class="line">😚 :kissing_closed_eyes:	😳 :flushed:	😌 :relieved:</span><br><span class="line">😆 :satisfied:	😁 :grin:	😉 :wink:</span><br><span class="line">😜 :stuck_out_tongue_winking_eye:	😝 :stuck_out_tongue_closed_eyes:	😀 :grinning:</span><br><span class="line">😗 :kissing:	😙 :kissing_smiling_eyes:	😛 :stuck_out_tongue:</span><br><span class="line">😴 :sleeping:	😟 :worried:	😦 :frowning:</span><br><span class="line">😧 :anguished:	😮 :open_mouth:	😬 :grimacing:</span><br><span class="line">😕 :confused:	😯 :hushed:	😑 :expressionless:</span><br><span class="line">😒 :unamused:	😅 :sweat_smile:	😓 :sweat:</span><br><span class="line">😥 :disappointed_relieved:	😩 :weary:	😔 :pensive:</span><br><span class="line">😞 :disappointed:	😖 :confounded:	😨 :fearful:</span><br><span class="line">😰 :cold_sweat:	😣 :persevere:	😢 :cry:</span><br><span class="line">😭 :sob:	😂 :joy:	😲 :astonished:</span><br><span class="line">😱 :scream:	:neckbeard: :neckbeard:	😫 :tired_face:</span><br><span class="line">😠 :angry:	😡 :rage:	😤 :triumph:</span><br><span class="line">😪 :sleepy:	😋 :yum:	😷 :mask:</span><br><span class="line">😎 :sunglasses:	😵 :dizzy_face:	👿 :imp:</span><br><span class="line">😈 :smiling_imp:	😐 :neutral_face:	😶 :no_mouth:</span><br><span class="line">😇 :innocent:	👽 :alien:	💛 :yellow_heart:</span><br><span class="line">💙 :blue_heart:	💜 :purple_heart:	❤️ :heart:</span><br><span class="line">💚 :green_heart:	💔 :broken_heart:	💓 :heartbeat:</span><br><span class="line">💗 :heartpulse:	💕 :two_hearts:	💞 :revolving_hearts:</span><br><span class="line">💘 :cupid:	💖 :sparkling_heart:	✨ :sparkles:</span><br><span class="line">⭐️ :star:	🌟 :star2:	💫 :dizzy:</span><br><span class="line">💥 :boom:	💥 :collision:	💢 :anger:</span><br><span class="line">❗️ :exclamation:	❓ :question:	❕ :grey_exclamation:</span><br><span class="line">❔ :grey_question:	💤 :zzz:	💨 :dash:</span><br><span class="line">💦 :sweat_drops:	🎶 :notes:	🎵 :musical_note:</span><br><span class="line">🔥 :fire:	💩 :hankey:	💩 :poop:</span><br><span class="line">💩 :shit:	👍 :+1:	👍 :thumbsup:</span><br><span class="line">👎 :-1:	👎 :thumbsdown:	👌 :ok_hand:</span><br><span class="line">👊 :punch:	👊 :facepunch:	✊ :fist:</span><br><span class="line">✌️ :v:	👋 :wave:	✋ :hand:</span><br><span class="line">✋ :raised_hand:	👐 :open_hands:	☝️ :point_up:</span><br><span class="line">👇 :point_down:	👈 :point_left:	👉 :point_right:</span><br><span class="line">🙌 :raised_hands:	🙏 :pray:	👆 :point_up_2:</span><br><span class="line">👏 :clap:	💪 :muscle:	🤘 :metal:</span><br><span class="line">🖕 :fu:	🚶 :walking:	🏃 :runner:</span><br><span class="line">🏃 :running:	👫 :couple:	👪 :family:</span><br><span class="line">👬 :two_men_holding_hands:	👭 :two_women_holding_hands:	💃 :dancer:</span><br><span class="line">👯 :dancers:	🙆 :ok_woman:	🙅 :no_good:</span><br><span class="line">💁 :information_desk_person:	🙋 :raising_hand:	👰 :bride_with_veil:</span><br><span class="line">🙎 :person_with_pouting_face:	🙍 :person_frowning:	🙇 :bow:</span><br><span class="line">:couplekiss: :couplekiss:	💑 :couple_with_heart:	💆 :massage:</span><br><span class="line">💇 :haircut:	💅 :nail_care:	👦 :boy:</span><br><span class="line">👧 :girl:	👩 :woman:	👨 :man:</span><br><span class="line">👶 :baby:	👵 :older_woman:	👴 :older_man:</span><br><span class="line">👱 :person_with_blond_hair:	👲 :man_with_gua_pi_mao:	👳 :man_with_turban:</span><br><span class="line">👷 :construction_worker:	👮 :cop:	👼 :angel:</span><br><span class="line">👸 :princess:	😺 :smiley_cat:	😸 :smile_cat:</span><br><span class="line">😻 :heart_eyes_cat:	😽 :kissing_cat:	😼 :smirk_cat:</span><br><span class="line">🙀 :scream_cat:	😿 :crying_cat_face:	😹 :joy_cat:</span><br><span class="line">😾 :pouting_cat:	👹 :japanese_ogre:	👺 :japanese_goblin:</span><br><span class="line">🙈 :see_no_evil:	🙉 :hear_no_evil:	🙊 :speak_no_evil:</span><br><span class="line">💂 :guardsman:	💀 :skull:	🐾 :feet:</span><br><span class="line">👄 :lips:	💋 :kiss:	💧 :droplet:</span><br><span class="line">👂 :ear:	👀 :eyes:	👃 :nose:</span><br><span class="line">👅 :tongue:	💌 :love_letter:	👤 :bust_in_silhouette:</span><br><span class="line">👥 :busts_in_silhouette:	💬 :speech_balloon:	💭 :thought_balloon:</span><br></pre></td></tr></table></figure>
<h1>参考资料</h1>
<p><a href="https://www.jianshu.com/p/f9e57ecca150" target="_blank" rel="noopener">https://www.jianshu.com/p/f9e57ecca150</a></p>
<p><a href="https://vxiaozhe1998.gitee.io/2020/03/25/HEXO%E4%B8%8B%E7%9A%84%E9%94%9A%E7%82%B9%E6%A0%87%E9%A2%98%E4%B8%8EEmoji%E8%A1%A8%E6%83%85/#more" target="_blank" rel="noopener">https://vxiaozhe1998.gitee.io/2020/03/25/HEXO下的锚点标题与Emoji表情/#more</a></p>
<p><a href="https://blog.csdn.net/weixin_30745641/article/details/95686757" target="_blank" rel="noopener">https://blog.csdn.net/weixin_30745641/article/details/95686757</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
        <tag>emoji</tag>
      </tags>
  </entry>
  <entry>
    <title>mac包管理工具Homebrew</title>
    <url>/2020/04/17/mac%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7Homebrew/</url>
    <content><![CDATA[<center>
<p><img src="https://wpttt.github.io/images/brew.png" alt=""></p>
<p>本文介绍macOS下的软件包管理工具Homebrew，适合mac新手。</center></p>
<a id="more"></a>
<h1>简介</h1>
<p><a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">Homebrew</a> 是macOS下的一个软件包管理器，用于安装各种命令行工，是macOS开发环境搭建必不可少的工具。起作用类似centOS下的yum和Debian、Ubuntu下的apt，可以用命令行实现软件的安装、卸载、更新等。</p>
<h1>要求</h1>
<ul>
<li>
<p>Intel CPU</p>
</li>
<li>
<p>OS X 10.9 及以上</p>
</li>
<li>
<p>Command Line Tools for Xcode</p>
<p>Command Line Tools for Xcode中包含了常用的命令行开发工具，比如gcc/g++编译器、 make、git等，是安装很多其他软件的基础。在 Terminal 中执行如下命令以安装 Command Line Tools for Xcode:</p>
  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>在弹出的窗口点击“Install”即可。</p>
<p>此处安装的Command Line Tools可能不是最新版，可以到“App Store”的“更新”中查看是 否有相关更新。如果有，则升级到最新版。 今后 App Store 来的系统大版本号升级的时候，可能需要更新 Command line tools， 小版本升级无需更新。</p>
<h1>安装</h1>
<p>homebrew的安装方法现已更新，从ruby转到了bash，网上的很多方法都是基于ruby的，可能无法完成安装，最新的安装操作引导请参考<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener">homebrew主页</a>。</p>
<p>在终端中执行如下命令以安装Homebrew:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/bash -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)</span>"</span></span><br></pre></td></tr></table></figure>
<p>也可以根据网上的说法，首先打开<a href="https://raw.githubusercontent.com/Homebrew/install/master/install.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/install/master/install.sh</a>，将页面代码全选复制进新建的install.sh文件，然后在bash下运行该脚本。</p>
<p>当然，这种做法主要是为了解决国内访问brew官方镜像速度低而导致安装速度慢的问题，因此如果总是由于安装速度慢导致安装失败，则可以尝试该方法，但在运行install.sh前需要将其内brew-repo所指向的镜像仓库链接改为国内镜像，如清华、科大等镜像仓库。此处以清华镜像为例，找到下面这行代码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">BREW_REPO=<span class="string">"https://github.com/Homebrew/brew"</span></span><br></pre></td></tr></table></figure>
<p>将其改为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">BREW_REPO=<span class="string">"https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"</span></span><br></pre></td></tr></table></figure>
<p>然后在终端执行该脚本，进行安装。</p>
<h1>Homebrew的常见用法</h1>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew search xxx     # 模糊搜索某个软件</span><br><span class="line">brew install xxx    # 安装某个软件</span><br><span class="line">brew upgrade xxx    # 升级某个软件</span><br><span class="line">brew uninstall xxx  # 卸载某个软件</span><br><span class="line">brew list xxx       # 列出某个软件的所有相关文件</span><br></pre></td></tr></table></figure>
<p>运行<code>brew help</code>查看详细用法，当然你也可以查看<a href="https://docs.brew.sh/" target="_blank" rel="noopener">官方文档</a>以获取更多帮助。</p>
<h1>几个相关概念：</h1>
<ul>
<li>Formulae：Formulae指定了如何安装某个软件，因而每个软件对应一个Formulae</li>
<li>Bottle：从软件源码编译安装软件会比较慢，Bootle是已经编译好的二进制版本，以加快软件安装速度</li>
<li>Tap：软件仓库，包含了一系列软件的Fromulae</li>
</ul>
<h1>常用的软件仓库Taps</h1>
<h2 id="1-homebrew-core"><a class="header-anchor" href="#1-homebrew-core">¶</a>1. <a href="https://github.com/Homebrew/homebrew-core" target="_blank" rel="noopener">homebrew-core</a></h2>
<p>Homebrew核心软件仓库。</p>
<h2 id="2-Homebrew-Cask"><a class="header-anchor" href="#2-Homebrew-Cask">¶</a>2. Homebrew-Cask</h2>
<p>Homebrew只能用于安装命令行软件，不能用于安装带图形界面的软件。Homebrew-Cask是Homebrew的一个扩展，可以用于安装带图形界面软件，可以提供macOS应用和大型二进制文件。</p>
<blockquote>
<p><strong>注意：</strong><br>
Caskroom 的 Git 地址在 2018 年 5 月 25 日从 <a href="https://github.com/caskroom/homebrew-cask" target="_blank" rel="noopener">https://github.com/caskroom/homebrew-cask</a> 迁移到了 <a href="https://github.com/Homebrew/homebrew-cask" target="_blank" rel="noopener">https://github.com/Homebrew/homebrew-cask</a> 。</p>
</blockquote>
<p>在终端执行如下命令以安装Homebrew-Cask:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew tap homebrew/cask    <span class="comment"># caskroom主仓库</span></span><br><span class="line">brew tap homebrew/cask-fonts   <span class="comment"># caskroom字体仓库</span></span><br></pre></td></tr></table></figure>
<p>常见用法:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask search xxx     <span class="comment"># 模糊搜索某个软件</span></span><br><span class="line">brew cask install xxx    <span class="comment"># 安装某个软件</span></span><br><span class="line">brew cask uninstall xxx  <span class="comment"># 卸载某个软件</span></span><br><span class="line">brew cask reinstall      <span class="comment"># 重新安装某个软件</span></span><br><span class="line">brew cask cleanup        <span class="comment"># 清理缓存</span></span><br></pre></td></tr></table></figure>
<p>安装字体:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew cask install font-source-code-pro</span><br></pre></td></tr></table></figure>
<h1>更新源</h1>
<p>由于homebrew官方源都是存放在<a href="https://github.com/" target="_blank" rel="noopener">Github</a>上的，因此中国大陆用户的访问速度被极大限制，所以下一步需要做的就是更换为国内源。</p>
<p>国内源可选的也比较多，此处推荐使用<a href="https://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="noopener">清华源</a>或者<a href="https://mirrors.ustc.edu.cn/" target="_blank" rel="noopener">科大源</a>。</p>
<p>可以通过下面的命令更新源（此处以科大源为例）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 替换brew程序本身:</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span> </span><br><span class="line"><span class="comment"># 替换为科大源</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/brew.git</span><br><span class="line"><span class="comment"># 替换为清华源</span></span><br><span class="line">$ git remote <span class="built_in">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换homebrew-core.git:</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line"><span class="comment"># 科大源</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br><span class="line"><span class="comment"># 清华源</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换homebrew-cask.git:</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span>/Library/Taps/caskroom/homebrew-cask</span><br><span class="line"><span class="comment"># 科大</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git</span><br><span class="line"><span class="comment"># 清华</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换homebrew-bottles:</span></span><br><span class="line"><span class="comment"># 科大</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="comment"># 清华</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles'</span> &gt;&gt; ~/.bash_profile</span><br><span class="line"><span class="comment"># 使环境变量生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新源、应用生效</span></span><br><span class="line">brew update</span><br></pre></td></tr></table></figure>
<p>如果你之前折腾过不少导致你的Homebrew有点问题，那么可以尝试使用如下方案：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 诊断Homebrew的问题:</span></span><br><span class="line">$ brew doctor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置brew.git设置:</span></span><br><span class="line">$ <span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span></span><br><span class="line">$ git fetch</span><br><span class="line">$ git reset --hard origin/master</span><br><span class="line"></span><br><span class="line"><span class="comment"># homebrew-core.git同理:</span></span><br><span class="line">$ <span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">$ git fetch</span><br><span class="line">$ git reset --hard origin/master</span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用生效:</span></span><br><span class="line">$ brew update</span><br></pre></td></tr></table></figure>
<p>重置更新源 某些时候也有换回官方源的需求</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重置brew.git:</span></span><br><span class="line">$ <span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span></span><br><span class="line">$ git remote <span class="built_in">set</span>-url origin https://github.com/Homebrew/brew.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置homebrew-core.git:</span></span><br><span class="line">$ <span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">$ git remote <span class="built_in">set</span>-url origin https://github.com/Homebrew/homebrew-core.git</span><br></pre></td></tr></table></figure>
<p>以上如果有任何的不成功就用 brew doctor 查找原因。</p>
]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>homebrew</tag>
      </tags>
  </entry>
  <entry>
    <title>notepad++配置一键运行bat</title>
    <url>/2020/04/18/notepad-%E9%85%8D%E7%BD%AE%E4%B8%80%E9%94%AE%E8%BF%90%E8%A1%8Cbat/</url>
    <content><![CDATA[<p>本文主角Notepad++，Windows平台下的一套文本编辑器(软件版权许可证: GPL)，有完整的中文化接口及支持多国语言编写的功能(UTF8技术)。Notepad++功能比 Windows中的Notepad(记事本)强大，除了可以用来制作一般的纯文字说明文件，也十分适合编写计算机程序代码。</p>
<a id="more"></a>
<p>Notepad++  不仅有语法高亮度显示，也有语法折叠功能，并且支持宏以及扩充基本功能的外挂模组。Notepad++  是免费软件，自带中文，支持众多计算机程序语言: C, C++, Java, pascal, C#, XML, SQL, Ada, HTML, PHP, ASP, AutoIt, 汇编, DOS批处理, Caml, COBOL, Cmake, CSS,D, Diff, ActionScript, Fortran, Gui4Cli, Haskell, INNO, JSP, KIXtart, LISP, Lua, Make处理(Makefile), Matlab, INI文件, MS-DOS Style, NSIS, Normal text, Objective-C, Pascal, Python, Javascript, Verilog, Haskell, InnoSetup, CMake, VHDL, Matlab等<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<p>作为一款编辑器，效率是需要考虑的重点之一，那么如何让notepad++可以一键运行bat批处理脚本？相信很多windows平台GMT用户都需要解决这个问题，当然这是不是什么难事儿。</p>
<h2 id="1️⃣-安装插件"><a class="header-anchor" href="#1️⃣-安装插件">¶</a><img class="emoji" draggable="false" alt="1️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/31-20e3.png"/> 安装插件</h2>
<p>首先安装插件<em><strong>NppExec</strong></em></p>
<ul>
<li>点击菜单栏<font color="orange">插件-&gt;插件管理</font>，打开插件管理界面</li>
<li>搜索<font color="orange">NppExec</font></li>
<li>在搜索结果中勾选<font color="orange">NppExec</font>，点击<font color="orange">确定</font>，安装插件</li>
</ul>
<p>此时，插件菜单出现<font color="orange">NppExec</font>菜单选项</p>
<h2 id="2️⃣-插件配置"><a class="header-anchor" href="#2️⃣-插件配置">¶</a><img class="emoji" draggable="false" alt="2️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/32-20e3.png"/> 插件配置</h2>
<p>安装插件后进行如下操作来配置插件：</p>
<ol>
<li>点击菜单栏-插件-NppExec，勾选<font color="orange">Follow $(CURRENT_DIRECTORY)</font>；</li>
<li>进入菜单栏-插件-NppExec-Excute，在<code>command(s):</code>栏填入 <code>$(FULL_CURRENT_PATH)</code> 并保存；</li>
<li>进入菜单栏-插件-NppExec-Advanced Option，将ToolbarBtn默认值选择为<font color="orange">ExecPrev</font>，OK</li>
</ol>
<p>重启NotePad++，此时工具栏最右端出现“Direct Execute Previous”工具（下图），<br>
当需要运行bat脚本时，便可点击该工具，在弹出窗口中点击<code>OK</code>直接运行，<br>
运行过程会在notepad++的内部console窗口中显示。</p>
<center>
<p><img src="https://wpttt.github.io/images/notepad++.png" alt="Direct Execute Previous"></p>
</center>
<blockquote>
<p><img class="emoji" draggable="false" alt="💡" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f4a1.png"/>  <strong>提示：</strong><br>
Notepad++在关闭之间，仅第一次点击“Direct Execute Previous”工具时会弹出确认窗口，之后每次点击运行会跳过确认直接运行</p>
</blockquote>
<p>至此，已经成功完成了Notepad++中直接运行bat的配置。</p>
<p>开车 and Enjoy !<br>
<img class="emoji" draggable="false" alt="🚗" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f697.png"/><img class="emoji" draggable="false" alt="🚕" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f695.png"/><img class="emoji" draggable="false" alt="🚙" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f699.png"/><img class="emoji" draggable="false" alt="🚓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f693.png"/><img class="emoji" draggable="false" alt="🏎" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f3ce.png"/><img class="emoji" draggable="false" alt="🚗" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f697.png"/><img class="emoji" draggable="false" alt="🚕" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f695.png"/><img class="emoji" draggable="false" alt="🚙" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f699.png"/><img class="emoji" draggable="false" alt="🚓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f693.png"/><img class="emoji" draggable="false" alt="🏎" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f3ce.png"/><img class="emoji" draggable="false" alt="🚗" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f697.png"/><img class="emoji" draggable="false" alt="🚕" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f695.png"/><img class="emoji" draggable="false" alt="🚙" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f699.png"/><img class="emoji" draggable="false" alt="🚓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f693.png"/><img class="emoji" draggable="false" alt="🏎" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f3ce.png"/><img class="emoji" draggable="false" alt="🚗" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f697.png"/><img class="emoji" draggable="false" alt="🚕" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f695.png"/><img class="emoji" draggable="false" alt="🚙" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f699.png"/><img class="emoji" draggable="false" alt="🚓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f693.png"/><img class="emoji" draggable="false" alt="🏎" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f3ce.png"/><img class="emoji" draggable="false" alt="🚗" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f697.png"/><img class="emoji" draggable="false" alt="🚕" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f695.png"/><img class="emoji" draggable="false" alt="🚙" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f699.png"/><img class="emoji" draggable="false" alt="🚓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f693.png"/><img class="emoji" draggable="false" alt="🏎" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f3ce.png"/><img class="emoji" draggable="false" alt="🚗" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f697.png"/><img class="emoji" draggable="false" alt="🚕" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f695.png"/><img class="emoji" draggable="false" alt="🚙" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f699.png"/><img class="emoji" draggable="false" alt="🚓" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f693.png"/><img class="emoji" draggable="false" alt="🏎" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f3ce.png"/><br>
<img class="emoji" draggable="false" alt="🚌" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f68c.png"/><img class="emoji" draggable="false" alt="🚒" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f692.png"/><img class="emoji" draggable="false" alt="🚐" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f690.png"/><img class="emoji" draggable="false" alt="🚚" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69a.png"/><img class="emoji" draggable="false" alt="🚛" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69b.png"/><img class="emoji" draggable="false" alt="🚜" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69c.png"/><img class="emoji" draggable="false" alt="🚌" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f68c.png"/><img class="emoji" draggable="false" alt="🚒" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f692.png"/><img class="emoji" draggable="false" alt="🚐" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f690.png"/><img class="emoji" draggable="false" alt="🚚" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69a.png"/><img class="emoji" draggable="false" alt="🚛" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69b.png"/><img class="emoji" draggable="false" alt="🚜" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69c.png"/><img class="emoji" draggable="false" alt="🚌" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f68c.png"/><img class="emoji" draggable="false" alt="🚒" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f692.png"/><img class="emoji" draggable="false" alt="🚐" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f690.png"/><img class="emoji" draggable="false" alt="🚚" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69a.png"/><img class="emoji" draggable="false" alt="🚛" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69b.png"/><img class="emoji" draggable="false" alt="🚜" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69c.png"/><img class="emoji" draggable="false" alt="🚌" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f68c.png"/><img class="emoji" draggable="false" alt="🚒" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f692.png"/><img class="emoji" draggable="false" alt="🚐" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f690.png"/><img class="emoji" draggable="false" alt="🚚" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69a.png"/><img class="emoji" draggable="false" alt="🚛" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69b.png"/><img class="emoji" draggable="false" alt="🚜" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69c.png"/><img class="emoji" draggable="false" alt="🚌" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f68c.png"/><img class="emoji" draggable="false" alt="🚒" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f692.png"/><img class="emoji" draggable="false" alt="🚐" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f690.png"/><img class="emoji" draggable="false" alt="🚚" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69a.png"/><img class="emoji" draggable="false" alt="🚛" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69b.png"/><img class="emoji" draggable="false" alt="🚜" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f69c.png"/><br>
<img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/><img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/><img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/><img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/><img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/><img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/><img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/><img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/><img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/><img class="emoji" draggable="false" alt="🚔" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f694.png"/><img class="emoji" draggable="false" alt="🚘" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f698.png"/><img class="emoji" draggable="false" alt="🚖" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f696.png"/></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>Notepad++知乎简介: <a href="https://www.zhihu.com/topic/%EF%BC%8919572058/intro" target="_blank" rel="noopener">https://www.zhihu.com/topic/）19572058/intro</a> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>常用软件</category>
      </categories>
  </entry>
  <entry>
    <title>pip2&amp;pip3共存</title>
    <url>/2020/04/15/pip2-pip3%E5%85%B1%E5%AD%98/</url>
    <content><![CDATA[<p>  虽然如今python2已经停止更新，但作为重要的python发行版，考虑到更新的成本，众多常用软件仍然再继续使用python2，比如ArcGIS以及一些专用软件等。因此有时候不得不遇到python2和python3装在同一台计算机上的情况，那么作为python重要的包管理软件pip2和pip3的共存问题也随之而来。<br>
  其实这个问题并非每次都会遇到，但是也不能保证每次都遇不到。本文就是在遇到这个问题的时候搜集自网络的，简要介绍了解决pip2、pip3共存的方案。</p>
<a id="more"></a>
<p>  以下配置以windows系统为例</p>
<h1>python2、python3安装及环境变量配置</h1>
<p>此处，假定python2、python3均已安装</p>
<h2 id="配置环境变量"><a class="header-anchor" href="#配置环境变量">¶</a>配置环境变量</h2>
<p>安装python2、python3后添加如下路径至系统变量path(以python2.7和python3.6为例)：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">C:\Program Files\Python36</span><br><span class="line">C:\Program Files\Python36\Scripts</span><br><span class="line">C:\Program Files\Python27</span><br><span class="line">C:\Program Files\Python27\Scripts</span><br></pre></td></tr></table></figure>
<h2 id="修改python可执行文件名"><a class="header-anchor" href="#修改python可执行文件名">¶</a>修改python可执行文件名</h2>
<p>找到python2和python3的安装目录，修改python2.7.9和python3.6.8中python.exe和pythonw.exe的名称为python2.exe、pythonw2.exe和python3.exe、pythonw3.exe</p>
<h2 id="测试运行"><a class="header-anchor" href="#测试运行">¶</a>测试运行</h2>
<p>然后再cmd命令行输入<code>python2</code>、<code>python3</code>测试运行情况，确保python2和python3可正常启动</p>
<h1>pip2和pip3设置</h1>
<p>Python 安装包需要用到包管理工具pip，但是当同时安装python2和python3的时候，pip只是其中一个版本，以下将提供一个修改方式，即重新安装两个版本的pip，使得两个python版本的pip能够共存。</p>
<p>在DOS命令框输入命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 -m pip install --upgrade pip --force-reinstall</span><br></pre></td></tr></table></figure>
<p>显示重新安装成功。</p>
<p>或者在DOS命令框输入命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 -m pip install --upgrade pip --force-reinstall</span><br></pre></td></tr></table></figure>
<p>显示重新安装成功。</p>
<p>现在可以通过<code>pip2 -V</code> 和 <code>pip3 -V</code> 查看两个版本的pip信息，以后只需运行<code>pip2 install XXX</code>和<code>pip3 install XXX</code>即可安装各自的python包</p>
<p>至此，pip2和pip3 修改成功。</p>
<h1>pip故障无法运行时</h1>
<p>今天遇到pip运行报错的问题</p>
<p>Python报错:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AttributeError: module &#39;importlib._bootstrap&#39; has no attribute &#39;SourceFileLoader</span><br></pre></td></tr></table></figure>
<p>解决方案：</p>
<p>cmd运行以下命令之一</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 -m ensurepip --upgrade</span><br><span class="line">python3 -m ensurepip --upgrade</span><br></pre></td></tr></table></figure>
<p>可以重新安装pip</p>
<p>按说以上两条安装命令会发生冲突，同时只能存在一个pip版本，可按照上文中pip2、pip3共存方案进行共存设置，即运行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 -m pip install --upgrade pip --force-reinstall</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 -m pip install --upgrade pip --force-reinstall</span><br></pre></td></tr></table></figure>
<p>可同时安装更新python2及python3可用的pip版本。</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>pip</tag>
      </tags>
  </entry>
  <entry>
    <title>windows下awk指定文本输出格式</title>
    <url>/2020/04/17/windows%E4%B8%8Bawk%E6%8C%87%E5%AE%9A%E6%96%87%E6%9C%AC%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="1️⃣-printf用法"><a class="header-anchor" href="#1️⃣-printf用法">¶</a><img class="emoji" draggable="false" alt="1️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/31-20e3.png"/> printf用法</h3>
<a id="more"></a>
<p>补齐只能补<code>0</code>或空格字符</p>
<p>cmd中写法为：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">echo <span class="number">1.22</span> | gawk <span class="string">"&#123;printf "</span><span class="string">""</span>%<span class="number">7.3</span>f<span class="string">""</span><span class="string">" <span class="variable">$1</span>&#125;"</span></span><br></pre></td></tr></table></figure>
<p>bat批处理脚本中写法为：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">echo <span class="number">1.22</span> | gawk <span class="string">"&#123;printf "</span><span class="string">""</span>%%<span class="number">7.3</span>f<span class="string">""</span><span class="string">", <span class="variable">$1</span>&#125;"</span></span><br></pre></td></tr></table></figure>
<p>输出结果为</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1.220</span>  <span class="comment"># 数字前面有两个空字符</span></span><br></pre></td></tr></table></figure>
<h3 id="2️⃣-常用数据类型"><a class="header-anchor" href="#2️⃣-常用数据类型">¶</a><img class="emoji" draggable="false" alt="2️⃣" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/32-20e3.png"/> 常用数据类型</h3>
<table>
<thead>
<tr>
<th>字符</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>c</td>
<td>字符</td>
</tr>
<tr>
<td>s</td>
<td>字符串</td>
</tr>
<tr>
<td>d</td>
<td>整数</td>
</tr>
<tr>
<td>f</td>
<td>浮点数</td>
</tr>
<tr>
<td>ld</td>
<td>长整数</td>
</tr>
</tbody>
</table>
<p><img class="emoji" draggable="false" alt="😂" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f602.png"/><img class="emoji" draggable="false" alt="😂" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f602.png"/><img class="emoji" draggable="false" alt="😂" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f602.png"/>其他的百度 <img class="emoji" draggable="false" alt="😂" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f602.png"/><img class="emoji" draggable="false" alt="😂" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f602.png"/><img class="emoji" draggable="false" alt="😂" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f602.png"/></p>
<p><code>%07s</code>表示保留7位字符，并右对齐，用0补齐</p>
<p><code>%-7s</code>表示保留7位字符，并左对齐，用空字符补齐</p>
<p><code>%07d</code>表示保留7位整数，用0补齐</p>
<p><code>%7.3f</code>表示总长度7位字符，并保留三位小数，不足7为用空格补齐，并右对齐，</p>
<p><code>%-7.3f</code>表示总长度7位字符，并保留三位小数，不足7为用空格补齐，并左对齐，</p>
<p><code>%07.3f</code>时不足7为用0补齐，并右对齐</p>
]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>awk</tag>
      </tags>
  </entry>
  <entry>
    <title>在psxy中使用cpt填色</title>
    <url>/2020/04/15/%E5%9C%A8psxy%E4%B8%AD%E4%BD%BF%E7%94%A8cpt%E5%A1%AB%E8%89%B2/</url>
    <content><![CDATA[<p>  绘制震中分布图时经常需要绘制多年地震，并需要将不同年份地震进行区分，而区分的方式通常是给其填充不同的颜色。常规的绘图方法中将每一年的地震目录用awk提出后再绘制，此方对于每年的地震都需要单独一条命令进行绘制，并给其一个单独的颜色。如此一来同样的绘图语句就要重复写好几遍，个人觉得还是有点不方便。<br>
  好在gmt的<code>—C&lt;cpt&gt;</code>模块为我们提供了使用cpt文件给图中元素进行填色的功能，这样的话，只需要做好数据表便可一条命令绘制所有地震，并且使用cpt进行渲染，做到按照发生年份进行区分，同时方便ColorBar形式的时间图例的绘制。</p>
<a id="more"></a>
<h1>psxy模块下-C选项简介</h1>
<p>在<code>psxy</code>模块中<code>—C&lt;cpt&gt;</code>选项用于指定CPT文件或颜色列表。该选项后跟一个CPT 文件名，也可以使用<code>-C&lt;color1&gt;,&lt;color2&gt;,... </code>语法在<br>
命令行上临时构建一个颜色列表，其中<color1> 对应Z 值为0 的颜色，<color2><br>
对应Z 值为1 的颜色，依次类推。</p>
<ol>
<li>若绘制符号（即使用<code>-S</code>选项），则符号的填充色由数据的第三列 Z 值决定，其<br>
他数据列依次后移一列</li>
<li>若绘制线段或多边形（即未使用<code>-S</code>选项），则需要在多段数据的头段中指定<br>
<code>-Z&lt;val&gt;</code>，然后从cpt文件中查找<code>&lt;val&gt;</code>所对应的颜色，以控制线段或多边<br>
形的线条颜色</li>
</ol>
<p>下面的例子展示了<code>-C&lt;color1&gt;,&lt;color2&gt;..</code>用法:<br>
绘制两条不同颜色的线段</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gmt psxy -JX10c/10c -R0/10/0/10 -B1 -Cblue,red -W2p &gt; test.ps &lt;&lt; EOF</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> -Z0</span></span><br><span class="line">1 1</span><br><span class="line">2 2</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> -Z1</span></span><br><span class="line">3 3</span><br><span class="line">4 4</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p><img src="https://wpttt.github.io/images/psxy1.png" alt="图1"></p>
<h1>举个栗子</h1>
<p>上例为GMT6-documentation中的例子</p>
<p>下面以绘制2008年以来全球7级以上地震震中分布图为例</p>
<p>bash下绘图代码如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># GMT v6.0.0</span></span><br><span class="line"><span class="comment"># 提取每一列数据</span></span><br><span class="line">awk <span class="string">'&#123;if (substr($0,2,4)&gt;=2008) print substr($0,1,15),substr($0,16,6),substr($0,22,7),substr($0,29,4),substr($0,33,3),substr($0,36,3)&#125;'</span> Ms7.EQT &gt; 2018ms7</span><br><span class="line"><span class="comment"># 将数据逐年提取为：“经度 纬度 年度 震级”格式</span></span><br><span class="line"><span class="comment"># 下面为for循环下的实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i = ((i=2008;i&lt;=2019;i++));</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">awk <span class="string">'&#123;if (substr($1,1,4)=="'</span><span class="variable">$i</span><span class="string">'") print $3,$2,"'</span><span class="variable">$i</span><span class="string">'",$4&#125;'</span> 2018ms7 &gt;&gt; eqdis	</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gmt <span class="built_in">set</span> FONT 11p,4</span><br><span class="line">gmt <span class="built_in">set</span> MAP_FRAME_TYPE plain</span><br><span class="line">gmt <span class="built_in">set</span> MAP_FRAME_PEN 1p,black</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建cpt文件</span></span><br><span class="line">gmt makecpt -Crainbow -T2008/2019/1 &gt; cpt.cpt</span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">gmt pscoast -JN6i -R-30/330/-90/90 -Bx60f30 -By30 -Dc -A10000 -Gwhite -Sskyblue -K &gt; eq7dist.ps</span><br><span class="line">awk <span class="string">'&#123;print $1,$2,$3,$4*0.04&#125;'</span> eqdis |gmt psxy -J -R -Sc -W.1p,white -Ccpt.cpt -K -O &gt;&gt; eq7dist.ps</span><br><span class="line"><span class="comment"># 绘制colorbar</span></span><br><span class="line">gmt psscale -Ccpt.cpt -Dx0/0+w5.6i/.2c+jBL+h+o.3c/-1c -Bx1 -By+l<span class="string">"Years"</span> -K -O &gt;&gt; eq7dist.ps</span><br><span class="line">gmt psxy -J -R -T -O &gt;&gt; eq7dist.ps</span><br><span class="line"><span class="comment"># 转换至位图</span></span><br><span class="line">gmt psconvert eq7dist.ps -A -Tj -E300 -P</span><br><span class="line"></span><br><span class="line">rm *.cpt gmt.* eqdis</span><br></pre></td></tr></table></figure>
<p>结果:</p>
<p><img src="https://wpttt.github.io/images/psxy2.png" alt="图2"></p>
<p>地震目录格式如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">20181211102630-58.32 -26.387.00150000 南桑威奇群岛地区</span><br><span class="line">20181201012927 61.33-150.057.30 40000 美国阿拉斯加</span><br><span class="line">20181205121806-21.85 169.407.50 10000 洛亚蒂群岛</span><br><span class="line">20181211102630-58.32 -26.387.00150000 南桑威奇群岛地区</span><br><span class="line">20190222181720 -2.17 -76.877.50140000 厄瓜多尔</span><br><span class="line">20190301165041-14.55 -70.107.00260000 秘鲁</span><br><span class="line">20190507051936 -6.95 146.507.10130000 巴布亚新几内亚</span><br><span class="line">20190514205828 -4.17 152.487.60 30000 新不列颠岛地区</span><br></pre></td></tr></table></figure>
<p>因此在绘图之前需要对文本格式进行一定的处理，以满足gmt绘图需要。</p>
<ol>
<li>
<p>本例子利用for循环加awk实现文本内容的提取和格式的设定，即</p>
<pre><code> 经度 纬度 Z值(年份) 震级(大小)
</code></pre>
</li>
<li>
<p><code>makecpt</code>模块将文件<code>rainbow.cpt</code>的Z值设置为2008～2019，并且划分间隔为1，生成新的cpt文件；</p>
</li>
<li>
<p>因此绘图时使用<code>-C</code>选项，会直接读取第三列为填充颜色；并可以绘制colorbar作为图例，省去了繁琐的图例绘制。</p>
</li>
</ol>
<h2 id="绘制颜色变化的曲线"><a class="header-anchor" href="#绘制颜色变化的曲线">¶</a>绘制颜色变化的曲线</h2>
<p>想要绘制一条颜色变化的线段，下面是演示代码：</p>
<p>此例引自<a href="https://blog.seisman.info/plot-lines-with-gradient-colors/" target="_blank" rel="noopener">Seisman播客</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># GMT v5.2.1</span></span><br><span class="line">gmt makecpt -Crainbow -T-2/2/1 &gt; lines.cpt</span><br><span class="line">gmt psxy -JX15c/4c -R0/6/0/4 -B1 -Clines.cpt -W2p &gt; test.ps &lt;&lt; EOF</span><br><span class="line">&gt; -Z-1.5</span><br><span class="line">1 2</span><br><span class="line">2 2</span><br><span class="line">&gt; -Z-0.5</span><br><span class="line">2 2</span><br><span class="line">3 2</span><br><span class="line">&gt; -Z0.5</span><br><span class="line">3 2</span><br><span class="line">4 2</span><br><span class="line">&gt; -Z1.5</span><br><span class="line">4 2</span><br><span class="line">5 2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>结果：</p>
<p><img src="https://wpttt.github.io/images/psxy3.png" alt="图3"></p>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/>简单解释一下：</p>
<ol>
<li><code>makecpt</code> 命令制作了一个 - 2 到 2 间隔为 1 的 CPT 文件</li>
<li><code>psxy</code> 命令中使用了 <code>-C</code> 选项，此时需要输入数据是多段表数据，且每段数据的段头记录中，需要有 <code>-Z&lt;val&gt;</code> 以指定每段数据的 Z 值</li>
<li>实际绘图时，对于每段数据，命令会读取该数据数据的段头记录中的 <code>-Z&lt;val&gt;</code> 中的 Z(<code>val</code>)值，然后到 CPT 文件中查找 Z 值所对应的颜色，作为该段线段的颜色。</li>
</ol>
]]></content>
      <categories>
        <category>GMT</category>
      </categories>
      <tags>
        <tag>GMT</tag>
      </tags>
  </entry>
  <entry>
    <title>在支持Intel的PC上安装macOS Mojave</title>
    <url>/2020/04/19/%E5%9C%A8%E6%94%AF%E6%8C%81Intel%E7%9A%84PC%E4%B8%8A%E5%AE%89%E8%A3%85macOS-Mojave/</url>
    <content><![CDATA[<p>本文转自 <a href="http://tonymacx86.com" target="_blank" rel="noopener">tonymacx86.com</a>，是更新和安装macOS Mojave的完整教程。所有基本安装和安装后工具都可以在 <a href="http://tonymacx86.com" target="_blank" rel="noopener">tonymacx86.com</a> 上找到。经本人机器测试有效，并且几乎完美驱动所有硬件。</p>
<!--![mojave](https://wpttt.github.io/images/mojave_install/mojave_install1.png)-->
<a id="more"></a>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/>  文末附配置。。。<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<h1>准备工作</h1>
<ol>
<li>在tonymacx86注册！如果没有用户帐户，请创建一个！</li>
<li>从下载部分获取最新的UniBeast和MultiBeast工具。</li>
<li>购买16GB或更大的USB驱动器。</li>
<li>对系统进行完整备份。 我们强烈建议使用Carbon Copy Cloner对现有系统执行完整备份。这样便可以随时返回工作安装。</li>
</ol>
<p>UniBeast是一个从我们下载的macOS版本中创建可启动安装程序的工具。 为了重新开始，需要一台运行OS X Lion 10.7.5或更高版本的Mac计算机。 这一点是必要的，因为我们需要访问Mac App Store才能下载macOS并创建安装驱动器。 要从头开始，直接启动10.6 Snow Leopard Retail DVD，请查看<a href="http://tonymacx86.blogspot.com/2010/04/iboot-multibeast-install-mac-os-x-on.html" target="_blank" rel="noopener">iBoot + MultiBeast</a>。</p>
<p>现有的Clover用户可以像普通Mac用户那样运行App Store下载的Install macOS Mojave应用程序直接更新macOS Mojave。 请按照下面的步骤操作：<a href="https://www.tonymacx86.com/threads/update-directly-to-macos-mojave.260654/" target="_blank" rel="noopener">直接更新到macOS Mojave</a>。</p>
<hr>
<p><img src="https://wpttt.github.io/images/mojave_install/Mojave_install2.png" alt="mojave_download"></p>
<h1>第一步：下载 macOS Mojave</h1>
<p>对于购买了Mac OS X Snow Leopard，Lion或Mountain Lion或者预装了OS X Mavericks，Yosemite，El Capitan，macOS Sierra或macOS High Sierra的Mac，可以免费下载完整的操作系统。当然也可以用虚拟机实现（虚拟机仅能实现下载，后面启动盘的创建在虚拟机上可能会失败）。</p>
<p>在任何这些特定的Mac上使用Apple ID从Mac App Store下载应用程序：</p>
<ul>
<li>MacBook（2015年初或更早版本）</li>
<li>MacBook Air（2012年中或更新版本）</li>
<li>MacBook Pro（2012年中期或更新版）</li>
<li>Mac mini（2012年末或更新版）</li>
<li>iMac（2012年末或更新）</li>
<li>iMac Pro（2017）</li>
<li>Mac Pro（2013年末，加上2010年中期和2012年中期推出支持Metal的GPU型号）</li>
</ul>
<ol>
<li>打开Mac App Store</li>
<li>登陆Apple ID</li>
<li>下载macOS Mojave</li>
</ol>
<p>应用程序 “Install macOS Mojave” 将出现在 <code>/Applications</code>目录中。</p>
<hr>
<p><img src="https://wpttt.github.io/images/mojave_install/mojave_install3.png" alt="unibeast3"></p>
<h1>第二步：利用Unibeast创建可引导的USB启动盘</h1>
<p>深吸一口气，慢慢来 - 其实这一步简单，因为有神器<font color='orangered'>Unibeast</font>。 按照教程一步一步来。</p>
<ol>
<li>插入USB驱动器</li>
<li>打开 <strong>/Applications/Utilities/Disk Utility</strong></li>
<li>点击左列中的USB驱动器至其突出显示（注意：在Mojave版本的“磁盘工具”中，必须先选择“查看/显示所有设备”，然后才能看到USB驱动器）<br>
<img src="https://wpttt.github.io/images/mojave_install/mojave_install4.png" alt="mojave_install4"></li>
<li>单击 <strong>Erase</strong> 按钮</li>
<li>在<strong>Name</strong>框：键入 <strong>USB</strong>（可以稍后重命名）</li>
<li>在<strong>Format</strong>框：选择 <strong>Mac OS Extended（Journaled）</strong><br>
<img src="https://wpttt.github.io/images/mojave_install/mojave_install5.png" alt="mojave_install5"></li>
<li>单击<strong>Erase</strong>然后<strong>Done</strong><br>
<img src="https://wpttt.github.io/images/mojave_install/mojave_install6.png" alt="mojave_install6"></li>
<li>下载并运行<a href="https://www.tonymacx86.com/resources/categories8tonymacx86-downloads.3/" target="_blank" rel="noopener">UniBeast</a>（<img class="emoji" draggable="false" alt="💡" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f4a1.png"/> <font color='orangered'>先确保系统语言为英语</font>）</li>
<li>单击<strong>Continue</strong>，<strong>Continue</strong>，<strong>Continue</strong>，<strong>Continue</strong>，<strong>Agree</strong></li>
<li>在 Destination Select 中，选择<strong>USB</strong>并单击<strong>Continue</strong><br>
<img src="https://wpttt.github.io/images/mojave_install/mojave_install7.png" alt="mojave_install7"></li>
<li>在<strong>Select OS Installation</strong>屏幕上，选择<strong>Mojave</strong>并单击<strong>Continue</strong></li>
<li>在<strong>Bootloader Options</strong>屏幕中，选择<strong>UEFI Boot Mode</strong>或<strong>Legacy Boot Mode</strong>。建议7/8/9/100/200/300系列CustoMac台式机和所有支持UEFI的系统使用UEFI引导模式。 建议5/6系列CustoMac台式机和所有基于BIOS的系统使用<strong>Legacy Boot Mode</strong>。<br>
<img src="https://wpttt.github.io/images/mojave_install/mojave_install8.png" alt="mojave_install8"></li>
<li>（可选）在<strong>Graphics Configuration</strong>屏幕上，为系统选择适当的图形选项，然后单击<strong>Continue</strong>。</li>
<li>验证安装选项，然后单击<strong>Continue</strong>，输入密码并单击<strong>Install</strong><br>
<img src="https://wpttt.github.io/images/mojave_install/mojave_install9.png" alt="mojave_install9"><br>
现在UniBeast将创建可启动的USB驱动器。 该过程仅需10分钟左右，具体取决于系统和驱动器速度。 在此期间请勿拔下或停止。<br>
<img src="https://wpttt.github.io/images/mojave_install/mojave_install10.png" alt="mojave_install10"></li>
<li>将下载好的<a href="https://www.tonymacx86.com/resources/categories/tonymacx86-downloads.3/" target="_blank" rel="noopener">MultiBeast</a>拖到已完成的USB驱动器中。</li>
</ol>
<blockquote>
<p><strong>Clover Note</strong>：<br>
UniBeast基于tonymacx86上推荐的CustoMac系统的测试提供基本的引导加载程序支持。要进一步引导加载程序自定义，请下载并运行<a href="http://sourceforge.net/projects/cloverefiboot/" target="_blank" rel="noopener">Clover官方程序包</a>。 高级用户也可以通过下载完整的源代码来编译Clover。</p>
</blockquote>
<p><img src="https://wpttt.github.io/images/mojave_install/mojave_install11.jpg" alt="mojave_install11"></p>
<h1>第三步：推荐的BIOS设置</h1>
<p>如果您使用AMI UEFI BIOS在推荐的CustoMac桌面上进行安装，则选项很简单。 对于其他系统，请确保将BIOS设置为Optimized Defaults，将硬盘驱动器设置为AHCI模式。 以下是标准的AMI UEFI BIOS设置.</p>
<p><a href="https://www.tonymacx86.com/bios-uefi/130920-recommended-bios-uefi-settings-beginners.html" target="_blank" rel="noopener">Gigabyte AMI UEFI BIOS</a>，<a href="http://tonymacx86.blogspot.com/2010/04/iboot-multibeast-install-mac-os-x-on.html" target="_blank" rel="noopener">Gigabyte AWARD BIOS</a>，<a href="https://www.tonymacx86.com/user-builds/136796-tonymacx86s-asus-test-build-z97-i3-4340-hd4600-thunderbolt-ex-ii.html" target="_blank" rel="noopener">ASUS AMI UEFI BIOS</a>和<a href="https://www.tonymacx86.com/bios-uefi/143167-msi-9-series-motherboards-os-x-setup-configuration.html" target="_blank" rel="noopener">MSI AMI UEFI BIOS</a>。</p>
<ol>
<li>要访问BIOS / UEFI设置，请在系统启动时按住USB键盘上的<strong>Delete</strong>键</li>
<li>加载<strong>Optimized Defaults(优化默认值)</strong></li>
<li>如果您的CPU支持<strong>VT-d</strong>，请将其禁用</li>
<li>如果您的系统具有<strong>CFG-Lock</strong>，请将其禁用</li>
<li>如果您的系统具有<strong>Secure Boot Mode(安全启动模式)</strong>，请将其禁用</li>
<li>将OS Type设置为<strong>Other OS</strong></li>
<li>如果您的系统具有 <strong>IO Serial Port(IO串行端口)</strong>，请将其禁用</li>
<li>将XHCI Handoff设置为<strong>Enabled</strong></li>
<li>如果您有带有AWARD BIOS的6系列或x58系统，请禁用<strong>USB 3.0</strong></li>
<li>保存并退出。</li>
</ol>
<hr>
<p><img src="https://wpttt.github.io/images/mojave_install/mojave_install12.png" alt="mojave_install12"></p>
<h1>第四步：安装 MacOS Mojave</h1>
<p>至此几乎已经完成！ 接下来需要做的就是从USB驱动器启动并安装！ 为获得最佳效果，请将USB插入USB 2.0端口。</p>
<ol>
<li>打开电脑</li>
<li>按热键选择启动设备（技嘉主板为F12，华硕主板为F8，ASrock主板为F11）</li>
<li>选择<strong>USB</strong></li>
</ol>
<p><img src="https://wpttt.github.io/images/mojave_install/mojave_install13.png" alt="mojave_install13"></p>
<ol start="4">
<li>在Clover引导屏幕上，选择<strong>Boot OS X Install from Install macOS Mojave</strong></li>
<li>当您到达安装程序时，请选择语言。</li>
</ol>
<p><em>如果到达安装程序时遇到问题，可以使用引导屏幕上的空格键进入备用引导模式，例如详细和安全模式。 有关输入引导标志的更多说明，请参阅<a href="https://www.tonymacx86.com/basics/171680-clover-basics-switching-advice.html" target="_blank" rel="noopener">Clover Basics and Switching Advice</a>。</em></p>
<ol start="6">
<li>
<p>对于新安装的macOS，必须先按照以下步骤擦除并格式化目标驱动器，然后再继续。</p>
<ul>
<li>在顶部菜单栏中选择<strong>Utilities</strong>，然后打开<strong>Disk Utility(磁盘工具)</strong>\</li>
<li>在左列中突出显示Mojave安装的目标驱动器。\</li>
<li>单击**Erase(擦除)**按钮\</li>
<li>对于<strong>Name</strong>：键入<strong>Mojave</strong>（您可以稍后重命名）\</li>
<li>对于<strong>Format</strong>：选择<strong>Mac OS Extended（Journaled）</strong>\</li>
<li>单击<strong>Erase(擦除)</strong>\</li>
<li>关闭<strong>磁盘工具</strong></li>
</ul>
<ol>
<li>当安装程序询问您安装的位置时，请选择<strong>Mojave</strong></li>
<li>完成后，系统将自动重启。</li>
<li>按热键选择启动设备（技嘉主板为F12，华硕主板为F8，ASrock主板为F11）</li>
<li>选择<strong>USB</strong></li>
<li>在启动界面中，选择<strong>Mojave</strong></li>
<li>完成macOS安装，系统将自动重启。</li>
</ol>
</li>
</ol>
<hr>
<p><img src="https://wpttt.github.io/images/mojave_install/multibeast-0.png" alt="multibeast"></p>
<h1>第五步：使用MultiBeast进行安装后相关设置</h1>
<p>MultiBeast是一款一体化的post-installation工具，旨在实现从硬盘启动，并安装对音频，网络和图形的支持。 安装已完成，但驱动器尚未启动。 再次从USB启动，这次选择Mojave。</p>
<ol>
<li>
<p>按热键选择启动设备（技嘉主板为F12，华硕主板为F8，ASrock主板为F11）</p>
</li>
<li>
<p>选择<strong>USB</strong></p>
</li>
<li>
<p>在启动界面中，选择<strong>Mojave</strong></p>
</li>
<li>
<p>完成macOS设置</p>
</li>
<li>
<p>打开并运行<a href="https://www.tonymacx86.com/downloads" target="_blank" rel="noopener">MultiBeast</a><br>
<img src="https://wpttt.github.io/images/mojave_install/multibeast-1.png" alt="multibeast1"></p>
</li>
<li>
<p>如果这是全新安装，请单击<strong>Quick Start(快速启动)</strong>。 建议7/8/9/100/200/300系列CustoMac台式机和所有支持UEFI的系统使用<strong>UEFI Boot Mode(UEFI引导模式)</strong>。 建议将5/6 系列 CustoMac台式机和所有基于BIOS的系统使用<strong>Legacy Boot Mode(传统启动模式)</strong>。<br>
<img src="https://wpttt.github.io/images/mojave_install/multibeast-2.png" alt="multibeast2"></p>
</li>
<li>
<p>为您的系统选择适当的<strong>驱动程序</strong>选项。</p>
</li>
<li>
<p>单击 <strong>Customize(自定义)</strong> 以获取更多选项(此处本人勾选了inject ATI)<br>
<img src="https://wpttt.github.io/images/mojave_install/multibeast-3.png" alt="multibeast3"></p>
</li>
<li>
<p>单击<strong>Print</strong>或<strong>Save</strong>以备份配置</p>
</li>
<li>
<p>单击<strong>Build</strong>然后<strong>Install</strong><br>
<img src="https://wpttt.github.io/images/mojave_install/multibeast-4.png" alt="multibeast4"></p>
</li>
</ol>
<p>如果使用GeForce GTX 1050,1050 Ti，1060,1070,1070 Ti，1080,1080 Ti，TITAN Pascal和TITAN Xp’Pascal’显卡或NVIDIA GeForce GTX 750,750 Ti，950,960,970,980， 980 Ti和TITAN X’Maxwell’显卡，则此机不支持macOS Mojave图形驱动程序。 则需要其他NVIDIA驱动程序。</p>
<blockquote>
<p><img class="emoji" draggable="false" alt="⚠️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/26a0.png"/><strong>注意:<br>
<font color='#00688B'>Alternate NVIDIA Graphics Drivers are not available yet- if you have a Maxwell or Pascal based NVIDIA card, stay on High Sierra for now.</font></strong></p>
</blockquote>
<ol start="11">
<li>（可选）下载并安装其他NVIDIA图形驱动程序</li>
<li>重启</li>
</ol>
<p><img src="https://wpttt.github.io/images/mojave_install/mojave-desktop.png" alt="mojave_desktop"></p>
<p>棒棒棒！ 现在我们的 CustoMac上就装好了一个完全更新的 macOS Mojave可启动版本！ 还有一个超级方便的 USB-Rescue 驱动器。</p>
<p>此过程很容易遭受挫败，但不要放弃！如果遇到困难，tonymacx86论坛中有许多具有类似硬件的用户提供支持。</p>
<p>感谢全世界所有努力工作的开发人员，黑客和测试人员，没有他们就没有本安装指南。</p>
<hr>
<p><img src="https://wpttt.github.io/images/mojave_install/troubleshooting.png" alt="troubleshooting"></p>
<h1>故障排除和优化</h1>
<p>完成安装后，HDMI音频和iMessage等内容可能无法自动运行。 以下列表应用于在初始设置后完全优化您的系统。</p>
<font size=2>
<p><a href="https://www.tonymacx86.com/threads/readme-common-problems-changes-fixes-on-mojave.255823/" target="_blank" rel="noopener">[README] Mojave上的常见问题/更改/修复</a></p>
<p><a href="https://www.tonymacx86.com/threads/mojave-applehda-audio.260004/" target="_blank" rel="noopener">Mojave AppleHDA音频</a></p>
<p><a href="https://www.tonymacx86.com/threads/update-directly-to-macos-mojave.260654/" target="_blank" rel="noopener">直接更新到MacOS Mojave</a></p>
<p><a href="https://www.tonymacx86.com/threads/guide-intel-framebuffer-patching-using-whatevergreen.256490/" target="_blank" rel="noopener">[Guide]英特尔Framebuffer使用WhateverGreen进行修补</a></p>
<p><a href="https://www.tonymacx86.com/threads/guide-installing-3rd-party-kexts-el-capitan-sierra-high-sierra-mojave.268964/" target="_blank" rel="noopener">[GUIDE]安装第三方Kexts  -  El Capitan，Sierra，High Sierra，Mojave +</a></p>
<p><a href="https://www.tonymacx86.com/threads/solving-nvidia-driver-install-loading-problems.161256/" target="_blank" rel="noopener">解决NVIDIA驱动程序安装和加载问题</a></p>
<p><a href="https://www.tonymacx86.com/threads/an-idiots-guide-to-lilu-and-its-plug-ins.260063/" target="_blank" rel="noopener">一个iDiot的Lilu及其插件指南</a></p>
<p><a href="https://www.tonymacx86.com/threads/an-idiots-guide-to-imessage.196827/" target="_blank" rel="noopener">iDiot的iMessage指南</a></p>
<p><a href="https://www.tonymacx86.com/threads/macos-native-cpu-igpu-power-management.222982/" target="_blank" rel="noopener">macOS Native CPU / IGPU电源管理</a></p>
<p><a href="https://www.tonymacx86.com/threads/rough-guide-fix-for-finder-preview-not-working-on-mojave-10-14-1.264398/" target="_blank" rel="noopener">[粗略指南]修复Finder预览不适用于Mojave 10.14.1+</a></p>
<p><a href="https://www.tonymacx86.com/threads/tool-generate-proper-problem-reporting-files.235953/" target="_blank" rel="noopener">[TOOL] [生成正确的问题报告文件]</a></p>
<p><a href="https://www.tonymacx86.com/threads/faq-read-first-laptop-frequent-questions.164990/" target="_blank" rel="noopener">[FAQ]请先阅读！ 笔记本电脑常见问题</a></p>
<p><a href="https://www.tonymacx86.com/threads/guide-booting-the-os-x-installer-on-laptops-with-clover.148093/" target="_blank" rel="noopener">[Guide]使用Clover在LAPTOPS上引导OS X安装程序</a><br>
</font><br>
此表将持续更新</p>
<p><strong><font size=5>备用NVIDIA显卡驱动程序</font></strong></p>
<p>NVIDIA针对每个macOS版本在Web上单独发布备用图形驱动程序。 这些与Apple标配的驱动程序不同，应该被认为是实验性的。 过去，众所周知，驱动程序可以解决某些应用程序的OpenCL问题，并为某些设备提供更好的本机GPU电源管理。 这些驱动程序是目前唯一获得GeForce GTX 1050,1050 Ti，1060,1070,1070 Ti，1080,1080 Ti，TITAN Pascal和TITAN Xp’Pascal’显卡和NVIDIA GeForce GTX 750,750 Ti全加速的方法 ，950,960,970,980,980 Ti和TITAN X’Maxwell’显卡。 目前没有配备这些卡的Mac，因此macOS本身不支持。</p>
<blockquote>
<p><img class="emoji" draggable="false" alt="⚠️" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/26a0.png"/><strong>注意：<br>
备用NVIDIA显卡驱动程序尚不可用 - 如果您有基于Maxwell或Pascal的NVIDIA显卡，请立即停留在High Sierra。</strong></p>
</blockquote>
<p><strong>Clover Bootloader Credits</strong></p>
<p>UniBeast包含并提供来自Clover EFI Bootloader项目的文件。 有关使用的更多信息和来源，请参阅<a href="http://sourceforge.net/projects/cloverefiboot/" target="_blank" rel="noopener">Clover EFI bootloader</a>。 Clover v2是基于不同项目的开源：Clover，rEFIt，XNU，VirtualBox。 主要是EDK2的最新版本。</p>
<p><strong>Clover Notes：</strong></p>
<p>UniBeast基于我们对推荐的CustoMac系统的测试提供基本的引导加载程序支持。 要进一步引导加载程序自定义，请下载并运行<a href="http://sourceforge.net/projects/cloverefiboot/" target="_blank" rel="noopener">Clover官方程序包</a>。 高级用户也可以通过下载完整的源代码来编译Clover。</p>
<hr>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p><strong>主要配置</strong><font size=2><br>
主板：GIGABYTE Z390 GAMING X<br>
CPU：Intel i7-8700k<br>
内存： 美商海盗船 Vengeance LPX DDR4 3000GHz 16G<br>
显卡：AMD Radeon RX580-2048sp # (此卡不能正常驱动，据说是RX570换马甲后的版本，刷BIOS显卡型号为RX570后正常驱动)<br>
硬盘：WD GREEN SATA SSD M.2 2280 电源：酷冷至尊 战剑II 500W<br>
机箱：aigo 黑曼巴<br>
</font> <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>mac</category>
      </categories>
      <tags>
        <tag>hackintosh</tag>
      </tags>
  </entry>
  <entry>
    <title>绘制事件的时间分布图</title>
    <url>/2020/04/15/%E7%BB%98%E5%88%B6%E4%BA%8B%E4%BB%B6%E7%9A%84%E6%97%B6%E9%97%B4%E5%88%86%E5%B8%83%E5%9B%BE/</url>
    <content><![CDATA[<p>  本文介绍利用python在时间坐标下对地震事件进行统计和可视化。包括地震频度的统计、频度图的绘制以及<em>M</em>-t图的绘制。<br>
  重点需要掌握，时间轴上统计和绘图时需要完成的时间段和时间点的转换，以及时间轴样式的设置。</p>
<a id="more"></a>
<h1>绘制<em>M</em>-t图</h1>
<h2 id="简介"><a class="header-anchor" href="#简介">¶</a>简介</h2>
<p>在python中，利用matplotlib.pyplot.stem可以画茎叶图，stem的参数可以改变垂直线的类型，顶点的颜色大小等。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">stem(x,y, linefmt=<span class="literal">None</span>, markerfmt=<span class="literal">None</span>, basefmt=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure>
<h2 id="说明"><a class="header-anchor" href="#说明">¶</a>说明</h2>
<ul>
<li><code>x</code>, <code>y</code>分别是横纵坐标；</li>
<li><code>linefmt</code>:垂直线的颜色和类型；<code>linefmt=‘r-’</code>，代表红色的实线;</li>
<li><code>basefmt</code>指<code>y=0</code>那条直线；</li>
<li><code>markerfmt</code>设置顶点的类型和颜色，比如<code>C3.</code>，<code>C</code>(大写字母C)是默认的，后面数字应该是<code>0-9</code>，改变颜色，最后的<code>.</code>或者<code>o</code>（小写字母o）分别可以设置顶点为小实点或者大实点，空格表示没有顶点。</li>
</ul>
<p><strong>以下为线型对应的字符</strong></p>
<center>
<table>
<thead>
<tr>
<th>字符</th>
<th>线型</th>
</tr>
</thead>
<tbody>
<tr>
<td>‘-’</td>
<td>solid line</td>
</tr>
<tr>
<td>‘–’</td>
<td>dashed line</td>
</tr>
<tr>
<td>‘-.’</td>
<td>dash-dot line</td>
</tr>
<tr>
<td>‘:’</td>
<td>dotted line</td>
</tr>
</tbody>
</table>
</center>
<h1>绘制N-t图</h1>
<h2 id="简介-v2"><a class="header-anchor" href="#简介-v2">¶</a>简介</h2>
<p>python中可以利用<code>matplotlib.pyplot.bar</code>，通过绘制bar实现地震频度图的绘制。<br>
工具：</p>
<ul>
<li><code>matplotlib.pyplot</code></li>
<li><code>matplotlib.dates</code></li>
<li><code>pandas</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.bar(x,height,width=<span class="number">0.8</span>,bottom=<span class="literal">None</span>,align=<span class="string">'center'</span>,data=Nonecolor=<span class="string">'b'</span>,alpha=<span class="number">1.</span>..)</span><br></pre></td></tr></table></figure>
<h3 id="参数说明"><a class="header-anchor" href="#参数说明">¶</a><strong>参数说明</strong></h3>
<p><strong>xerr, yerr</strong>:<br>
scalar or array-like of shape(N,) or shape(2, N), optional；If not <em>None</em>, add horizontal / vertical errorbars to the bar tips. The values are +/- sizes relative to the data:</p>
<ul>
<li>scalar: symmetric +/- values for all bars</li>
<li>shape(N,): symmetric +/- values for each bar</li>
<li>shape(2, N): Separate - and + values for each bar. First row contains the lower errors, the second row contains the upper<br>
errors.</li>
<li><em>None</em>: No errorbar. (Default)</li>
</ul>
<h1>实例</h1>
<blockquote>
<p><strong>Notice!</strong><br>
本节最关键的问题在于地震数目的统计，和时间坐标的控制</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.dates <span class="keyword">as</span> mdate</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># macos下解决中文乱码</span></span><br><span class="line">plt.rcParams[<span class="string">'font.sans-serif'</span>] = [<span class="string">'Arial Unicode MS'</span>]</span><br><span class="line">plt.rcParams[<span class="string">'axes.unicode_minus'</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">mc = <span class="number">3</span>  <span class="comment"># 设置最小震级</span></span><br><span class="line"><span class="comment"># 读入目录为DataFrame</span></span><br><span class="line">eq = pd.read_csv(<span class="string">'gsty.txt'</span>,sep=<span class="string">' '</span>,</span><br><span class="line">                 encoding=<span class="string">'gbk'</span>,skipinitialspace=<span class="literal">True</span>,</span><br><span class="line">                 names=[<span class="string">'date'</span>,<span class="string">'time'</span>,<span class="string">'lat'</span>,<span class="string">'lon'</span>,<span class="string">'dep'</span>,<span class="string">'mag'</span>,<span class="string">'diming'</span>])</span><br><span class="line">eq[<span class="string">'datetime'</span>] = eq.apply(<span class="keyword">lambda</span> x: x.date+<span class="string">' '</span>+x.time, axis=<span class="number">1</span>)</span><br><span class="line">eq[<span class="string">'datetime_f'</span>] = pd.to_datetime(eq[<span class="string">'datetime'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图片布局</span></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">5</span>),dpi=<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用stem绘制M-t图</span></span><br><span class="line">ax1 = fig.add_subplot(<span class="number">211</span>)</span><br><span class="line">x = eq[eq.mag&gt;=mc].datetime_f</span><br><span class="line">y = eq[eq.mag&gt;=mc].mag</span><br><span class="line">ax1.stem(x,y,linefmt=<span class="string">'k-'</span>, basefmt=<span class="string">'r-'</span>, markerfmt=<span class="string">'C2 '</span>,label=<span class="string">'地震'</span>)</span><br><span class="line">plt.ylim(mc<span class="number">-1</span>,eq.mag.max()+<span class="number">1</span>)</span><br><span class="line">plt.ylabel(<span class="string">'震级(Ml)'</span>)</span><br><span class="line">plt.gcf().autofmt_xdate()</span><br><span class="line">plt.xlabel(<span class="string">"时间"</span>)</span><br><span class="line">plt.legend()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制频度图前的准备</span></span><br><span class="line"><span class="comment"># 将时间设置为index，便于按时间段进行数量统计</span></span><br><span class="line">eq.set_index(<span class="string">'datetime_f'</span>,inplace=<span class="literal">True</span>,drop=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># eq_p = eq.to_period('M') # 按月显示</span></span><br><span class="line"><span class="comment"># print(eq_p.index.asfreq('M'))</span></span><br><span class="line">afreq = eq.mag.resample(<span class="string">'A'</span>).count()  <span class="comment"># 按年统计</span></span><br><span class="line">mfreq = eq.mag.resample(<span class="string">'M'</span>).count()  <span class="comment"># 按月统计</span></span><br><span class="line">dfreq = eq.resample(<span class="string">'d'</span>).count().to_period(<span class="string">'d'</span>)  <span class="comment"># 按天统计</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用bar绘制频度图</span></span><br><span class="line">ax2 = fig.add_subplot(<span class="number">212</span>)</span><br><span class="line">x = dfreq.index.start_time</span><br><span class="line">y = dfreq.mag</span><br><span class="line"><span class="comment">#设置x轴为时间格式，这句非常重要，否则x轴显示的将是类似于‘736268’这样的转码后的数格式</span></span><br><span class="line">ax2.xaxis.set_major_formatter(mdate.DateFormatter(<span class="string">'%Y-%m-%d'</span>))</span><br><span class="line">plt.xticks(pd.date_range(dfreq.index[<span class="number">0</span>].start_time,dfreq.index[<span class="number">-1</span>]end_time,freq=<span class="string">'10d'</span>), rotation=<span class="number">45</span>)</span><br><span class="line">ax2.bar(x,y,color=<span class="string">'c'</span>,align=<span class="string">'edge'</span>,alpha=<span class="number">0.8</span>)</span><br><span class="line">plt.ylabel(<span class="string">'频数'</span>)</span><br><span class="line">plt.xlabel(<span class="string">"时间"</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>运行以上代码生成如下图片</p>
<p><img src="https://wpttt.github.io/images/plot-time1.png" alt="fig1"></p>
<h2 id="说明-v2"><a class="header-anchor" href="#说明-v2">¶</a>说明</h2>
<p>以下为在时间坐标下绘制数据时的关键顺序</p>
<ol>
<li>读取数据后，利用pd.set_index设置时间列为index</li>
<li>利用时间index对表数据进行统计<code>eq.resample('d').count().toperiod('d')</code>，此处d表示按天采样，获取每日地震数量。<br>
<strong><font color=deepskyblue>注意：此时生成的dataframe中index为时间段，不可直接用于时间坐标（时间坐标用时间点）</font></strong></li>
<li>设置x轴时间格式，<code>ax.xaxis.set_major_formatter(mdate.DateFormatter('%Y-%m-%d'))</code></li>
<li>对index时间段取start_time作为时间点，利用始末时间点生成时间序列，作为x轴坐标；<code>pd.date_range</code></li>
<li>绘图</li>
</ol>
<blockquote>
<p><img class="emoji" draggable="false" alt="👉" src="https://twemoji.maxcdn.com/v/12.1.5/72x72/1f449.png"/> <strong><font color=deepskyblue>Notice:</font></strong><br>
可选参数<em>color</em>， <em>edgecolor</em>， <em>linewidth</em>，<em>xerr</em>和<em>yerr</em>可以是标量或长度等于bar数目的序列。这是绘制条形图作为堆叠条形图或烛台图的基础。:wstar:<br>
详细信息：<em>xerr</em>和<em>yerr</em>被直接传递到:meth:‘errorbar’，所以他们也可以有形状2xN,独立规定上下误差。</p>
</blockquote>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Matplotlib</tag>
        <tag>M-t图</tag>
        <tag>N-t图</tag>
        <tag>时间坐标</tag>
      </tags>
  </entry>
  <entry>
    <title>驾考科目一</title>
    <url>/2020/04/17/%E9%A9%BE%E8%80%83%E7%A7%91%E7%9B%AE%E4%B8%80/</url>
    <content><![CDATA[<h1>速度和距离</h1>
<ul>
<li>高速公路行驶，车速<font color=red>&gt;100km/h</font>时，应与同车道前车保持<font color=red>100m</font>以上的距离。</li>
<li>机动车在高速公路上行驶，遇有雾、雨、雪、沙尘、冰雹等低能见度气象条件时，应当遵守下列规定：<a id="more"></a>
<ul>
<li>能见度<font color=red>&lt;200m</font>时，车速<font color=red>≤60km/h</font>，距前车<font color=red>&gt;100m</font>，开雾灯、近光灯、示廓灯和前后位灯；</li>
<li>能见度<font color=red>&lt;100m</font>时，车速<font color=red>≤40km/h</font>，距前车<font color=red>&gt;50m</font>，开雾灯、近光灯、示廓灯、前后位灯和<font color=red>危险报警闪光灯</font>。</li>
<li>能见度<font color=red>&lt;50m</font>时，车速<font color=red>≤20km/h</font>，尽快驶离高速公里。</li>
</ul>
</li>
</ul>
<h1>速度（高速公里）</h1>
<ul>
<li>同向<font color=red>四车道</font>左到右最低限速依次为：<font color=red>110、90、90、60</font>；</li>
<li>同向<font color=red>三车道</font>左到右最低限速依次为：<font color=red>110、90、60</font>；</li>
<li>同向<font color=red>两车道</font>左到右最低限速依次为：<font color=red>100、60</font>。</li>
</ul>
<h1>超速处罚</h1>
<ul>
<li>超过规定时速50%，200~2000罚款，可以并处吊销机动车驾驶证</li>
</ul>
<h1>12分</h1>
<ol>
<li>驾驶与准驾车型不服的机动车</li>
<li>因酒后驾驶机动车</li>
<li>驾驶营运客车（<s>公共汽车</s>）、校车超载20%以上</li>
<li>造成交通事故后逃逸，尚不构成犯罪的</li>
<li>上路未悬挂号牌，遮挡号牌、污损号牌、不按规定安装号牌</li>
<li>伪造、变造号牌、行驶证、驾驶证、小车标牌，或使用其他机动车号牌、行驶证的</li>
<li>高速上倒车、逆行、穿越中央分隔带掉头</li>
<li>驾驶营运客车在高速车道内停车</li>
<li>驾驶中型以上客车货车、校车、危险品运输车在高速、城市快速路上超速20%；在高速公路、城市快速路以外的道路上行驶超过规定时速50％以上；以及驾驶其他机动车行驶超过规定时速50%以上</li>
<li>连续驾驶中型以上客车、危险品运输车超过4个小时未停车休息或停车休息不足20分钟</li>
<li>未取得校车驾驶资格驾驶校车</li>
</ol>
<h1>6分</h1>
<ol>
<li>驾驶证被暂扣期间驾驶机动车</li>
<li>驾驶机动车违反道路交通信号等通行</li>
<li>驾驶营运客车（<s>公共汽车</s>）、校车人数超载未达20%，或者驾驶其他客车人数超载20%以上</li>
<li>驾驶中型以上客货汽车、校车、危险品车在高速、城快上超速20%以内</li>
<li>驾驶中型以上客货汽车、校车、危险品车在高速、城快外的道路上或其他机动车超速20%~50%</li>
<li>驾驶货车重量超载20%以上，或违反规定载客的</li>
<li>驾驶营运客车意外的机动车在高速公路车道内停车</li>
<li>驾驶机动车在高速公路或城快上违法占用应急车道行驶</li>
<li>低能见度条件下，在高速公路上不按规定行驶</li>
<li>驾车运载超限的不可解体的物品，未按指定时间、路线、速度行驶，或未悬挂明显标志</li>
<li>驾车运载爆炸物品、易燃易爆化学物品、剧毒、放射性等危险品，未按指定时间、路线、速度行驶，或未悬挂警示标志并采取必要的安全措施</li>
<li>以隐瞒、欺骗手段补领机动车驾驶证</li>
<li>连续驾驶中型以上客车、危险品运输车以外机动车超4个小时未停车休息或休息时间少于20分钟</li>
<li>驾驶机动车不按规定避让校车</li>
</ol>
<h1>3分</h1>
<ol>
<li>驾驶营运客车（不包括公共汽车）、校车以外的载客汽车载人超过核定人数未达20%的</li>
<li>驾驶中型以上载客载货汽车、危险物品运输车辆在高速公路、城市快速路以外的道路上行驶或者驾驶其他机动车行驶超过规定时速未达20% 的</li>
<li>驾驶货车载物超过核定载质量未达30% 的</li>
<li>驾驶机动车在高速公路上行驶低于规定最低时速的</li>
<li>驾驶禁止驶入高速公路的机动车驶入高速公路的</li>
<li>驾驶机动车在高速公路或者城市快速路上不按规定车道行驶的</li>
<li>驾驶机动车行经人行横道，不按规定减速、停车、避让行人的</li>
<li>驾驶机动车违反禁令标志、禁止标线指示的</li>
<li>驾驶机动车不按规定超车、让行的，或者逆向行驶的</li>
<li>驾驶机动车违反规定牵引挂车的</li>
<li>在道路上车辆发生故障、事故停车后，不按规定使用灯光和设置警告标志的</li>
<li>上道路行驶的机动车未按规定定期进行安全技术检验的</li>
</ol>
<h1>罚款</h1>
<ul>
<li>驾驶<font color=red><strong>拼装</strong></font>或<font color=red><strong>报废</strong></font>机动车 —— 强制报废，200~2000罚款，吊销驾驶证</li>
</ul>
<h1>警告标志</h1>
<table>
<thead>
<tr>
<th>含义</th>
<th>标志</th>
<th>含义</th>
<th>标志</th>
</tr>
</thead>
<tbody>
<tr>
<td>两侧变窄</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/692a0ac7adc947c1b6835483b5be1e40.jpg" width="100" height="100" alt="两侧变窄" align=center></td>
<td>右侧变窄</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/4352c48383034791b9f0da7c13e5619f.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>左侧变窄</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/9bffbc8b12fe4c9bb99c102204c10736.jpg" width="100" height="100" align=center></td>
<td>窄桥</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/66a96a7ab4014f2c99ee45ec7cfe33a4.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>注意行人</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/d436454ee236469fadd9c9d720e6a267.jpg" width="100" height="100" align=center></td>
<td>双向交通</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/2c948686ad5b4734bdc9fba3808678a2.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>注意儿童</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/eeb5cb9905e044c08d46555c02ceb87b.jpg" width="100" height="100" align=center></td>
<td>注意信号灯</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/17f54bd47b8e4bbe9ce5c2e1d6ce81ec.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>注意牲畜</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/d86b06d7a27a442a9615b33eb560e7a7.jpg" width="100" height="100" align=center></td>
<td>注意野生动物</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/fb73c058a98e4d1ca5465f60f63dfb6e.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>注意落石</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/f5ff10e0001449378850b7ecbdde84ae.jpg" width="100" height="100" align=center></td>
<td>注意横风</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/ab29a1741a124513b3d94a2ff49410d8.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>易滑路段</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/4808e67c4a52415194140f458b1e28ac.jpg" width="100" height="100" align=center></td>
<td>傍山险路</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/8f9129ebe7144c13afcbf59b6a3a28aa.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>堤坝路</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/54a538de4d4943909fba46b6eccd35b8.jpg" width="100" height="100" align=center></td>
<td>村庄或集镇</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/884e529299f749b1a8be5a1e53fdeac1.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>注意隧道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/c289a513fe74458f8dbe256486a9189b.jpg" width="100" height="100" align=center></td>
<td>驼峰桥</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/e5ad5b2d156346ea85107141a22fe6e9.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>路面高突</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/f7665c1abc67481684dfe39af5f9edf5.jpg" width="100" height="100" align=center></td>
<td>路面低洼</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/715533d1ae6c4d9aaebd211b5fb0fc4a.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>过水路面</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/a5cd763c08f2403085b3e924b2655c58.jpg" width="100" height="100" align=center></td>
<td>----</td>
<td></td>
</tr>
<tr>
<td>有人道口</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/3d8dc3278e014ac7a814d292d15bf6fd.jpg" width="100" height="100" align=center></td>
<td>无人道口</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/4575ad610cae45f5a4e78509c7e7cce5.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>多股相交</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/5df30432dae14c4ea511f3895131b0a8.jpg" width="100" height="100" align=center></td>
<td>无人道口50米</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/d86ca5d8689a4263888ff50263616520.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>无人道口100米</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/cc59b37586ad43bf971967fe4f4f0621.jpg" width="100" height="100" align=center></td>
<td>无人道口150米</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/cead04a3964f4a379ab286d4ec2e644b.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>注意非机动车</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/12b3d0893528432d8bcf018457f72772.jpg" width="100" height="100" align=center></td>
<td>注意残疾人</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/c08b7c8f71dd4a8d83b35e58083578c8.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>事故易发路段</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/7d8e1be2a32b41818757496440920675.jpg" width="100" height="100" align=center></td>
<td>注意慢行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/e1a4918ed2b4422db114568193cb44f7.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>左右绕行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/efa9f9a8164b4a24b9a6c80cebf9baa0.jpg" width="100" height="100" align=center></td>
<td>左侧绕行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/0055e265e06f48bfa62a54071280b61b.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>右侧绕行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/829ac120826b470bb386fb1468d38e31.jpg" width="100" height="100" align=center></td>
<td>注意危险</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/4d2bd414487f43e1beb4ccaca510ce97.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>施工路段</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/3e399077d7064cb59a4607b7dc144f4c.jpg" width="100" height="100" align=center></td>
<td>建议速度</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/4c225ce8ea144c87aaf190496da34d1f.jpg" width="100" height="50" align=center></td>
</tr>
<tr>
<td>隧道开灯</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/0b4c8cc476b44763a7610f83df23db57.jpg" width="100" height="100" align=center></td>
<td>潮汐车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/9e21906ce9e148c8b3fc2e19ec69f6a8.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>注意保持车距</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/667022fc318d4cf79de8c5f0d12662eb.jpg" width="100" height="100" align=center></td>
<td>分离式道路</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/4bfacc5a7099407eaf9508b00dafba3f.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>注意合流</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/509025b0fde04510b46f200c7eb81dcd.jpg" width="100" height="100" align=center></td>
<td>避险车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/b8ac819c9085457b88bf57177a65cbd0.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>两个以上的<br>连续下坡</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/417dc8a95f3e40afa28e631983dfa792.jpg" width="100" height="100" align=center></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h1>禁令标志</h1>
<table>
<thead>
<tr>
<th>含义</th>
<th>标志</th>
<th>含义</th>
<th>标志</th>
</tr>
</thead>
<tbody>
<tr>
<td>停车让行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/5b4cb1cd6bf047438d58cc977c4f7377.jpg" width="100" height="100" align=center></td>
<td>减速让行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/b474581c7bfa413a952121b5fa074619.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>对向先行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/6e7ff7ad10834e008f875cb27a492308.jpg" width="100" height="100" align=center></td>
<td>禁止小型客车</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/83caa31e78c047458289576e22e67b55.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>禁止通行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/f07be7113d3c4775a3eb993b507cbf78.jpg" width="100" height="100" align=center></td>
<td>禁止驶入</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/57b473b612054a58a5839fc57056ea64.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>禁止左转</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/e2a094eb56664e5a9979dd064b20dc56.jpg" width="100" height="100" align=center></td>
<td>禁止右转</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/bdb00ea7a88f4643bd3bd4586ef1a70d.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>禁止直行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/ad93e1c7d6704dfcb437623ed2bcd78a.jpg" width="100" height="100" align=center></td>
<td>禁止左右转弯</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/1f9d61d50f3f4058bf17e23456ceb71d.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>禁止直行和左转</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/c56c03055a20445685fbbba8fb812b47.jpg" width="100" height="100" align=center></td>
<td>禁止直行和右转</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/43fdcbe2e9ca48b2849cf8306284076e.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>禁止掉头</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/0a6c21e37ca949d09f5fd59fa0cd38c9.jpg" width="100" height="100" align=center></td>
<td>禁止超车</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/132bdf34639e4665944f36d401f7d417.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>解除禁止超车</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/7298507b2363434dad22abe06e5f2211.jpg" width="100" height="100" align=center></td>
<td></td>
<td></td>
</tr>
<tr>
<td>禁止停放车辆</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/2c58a3bd5ba34b9d8eeb10d67f40677c.jpg" width="100" height="100" align=center></td>
<td>禁止长时停车</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/c384f706fd804fbea7c2e27473c3e139.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>限宽3m</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/ae7eae5b6cb244c1ae7cc9ca92424404.jpg" width="100" height="100" align=center></td>
<td>限高3.5m</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/8781dde8d8b740e5953c88ff19868780.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>限速最高40</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/ee6ad68fcd2448a9b57978286f9bb9d9.jpg" width="100" height="100" align=center></td>
<td>解除限速</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/366a1be455e64f62800bf935b141d09f.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>停车检查</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/06ffadb16bb0452dbbf9ff2f21486084.jpg" width="100" height="100" align=center></td>
<td>海关</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/e76763c8a879413ba9eb608c39423752.jpg" width="100" height="100" align=center></td>
</tr>
</tbody>
</table>
<h1>指示（指路）标志</h1>
<table>
<thead>
<tr>
<th>含义</th>
<th>标志</th>
<th>含义</th>
<th>标志</th>
</tr>
</thead>
<tbody>
<tr>
<td>只准直行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/e4c1cdb04e6f4f63920e55952b91a9cd.jpg" width="100" height="100" align=center></td>
<td>向左转弯</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/cbc8ccef225349b696c4e6ffd16b9c5f.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>向右转弯</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/cdac326b5521401c8dd7d2b53911cf3d.jpg" width="100" height="100" align=center></td>
<td>直行和右转弯</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/e9b37ff1a3c5498bbe6a7b053ecef150.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>直行和左转弯</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/62c433ea2fbd411c8484c13af7ac0182.jpg" width="100" height="100" align=center></td>
<td>左右转弯</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/8333bc0765df4ce5ba6319f92afe2cf6.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>靠右侧车道行驶</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/653a4d2c9f9a402b8bf4145bc31d00bc.jpg" width="100" height="100" align=center></td>
<td>靠左侧车道行驶</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/6a3cb82b0f6b473abaf80ece0084e678.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>立体直行左转</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/3c9105c1a84045db94d81d1aca6ac951.jpg" width="100" height="100" align=center></td>
<td>立体直行右转</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/cd6ac618dc4a46bf8f52ef3615605448.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>环岛行驶</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/f65fe0791f534c6b872a9645fef675e1.jpg" width="100" height="100" align=center></td>
<td>向左单行路</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/8d3e2bf4dd414fedbf74e8d2fd6a6ed3.jpg" width="100" height="60" align=center></td>
</tr>
<tr>
<td>向右单行路</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/97a09d32a37a4efa9e3d88e73b9cc945.jpg" width="100" height="60" align=center></td>
<td>直行单行路</td>
<td><center><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/b9c0db39bae9490b948c10b28d8f979f.jpg" width="60" height="100" align=center></center></td>
</tr>
<tr>
<td>步行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/15f5774346f941678195091f1192bbc6.jpg" width="100" height="100" align=center></td>
<td>应当鸣喇叭</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/655772c68257478f8e77fa547681e40c.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>人行横道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/3dbeca0d792247e7be2a0cb39a23ede1.jpg" width="100" height="100" align=center></td>
<td>最低限速50</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/a03ae73e59a34848998cf520e645670e.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>干路先行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/d0fbf807501f4fc68523c539c1da6db8.jpg" width="100" height="100" align=center></td>
<td>会车先行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/3c356ac94f894c7684435c4ebaba5856.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>右转车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/45cec950a5e14ff79affd825899a08f5.jpg" width="100" height="100" align=center></td>
<td>左转车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/8204e30857d84a5c98bdbc03a460a24e.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>直行车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/56b681cbbda346e6894c0a5efa61a626.jpg" width="100" height="100" align=center></td>
<td></td>
<td><img src="" width="100" height="100" align=center></td>
</tr>
<tr>
<td>直左合用车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/de1487d8a0334799b15c7a8e26a643df.jpg" width="100" height="100" align=center></td>
<td>直右合用车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/22cb4f262ead43a08d2664afa3e2c64e.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>掉头车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/85bde0d45e3544dd8033f8b6f5b3a6cf.jpg" width="100" height="100" align=center></td>
<td>掉左合用车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/6a636df8059c4f3a8ff8cea7d41ab65d.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>分向行驶车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/99de2b94446142138cdb82b7c8119e72.jpg" width="100" height="70" align=center></td>
<td>公交专用车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/825e4daa232e49adba3af9ca22d8e02b.jpg" width="100" height="70" align=center></td>
</tr>
<tr>
<td>机动车行驶</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/d7ccac7fb8bf4749920fda875e68f4f5.jpg" width="100" height="100" align=center></td>
<td>机动车车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/7892a933ac964047ae845c75b9f695a4.jpg" width="100" height="70" align=center></td>
</tr>
<tr>
<td>非机动车行驶</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/43b46c50cd55445d89ebe4b6d1a927da.jpg" width="100" height="100" align=center></td>
<td>非机动车车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/bb194545eca147a69eb0b573f74c96a9.jpg" width="100" height="70" align=center></td>
</tr>
<tr>
<td>BRT专用车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/d976c39e343b4c75810c2684934aff3a.jpg" width="100" height="70" align=center></td>
<td>多成员车专道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/c14c5aa68fa44441afe67d15fac38546.jpg" width="100" height="90" align=center></td>
</tr>
<tr>
<td>掉头</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/2dfcee5d0f334bd6a65138046f1fdafb.jpg" width="100" height="100" align=center></td>
<td>交叉路口预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/b470fa5276f442bf82d7dc18a6f4d812.jpg" width="100" height="50" align=center></td>
</tr>
<tr>
<td>十字路口预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/6e1648b854a6437e9f8e456109af2341.jpg" width="100" height="50" align=center></td>
<td>丁字路口预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/70b31ee9cb674552894624eacf6ab6ee.jpg" width="100" height="40" align=center></td>
</tr>
<tr>
<td>Y型路口预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/2992876362754145a749c6ee0fefb6ca.jpg" width="100" height="100" align=center></td>
<td>环形交口预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/d524105c6d084503a14f15414025f14a.jpg" width="100" height="40" align=center></td>
</tr>
<tr>
<td><center>互通式立体<br>交叉路口预告</center></td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/145a8b78007a432581008375f06690b2.jpg" width="100" height="50" align=center></td>
<td>地点距离</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/446833ea906140cfaf47930c35cf5208.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>国道编号</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/609374d8edc94a4180ac87a0f52cb65f.jpg" width="100" height="50" align=center></td>
<td>省道编号</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/be6c6c6dfd274a00a54ea9176afc501c.jpg" width="100" height="50" align=center></td>
</tr>
<tr>
<td>县道编号</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/214aeb79fd364cec84e27d925e01a624.jpg" width="100" height="50" align=center></td>
<td>乡道编号</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/6477a452fee245d6916675aa6868e596.jpg" width="100" height="50" align=center></td>
</tr>
<tr>
<td>露天停车场</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/75ad260c0675455f9a6fa1a1782a054a.jpg" width="100" height="100" align=center></td>
<td>室内停车场</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/f7475759dda54c1699ff1907cc6cccbf.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>错车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/a54509af515f40dbb31d4521c07986cd.jpg" width="100" height="80" align=center></td>
<td>超高绕行</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/3301402ee9534942a684559a699c22c3.jpg" width="100" height="70" align=center></td>
</tr>
<tr>
<td>此路不通</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/462d2786e72e4bdb8e7cc6bcb7fa7188.jpg" width="100" height="100" align=center></td>
<td>线性诱导标志</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/e1093cec77b4437894e76d5b9d3954cf.jpg" width="100" height="30" align=center></td>
</tr>
<tr>
<td>车道数减少</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/559068f1b59a495a9f11ffa4d3736a83.jpg" width="100" height="100" align=center></td>
<td>车道数增加</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/054e107752c34d2c990b3a2f029ed7cf.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>交通监控设备</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/940ccfc818b84d9a9e92c58d6b176023.jpg" width="100" height="100" align=center></td>
<td>隧道出口距离</td>
<td><center><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/218f22a013764600a86f4451790e2874.jpg" width="80" height="100" align=center></center></td>
</tr>
<tr>
<td>右侧通行</td>
<td><center><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/36b12487fe714cffb608ff8733db6292.jpg" width="50" height="100" align=center></center></td>
<td>左侧通行</td>
<td><center><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/bd0d39ca60ce406890d7fa1800a3f703.jpg" width="50" height="100" align=center></center></td>
</tr>
<tr>
<td>两侧通行</td>
<td><center><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/55d4b94474ba4f02a88343ef79f93d76.jpg" width="50" height="100" align=center></center></td>
<td></td>
<td></td>
</tr>
<tr>
<td>高速入口预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/6c9d4d2181be4490928f049b8c065eed.jpg" width="100" height="100" align=center></td>
<td>高速公路<br>地点方向预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/7de8319aca374f629cd5048357c1582e.jpg" width="100" height="40" align=center></td>
</tr>
<tr>
<td>高速公路<br>地点距离预</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/ed07b11d40554741825ca91649619b4c.jpg" width="100" height="100" align=center></td>
<td>高速公路<br>命名编号</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/b28a941e38594af39850a818408ac562.jpg" width="100" height="100" align=center></td>
</tr>
<tr>
<td>下一出口预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/10b97301af924de5ac391effe5dea721.jpg" width="100" height="65" align=center></td>
<td>高速公路<br>交通广播频率</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/eedccb7cb74145bbb1b9ef2c4a0dd6e1.jpg" width="100" height="90" align=center></td>
</tr>
<tr>
<td>右侧出口预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/da75901108a14c8baad5ceebf6fbb5fb.jpg" width="80" height="100" align=center></td>
<td>左侧出口预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/51a82508430b41828a4c8ef93a748738.jpg" width="80" height="100" align=center></td>
</tr>
<tr>
<td>高速公路起点</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/dcd17c844444423fa5f0a1c8965c7872.jpg" width="90" height="100" align=center></td>
<td>高速公路终点</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/8c8b406a647b4e07b024b9a0398daac1.jpg" width="90" height="100" align=center></td>
</tr>
<tr>
<td>停车领卡</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/fd3801a8ad9748b08f4102501e0edcb2.jpg" width="80" height="100" align=center></td>
<td>设有ETC<br>的收费站</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/a0a03fe27a4a4323992bdbdb53830de0.jpg" width="100" height="80" align=center></td>
</tr>
<tr>
<td>高速公路<br>ETC车道</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/9fa1ffbf4c9344a796f06b59228b2c75.jpg" width="80" height="100" align=center></td>
<td>高速公路特殊<br>天气建议速度</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/648d5db40603466ca85514b4acb27787.jpg" width="80" height="100" align=center></td>
</tr>
<tr>
<td>高速公路<br>紧急电话</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/87386506872544b183d8e6cff7ead23e.jpg" width="100" height="100" align=center></td>
<td>高速公路<br>救援电话</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/72b1525405c24077be905a1a68f42a70.jpg" width="100" height="60" align=center></td>
</tr>
<tr>
<td>高速公路<br>紧急停车带</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/7df30622172443ddb91fda02ea898d63.jpg" width="100" height="100" align=center></td>
<td>高速公路<br>加油站</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/142e0fd4d5b9494da8240825b35ed798.jpg" width="80" height="100" align=center></td>
</tr>
<tr>
<td>高速公路<br>服务区预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/f1adfcc6000a4e4d8e28dd1acc4d6e99.jpg" width="100" height="80" align=center></td>
<td>高速公路<br>停车区预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/6b5e0c8b4a764882b7c25d8100234352.jpg" width="100" height="80" align=center></td>
</tr>
<tr>
<td>高速公路<br>停车场预告</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/2c6532b687524655bcbd7682ba467f9b.jpg" width="100" height="80" align=center></td>
<td></td>
<td></td>
</tr>
<tr>
<td>旅游区标志</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/7169aa17fa9d4ab9819cc59172ba197e.jpg" width="100" height="70" align=center></td>
<td>旅游区距离</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/e0eca6ddccf04832b5cfcb1349eeac1e.jpg" width="100" height="70" align=center></td>
</tr>
<tr>
<td>旅游区方向</td>
<td><img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/9d11deb82c7a4ad2aec5f8cb6cfa9be8.jpg" width="100" height="70" align=center></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h1>交警手势</h1>
<ul>
<li>停止信号<br>
<img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/7b7d928b19114f23b656d24c2fe2fe34.jpg" alt=""></li>
<li>直行信号<br>
<img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/e951bcb4ef094148af26316a06917549.jpg" alt=""></li>
<li>左转弯信号<br>
<img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/80790f9de57e4198ac8c694c4cbd9bf0.jpg" alt=""><br>
<img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/c8378c1ababc4ec18e58b91e9fcbde2e.jpg" alt=""></li>
<li>左转弯待转信号<br>
<img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/a7f7883e483740d3b4a7a4a6680d8e47.jpg" alt=""></li>
<li>右转弯信号<br>
<img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/8cf49eae668c4b2082cbe37153684c20.jpg" alt=""><br>
<img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/a9e349320cef4b6d934f8d4118c7abf4.jpg" alt=""></li>
<li>变道信号<br>
<img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/58d5c7db8cfb47eaaedb0b20b0a38723.jpg" alt=""></li>
<li>减速慢行信号<br>
<img src="https://jiakao-web.image.mucang.cn/jiakao-web/2019/12/30/14/dbd74b86cc834254b0f8d18408229ede.jpg" alt=""></li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>生活技能</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>驾考</tag>
      </tags>
  </entry>
</search>
